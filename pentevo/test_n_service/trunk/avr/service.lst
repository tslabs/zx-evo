
AVRA   Ver. 1.2.3 service.asm Mon May 15 15:34:22 2023


          .LIST
          .LISTMAC
         
         ;.EQU    DEBUG_FPGA_OUT=1
         
          .DEF    MODE1   =R10    ;глобальный регистр, (.7 - 0=VGAmode, 1=TVmode) читается из EEPROM
          .DEF    LANG    =R11    ;глобальный регистр, язык интерфейса (умнож.на 2) читается из EEPROM
          .DEF    INT6VECT=R12    ;глобальный регистр, (обработчики INT6)
          .DEF    FF      =R13    ;глобальный регистр, всегда = $FF
          .DEF    ONE     =R14    ;глобальный регистр, всегда = $01
          .DEF    NULL    =R15    ;глобальный регистр, всегда = $00
          .DEF    DATA    =R16
          .DEF    TEMP    =R17
          .DEF    COUNT   =R18
          .DEF    BITS    =R19
          .DEF    FLAGS1  =R20    ;глобальный регистр, флаги:
                                 ;.0 - PUTCHAR вызывает UARTDIRECT_PUTCHAR
                                 ;.1 - PUTCHAR вызывает UART_PUTCHAR
                                 ;.2 - PUTCHAR вызывает SCR_PUTCHAR
                                 ;.3 - лог обмена SD в RS-232
                                 ;.4 - RS-232 RTS/CTS flow control
          .DEF    TMP2    =R22
          .DEF    TMP3    =R23
          .DEF    WL      =R24
          .DEF    WH      =R25
         ; DATA,TEMP,COUNT,WL,WH,XL,XH,ZL,ZH - могут передавать параметры в функции и возвращать результаты
         ; Y - указатель на стек данных (растёт вниз)
         ; R0,R1 и остальные - используются локально
         ;
         ;--------------------------------------
         ;
          .EQU    DBSIZE_HI       =HIGH(2048)
          .EQU    DBMASK_HI       =HIGH(2047)
          .EQU    nCONFIG         =PORTF0
          .EQU    nSTATUS         =PORTF1
          .EQU    CONF_DONE       =PORTF2
         ;
         ;--------------------------------------
         ;регистры fpga
          .EQU    TEMP_REG        =$A0
          .EQU    SD_CS0          =$A1
          .EQU    SD_CS1          =$A2
          .EQU    FLASH_LOADDR    =$A3
          .EQU    FLASH_MIDADDR   =$A4
          .EQU    FLASH_HIADDR    =$A5
          .EQU    FLASH_DATA      =$A6
          .EQU    FLASH_CTRL      =$A7
          .EQU    SCR_LOADDR      =$A8    ; текущая позиция печати
          .EQU    SCR_HIADDR      =$A9    ;
          .EQU    SCR_ATTR        =$AA    ; запись атрибута в ATTR
          .EQU    SCR_FILL        =$AB    ; прединкремент адреса и запись атрибута в ATTR и в память
                                         ; (если только дергать spics_n, будет писаться предыдущий ATTR)
          .EQU    SCR_CHAR        =$AC    ; прединкремент адреса и запись символа в память и ATTR в память
                                         ; (если только дергать spics_n, будет писаться предыдущий символ)
          .EQU    SCR_MOUSE_TEMP  =TEMP_REG
          .EQU    SCR_MOUSE_X     =$AD
          .EQU    SCR_MOUSE_Y     =$AE
          .EQU    SCR_MODE        =$AF    ; .7 - 0=VGAmode, 1=TVmode; .2.1.0 - режимы;
         
          .EQU    MTST_CONTROL    =$50
          .EQU    MTST_PASS_CNT0  =$51
          .EQU    MTST_PASS_CNT1  =TEMP_REG
          .EQU    MTST_FAIL_CNT0  =$52
          .EQU    MTST_FAIL_CNT1  =TEMP_REG
         
          .EQU    COVOX           =$53
         
          .EQU    INT_CONTROL     =$54
         ;
         ;--------------------------------------
         ;
          .MACRO  SPICS_SET
                  SBI     PORTB,0
          .ENDMACRO
         
          .MACRO  SPICS_CLR
                  CBI     PORTB,0
          .ENDMACRO
         
          .MACRO  LED_ON
                  CBI     PORTB,7
          .ENDMACRO
         
          .MACRO  LED_OFF
                  SBI     PORTB,7
          .ENDMACRO
         
         ;
         ;--------------------------------------
         ;
          .DSEG
                          .ORG    $0300
          DSTACK:
          .EQU    UART_TXBSIZE    =128            ;размер буфера д.б. равен СТЕПЕНЬ_ДВОЙКИ байт (...32,64,128,256)
D:000300    UART_TX_BUFF:   .BYTE   UART_TXBSIZE    ;адрес д.б. кратен UART_TXBSIZE
          .EQU    UART_RXBSIZE    =128            ;размер буфера д.б. равен СТЕПЕНЬ_ДВОЙКИ байт
D:000380    UART_RX_BUFF:   .BYTE   UART_RXBSIZE    ;адрес д.б. кратен UART_RXBSIZE
         
                          .ORG    $0400
          BUFSECT:        ;буфер сектора
                          .ORG    $0600
          BUF4FAT:        ;временный буфер (FAT и т.п.)
                          .ORG    $0800
          MEGABUFFER:
                          .ORG    RAMEND
          HSTACK:
                          .ORG    $0100
D:000100    RND:            .BYTE   4
D:000104    NEWFRAME:       .BYTE   1
D:000105    GLB_STACK:      .BYTE   2
D:000107    GLB_Y:          .BYTE   2
         ;
         ;--------------------------------------
         ;
          .ESEG
                          .ORG    $0F00
          EE_DUMMY:       .DB     $54,$53
E:000F00 5453
          EE_MODE1:       .DB     $FF
E:000F02 FF
          EE_LANG:        .DB     $00
E:000F03 00
         ;
         ;--------------------------------------
         ;
          .CSEG
                  .ORG    0
C:000000 940c 2a0c         JMP     START
C:000002 940c 2a0c         JMP     START   ;EXT_INT0       ; IRQ0 Handler
C:000004 940c 2a0c         JMP     START   ;EXT_INT1       ; IRQ1 Handler
C:000006 940c 2a0c         JMP     START   ;EXT_INT2       ; IRQ2 Handler
C:000008 940c 2a0c         JMP     START   ;EXT_INT3       ; IRQ3 Handler
C:00000a 940c 0f4b         JMP     EXT_INT4                ; IRQ4 Handler
C:00000c 940c 124d         JMP     EXT_INT5                ; IRQ5 Handler
C:00000e 940c 177b         JMP     EXT_INT6                ; IRQ6 Handler
C:000010 940c 2a0c         JMP     START   ;EXT_INT7       ; IRQ7 Handler
C:000012 940c 2a0c         JMP     START   ;TIM2_COMP      ; Timer2 Compare Handler
C:000014 940c 2a0c         JMP     START   ;TIM2_OVF       ; Timer2 Overflow Handler
C:000016 940c 2a0c         JMP     START   ;TIM1_CAPT      ; Timer1 Capture Handler
C:000018 940c 2a0c         JMP     START   ;TIM1_COMPA     ; Timer1 CompareA Handler
C:00001a 940c 2a0c         JMP     START   ;TIM1_COMPB     ; Timer1 CompareB Handler
C:00001c 940c 2a0c         JMP     START   ;TIM1_OVF       ; Timer1 Overflow Handler
C:00001e 940c 2a0c         JMP     START   ;TIM0_COMP      ; Timer0 Compare Handler
C:000020 940c 0f3d         JMP     TIM0_OVF                ; Timer0 Overflow Handler
C:000022 940c 2a0c         JMP     START   ;SPI_STC        ; SPI Transfer Complete Handler
C:000024 940c 2a0c         JMP     START   ;USART0_RXC     ; USART0 RX Complete Handler
C:000026 940c 2a0c         JMP     START   ;USART0_DRE     ; USART0,UDR Empty Handler
C:000028 940c 2a0c         JMP     START   ;USART0_TXC     ; USART0 TX Complete Handler
C:00002a 940c 2a0c         JMP     START   ;ADC            ; ADC Conversion Complete Handler
C:00002c 940c 2a0c         JMP     START   ;EE_RDY         ; EEPROM Ready Handler
C:00002e 940c 2a0c         JMP     START   ;ANA_COMP       ; Analog Comparator Handler
C:000030 940c 2a0c         JMP     START   ;TIM1_COMPC     ; Timer1 CompareC Handler
C:000032 940c 2a0c         JMP     START   ;TIM3_CAPT      ; Timer3 Capture Handler
C:000034 940c 0e04         JMP     TIM3_COMPA              ; Timer3 CompareA Handler
C:000036 940c 2a0c         JMP     START   ;TIM3_COMPB     ; Timer3 CompareB Handler
C:000038 940c 2a0c         JMP     START   ;TIM3_COMPC     ; Timer3 CompareC Handler
C:00003a 940c 2a0c         JMP     START   ;TIM3_OVF       ; Timer3 Overflow Handler
C:00003c 940c 0d0e         JMP     USART1_RXC              ; USART1 RX Complete Handler
C:00003e 940c 0d30         JMP     USART1_DRE              ; USART1,UDR Empty Handler
C:000040 940c 2a0c         JMP     START   ;USART1_TXC     ; USART1 TX Complete Handler
C:000042 940c 2a0c         JMP     START   ;TWI_INT        ; Two-wire Serial Interface Interrupt Handler
C:000044 940c 2a0c         JMP     START   ;SPM_RDY        ; SPM Ready Handler
         
                  .DW     0,0
C:000046 0000
                  .DB     "================"
C:000048 3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
                  .DB     "  Test&Service  "
C:000050 20205465737426536572766963652020
                  .DB     "================"
C:000058 3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
         ;
         ;--------------------------------------
         ;
          .INCLUDE "_message.inc"
         ;NOTE! Sure no warning like:
         ; "warning: A .db segment with an odd number of bytes is detected. A zero byte is added."
         ;
         ;------------------------------------------------------------------------------
         ;
          .EQU    MAX_LANG=2
         ;
         ;------------------------------------------------------------------------------
         ;
          MSG_TITLE1:     ;          ZX Evolution Test&Service (110203)         ;
                  .DB     $20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$5A,$58,$20,$45,$76,$6F,$6C,$75,$74,$69,$6F,$6E,$20,$54,$65,$73,$74,$26,$53,$65,$72,$76,$69,$63,$65,$20                 ,0,0
C:000060 202020202020202020205A582045766F6C7574696F6E20546573742653657276696365200000
         ;width limited! "01234567890123456789012345678901234567890123456789012"
         ;
         ;------------------------------------------------------------------------------
         ;
          MSG_TITLE2:
                  .DB     $16,15,24,$68,$74,$74,$70,$3A,$2F,$2F,$77,$77,$77,$2E,$4E,$65,$64,$6F,$50,$43,$2E,$63,$6F,$6D,$2F,0
C:000073 160F18687474703A2F2F7777772E4E65646F50432E636F6D2F00
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_PINTEST:
                  .DW     MSG_PINTEST_RUS*2, MSG_PINTEST_ENG*2
C:000080 0104
          MSG_PINTEST_RUS:
                  .DB     $0D,$0A,$0A,$8F,$E0,$AE,$A2,$A5,$E0,$AA,$A0,$20,$A2,$EB,$A2,$AE,$A4,$AE,$A2,$20,$41,$54,$4D,$45,$47,$41,$31,$32,$38,$2E,$2E,$2E,$20,0
C:000082 0D0A0A8FE0AEA2A5E0AAA020A2EBA2AEA4AEA22041544D4547413132382E2E2E2000
          MSG_PINTEST_ENG:
                  .DB     $0D,$0A,$0A,$41,$54,$4D,$45,$47,$41,$31,$32,$38,$20,$70,$69,$6E,$73,$20,$63,$68,$65,$63,$6B,$2E,$2E,$2E,$20,0
C:000093 0D0A0A41544D4547413132382070696E7320636865636B2E2E2E2000
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_PINTEST_OK:
                  .DW     MSG_PINTEST_OK_RUS*2, MSG_PINTEST_OK_ENG*2
C:0000a1 0146
          MSG_PINTEST_OK_RUS:
                  .DB     $8F,$E0,$AE,$A1,$AB,$A5,$AC,$20,$AD,$A5,$20,$AE,$A1,$AD,$A0,$E0,$E3,$A6,$A5,$AD,$AE,$2E,0,0
C:0000A3 8FE0AEA1ABA5AC20ADA520AEA1ADA0E0E3A6A5ADAE2E0000
          MSG_PINTEST_OK_ENG:
                  .DB     $4E,$6F,$20,$70,$72,$6F,$62,$6C,$65,$6D,$73,$20,$66,$6F,$75,$6E,$64,$2E,0,0
C:0000AF 4E6F2070726F626C656D7320666F756E642E0000
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_PINTEST_ERROR:
                  .DW     MSG_PINTEST_ERROR_RUS*2, MSG_PINTEST_ERROR_ENG*2
C:0000b9 0176
          MSG_PINTEST_ERROR_RUS:
                  .DB     $0D,$0A,$8E,$A1,$AD,$A0,$E0,$E3,$A6,$A5,$AD,$A0,$20,$AF,$E0,$AE,$A1,$AB,$A5,$AC,$A0,$20,$AD,$A0,$20,$AF,$AE,$E0,$E2,$E3,$28,$2D,$A0,$E5,$29,$3A,$20,0
C:0000BB 0D0A8EA1ADA0E0E3A6A5ADA020AFE0AEA1ABA5ACA020ADA020AFAEE0E2E3282DA0E5293A2000
          MSG_PINTEST_ERROR_ENG:
                  .DB     $0D,$0A,$48,$61,$76,$65,$20,$61,$20,$70,$72,$6F,$62,$6C,$65,$6D,$20,$61,$74,$20,$70,$6F,$72,$74,$28,$73,$29,$3A,$20,0
C:0000CE 0D0A4861766520612070726F626C656D20617420706F72742873293A2000
         ;
         ;------------------------------------------------------------------------------
         ;
          MSG_PINTEST_PA:
                  .DB     $50,$41,$78,$20,0,0
C:0000DD 504178200000
          MSG_PINTEST_PB:
                  .DB     $50,$42,$78,$20,0,0
C:0000E0 504278200000
          MSG_PINTEST_PC:
                  .DB     $50,$43,$78,$20,0,0
C:0000E3 504378200000
          MSG_PINTEST_PD:
                  .DB     $50,$44,$35,$20,0,0
C:0000E6 504435200000
          MSG_PINTEST_PE:
                  .DB     $50,$45,$78,$20,0,0
C:0000E9 504578200000
          MSG_PINTEST_PG:
                  .DB     $50,$47,$78,$20,0,0
C:0000EC 504778200000
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_HALT:
                  .DW     MSG_HALT_RUS*2, MSG_HALT_ENG*2
C:0000ef 01e2
          MSG_HALT_RUS:
                  .DB     $0D,$0A,$8F,$E0,$AE,$A3,$E0,$A0,$AC,$AC,$A0,$20,$AE,$E1,$E2,$A0,$AD,$AE,$A2,$AB,$A5,$AD,$A0,$21,0,0
C:0000F1 0D0A8FE0AEA3E0A0ACACA020AEE1E2A0ADAEA2ABA5ADA0210000
          MSG_HALT_ENG:
                  .DB     $0D,$0A,$50,$72,$6F,$67,$72,$61,$6D,$20,$69,$73,$20,$68,$61,$6C,$74,$65,$64,$21,0,0
C:0000FE 0D0A50726F6772616D2069732068616C746564210000
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_STATUSOF_CRLF:
                  .DW     MSG_STATUSOF_RUS*2,MSG_STATUSOF_ENG*2
C:000109 021a
          MLMSG_STATUSOF_CR:
                  .DW     (MSG_STATUSOF_RUS*2)+1,(MSG_STATUSOF_ENG*2)+1
C:00010b 021b
          MSG_STATUSOF_RUS:
                  .DB     $0A,$0D,$91,$AE,$E1,$E2,$AE,$EF,$AD,$A8,$A5,$20,0,0
C:00010D 0A0D91AEE1E2AEEFADA8A5200000
          MSG_STATUSOF_ENG:
                  .DB     $0A,$0D,$53,$74,$61,$74,$75,$73,$20,$6F,$66,$20,0,0
C:000114 0A0D537461747573206F66200000
          MSG_POWER_PG:
                  .DB     $50,$4F,$57,$45,$52,$47,$4F,$4F,$44,$3D,0,0
C:00011B 504F574552474F4F443D0000
          MSG_POWER_VCC5:
                  .DB     $2C,$20,$56,$43,$43,$35,$3D,0
C:000121 2C20564343353D00
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_POWER_ON:
                  .DW     MSG_POWER_ON_RUS*2, MSG_POWER_ON_ENG*2
C:000125 024e
          MSG_POWER_ON_RUS:
                  .DB     $0D,$0A,$82,$AA,$AB,$EE,$E7,$A5,$AD,$A8,$A5,$20,$AF,$A8,$E2,$A0,$AD,$A8,$EF,$20,$41,$54,$58,$2E,$2E,$2E,$0A,0
C:000127 0D0A82AAABEEE7A5ADA8A520AFA8E2A0ADA8EF204154582E2E2E0A00
          MSG_POWER_ON_ENG:
                  .DB     $0D,$0A,$41,$54,$58,$20,$70,$6F,$77,$65,$72,$20,$75,$70,$2E,$2E,$2E,$0A,0,0
C:000135 0D0A41545820706F7765722075702E2E2E0A0000
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_CFGFPGA:
                  .DW     MSG_CFGFPGA_RUS*2, MSG_CFGFPGA_ENG*2
C:00013f 0282
          MSG_CFGFPGA_RUS:
                  .DB     $0D,$0A,$87,$A0,$A3,$E0,$E3,$A7,$AA,$A0,$20,$AA,$AE,$AD,$E4,$A8,$A3,$E3,$E0,$A0,$E6,$A8,$A8,$20,$A2,$20,$46,$50,$47,$41,$2E,$2E,$2E,$20,0,0
C:000141 0D0A87A0A3E0E3A7AAA020AAAEADE4A8A3E3E0A0E6A8A820A220465047412E2E2E200000
          MSG_CFGFPGA_ENG:
                  .DB     $0D,$0A,$53,$65,$74,$20,$46,$50,$47,$41,$20,$63,$6F,$6E,$66,$69,$67,$75,$72,$61,$74,$69,$6F,$6E,$2E,$2E,$2E,$20,0,0
C:000153 0D0A536574204650474120636F6E66696775726174696F6E2E2E2E200000
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_DONE1:
                  .DW     MSG_DONE1_RUS*2, MSG_DONE1_ENG*2
C:000162 02c8
          MSG_DONE1_RUS:
                  .DB     $87,$A0,$A2,$A5,$E0,$E8,$A5,$AD,$AE,$2E,$0D,$0A
C:000164 87A0A2A5E0E8A5ADAE2E0D0A
                  .DB     $8F,$E0,$AE,$A2,$A5,$E0,$AA,$A0,$20,$AE,$A1,$AC,$A5,$AD,$A0,$20,$E1,$20,$46,$50,$47,$41,$2E,$2E,$2E,$20,0,0
C:00016A 8FE0AEA2A5E0AAA020AEA1ACA5ADA020E120465047412E2E2E200000
          MSG_DONE1_ENG:
                  .DB     $44,$6F,$6E,$65,$2E,$0D,$0A,$46,$50,$47,$41,$20,$64,$61,$74,$61,$20,$65,$78,$63,$68,$61,$6E,$67,$65,$20,$74,$65,$73,$74,$2E,$2E,$2E,$20,0,0
C:000178 446F6E652E0D0A4650474120646174612065786368616E676520746573742E2E2E200000
         ;
         ;------------------------------------------------------------------------------
         ;
          MSG_OK: .DB     $4F,$6B,$2E,0
C:00018A 4F6B2E00
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_SOMEERRORS:
                  .DW     MSG_SOMEERRORS_RUS*2, MSG_SOMEERRORS_ENG*2
C:00018c 031c
          MSG_SOMEERRORS_RUS:
                  .DB     $85,$E1,$E2,$EC,$20,$AE,$E8,$A8,$A1,$AA,$A8,$21,0,0
C:00018E 85E1E2EC20AEE8A8A1AAA8210000
          MSG_SOMEERRORS_ENG:
                  .DB     $57,$65,$20,$68,$61,$76,$65,$20,$73,$6F,$6D,$65,$20,$65,$72,$72,$6F,$72,$73,$21,0,0
C:000195 5765206861766520736F6D65206572726F7273210000
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_SPI_TEST:
                  .DW     MSG_SPITEST_RUS*2, MSG_SPITEST_ENG*2
C:0001a0 0344
          MSG_SPITEST_RUS:
                  .DB     $0D,$0A,$8A,$AE,$AB,$A8,$E7,$A5,$E1,$E2,$A2,$AE,$20,$AD,$A5,$AF,$E0,$A0,$A2,$A8,$AB,$EC,$AD,$EB,$E5,$20,$A1,$A0,$A9,$E2,$20,$A8,$A7,$20,$35,$30,$30,$30,$30,$20,$2D,0
C:0001A2 0D0A8AAEABA8E7A5E1E2A2AE20ADA5AFE0A0A2A8ABECADEBE520A1A0A9E220A8A7203530303030202D00
          MSG_SPITEST_ENG:
                  .DB     $0D,$0A,$51,$75,$61,$6E,$74,$69,$74,$79,$20,$77,$72,$6F,$6E,$67,$20,$62,$79,$74,$65,$20,$66,$72,$6F,$6D,$20,$35,$30,$30,$30,$30,$20,$2D,0,0
C:0001B7 0D0A5175616E746974792077726F6E6720627974652066726F6D203530303030202D0000
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_KBD_DETECT:
                  .DW     MSG_KBD_DETECT_RUS*2, MSG_KBD_DETECT_ENG*2
C:0001c9 0396
          MSG_KBD_DETECT_RUS:
                  .DB     $0D,$0A,$8F,$E0,$AE,$A2,$A5,$E0,$AA,$A0,$20,$AA,$AB,$A0,$A2,$A8,$A0,$E2,$E3,$E0,$EB,$20,$50,$53,$2F,$32,$2E,$2E,$2E,$0D,$0A,0
C:0001CB 0D0A8FE0AEA2A5E0AAA020AAABA0A2A8A0E2E3E0EB2050532F322E2E2E0D0A00
          MSG_KBD_DETECT_ENG:
                  .DB     $0D,$0A,$50,$53,$2F,$32,$20,$6B,$65,$79,$62,$6F,$61,$72,$64,$20,$63,$68,$65,$63,$6B,$2E,$2E,$2E,$0D,$0A,0,0
C:0001DB 0D0A50532F32206B6579626F61726420636865636B2E2E2E0D0A0000
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_NORESPONSE:
                  .DW     MSG_NORESPONSE_RUS*2, MSG_NORESPONSE_ENG*2
C:0001e9 03d6
          MSG_NORESPONSE_RUS:
                  .DB     $20,$2E,$2E,$2E,$AD,$A5,$E2,$20,$AE,$E2,$A2,$A5,$E2,$A0,$0D,$0A,0,0
C:0001EB 202E2E2EADA5E220AEE2A2A5E2A00D0A0000
          MSG_NORESPONSE_ENG:
                  .DB     $20,$2E,$2E,$2E,$6E,$6F,$20,$72,$65,$73,$70,$6F,$6E,$73,$65,$0D,$0A,0
C:0001F4 202E2E2E6E6F20726573706F6E73650D0A00
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_UNWANTED:
                  .DW     MSG_UNWANTED_RUS*2, MSG_UNWANTED_ENG*2
C:0001fd 03fe
          MSG_UNWANTED_RUS:
                  .DB     $20,$2E,$2E,$2E,$AD,$A5,$AE,$A6,$A8,$A4,$A0,$A5,$AC,$EB,$A9,$20,$AE,$E2,$A2,$A5,$E2,$0D,$0A,0
C:0001FF 202E2E2EADA5AEA6A8A4A0A5ACEBA920AEE2A2A5E20D0A00
          MSG_UNWANTED_ENG:
                  .DB     $20,$2E,$2E,$2E,$75,$6E,$77,$61,$6E,$74,$65,$64,$20,$72,$65,$73,$70,$6F,$6E,$73,$65,$0D,$0A,0
C:00020B 202E2E2E756E77616E74656420726573706F6E73650D0A00
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_TXFAIL:
                  .DW     MSG_TXFAIL_RUS*2, MSG_TXFAIL_ENG*2
C:000217 0432
          MSG_TXFAIL_RUS:
                  .DB     $20,$2E,$2E,$2E,$E1,$A1,$AE,$A9,$20,$AF,$E0,$A8,$20,$AF,$A5,$E0,$A5,$A4,$A0,$E7,$A5,$0D,$0A,0
C:000219 202E2E2EE1A1AEA920AFE0A820AFA5E0A5A4A0E7A50D0A00
          MSG_TXFAIL_ENG:
                  .DB     $20,$2E,$2E,$2E,$66,$61,$69,$6C,$20,$74,$6F,$20,$74,$72,$61,$6E,$73,$6D,$69,$74,$0D,$0A,0,0
C:000225 202E2E2E6661696C20746F207472616E736D69740D0A0000
         ;
         ;------------------------------------------------------------------------------
         ;
          MENU_MAIN:
                  .DB     6,3,26+2,8,$9F,$F0
C:000231 06031C089FF0
                  .DW     MTST_SHOW_REPORT,1000
C:000234 25e2
                 ;handlers
                  .DW     TESTPS2KEYB
C:000236 10cc
                  .DW     TESTZXKEYB
C:000237 1804
                  .DW     TESTMOUSE
C:000238 12b1
                  .DW     TESTBEEP
C:000239 18ed
                  .DW     TESTVIDEO
C:00023a 25b7
                  .DW     TESTRS232
C:00023b 2940
                  .DW     TESTSD
C:00023c 0997
                  .DW     FLASHER
C:00023d 1e97
                 ;lang0
                  .DB     $C4,$C4,$C4,$C4,$C4,$C4,$C4,$C4,$C4,$C4,$C4,$C4,$C4,$C4,$C4,$C4,$C4,$C4,$C4,$C4,$C4,$C4,$C4,$C4,$C4,$C4
C:00023E C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4
                  .DB     $92,$A5,$E1,$E2,$20,$AA,$AB,$A0,$A2,$A8,$A0,$E2,$E3,$E0,$EB,$20,$50,$53,$2F,$32,$20,$20,$20,$20,$20,$20
C:00024B 92A5E1E220AAABA0A2A8A0E2E3E0EB2050532F32202020202020
                  .DB     $92,$A5,$E1,$E2,$20,$AA,$AB,$A0,$A2,$A8,$A0,$E2,$E3,$E0,$EB,$20,$5A,$58,$20,$A8,$20,$A4,$E0,$2E,$20,$20
C:000258 92A5E1E220AAABA0A2A8A0E2E3E0EB205A5820A820A4E02E2020
                  .DB     $92,$A5,$E1,$E2,$20,$AC,$EB,$E8,$A8,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
C:000265 92A5E1E220ACEBE8A82020202020202020202020202020202020
                  .DB     $92,$A5,$E1,$E2,$20,$42,$45,$45,$50,$2F,$54,$41,$50,$45,$4F,$55,$54,$2F,$43,$4F,$56,$4F,$58,$20,$20,$20
C:000272 92A5E1E220424545502F544150454F55542F434F564F58202020
                  .DB     $92,$A5,$E1,$E2,$20,$A2,$A8,$A4,$A5,$AE,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
C:00027F 92A5E1E220A2A8A4A5AE20202020202020202020202020202020
                  .DB     $92,$A5,$E1,$E2,$20,$52,$53,$2D,$32,$33,$32,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
C:00028C 92A5E1E22052532D323332202020202020202020202020202020
                  .DB     $84,$A8,$A0,$A3,$AD,$AE,$E1,$E2,$A8,$AA,$A0,$20,$53,$44,$2F,$4D,$4D,$43,$20,$20,$20,$20,$20,$20,$20,$20
C:000299 84A8A0A3ADAEE1E2A8AAA02053442F4D4D432020202020202020
                  .DB     $8F,$E0,$AE,$A3,$E0,$A0,$AC,$AC,$A8,$E0,$AE,$A2,$A0,$AD,$A8,$A5,$20,$46,$6C,$61,$73,$68,$2D,$52,$4F,$4D
C:0002A6 8FE0AEA3E0A0ACACA8E0AEA2A0ADA8A520466C6173682D524F4D
                 ;lang1
                  .DB     $C4,$C4,$C4,$C4,$C4,$C4,$C4,$C4,$C4,$C4,$C4,$C4,$C4,$C4,$C4,$C4,$C4,$C4,$C4,$C4,$C4,$C4,$C4,$C4,$C4,$C4
C:0002B3 C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4
                  .DB     $50,$53,$2F,$32,$20,$6B,$65,$79,$62,$6F,$61,$72,$64,$20,$74,$65,$73,$74,$20,$20,$20,$20,$20,$20,$20,$20
C:0002C0 50532F32206B6579626F61726420746573742020202020202020
                  .DB     $5A,$58,$20,$6B,$65,$79,$62,$6F,$61,$72,$64,$20,$74,$65,$73,$74,$20,$61,$6E,$64,$20,$65,$74,$63,$20,$20
C:0002CD 5A58206B6579626F617264207465737420616E64206574632020
                  .DB     $4D,$6F,$75,$73,$65,$20,$74,$65,$73,$74,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
C:0002DA 4D6F757365207465737420202020202020202020202020202020
                  .DB     $42,$45,$45,$50,$2F,$54,$41,$50,$45,$4F,$55,$54,$2F,$43,$4F,$56,$4F,$58,$20,$74,$65,$73,$74,$20,$20,$20
C:0002E7 424545502F544150454F55542F434F564F582074657374202020
                  .DB     $56,$69,$64,$65,$6F,$20,$74,$65,$73,$74,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
C:0002F4 566964656F207465737420202020202020202020202020202020
                  .DB     $52,$53,$2D,$32,$33,$32,$20,$74,$65,$73,$74,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
C:000301 52532D3233322074657374202020202020202020202020202020
                  .DB     $53,$44,$2F,$4D,$4D,$43,$20,$64,$69,$61,$67,$6E,$6F,$73,$74,$69,$63,$20,$20,$20,$20,$20,$20,$20,$20,$20
C:00030E 53442F4D4D4320646961676E6F73746963202020202020202020
                  .DB     $57,$72,$69,$74,$65,$20,$46,$6C,$61,$73,$68,$2D,$52,$4F,$4D,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
C:00031B 577269746520466C6173682D524F4D2020202020202020202020
         ;width fixed!   "12345678901234567890123456"
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_MENU_HELP:
                  .DW     MSG_MENU_HELP_RUS*2, MSG_MENU_HELP_ENG*2
C:000328 0654
          MSG_MENU_HELP_RUS:
                  .DB     $16,5,14,$8E,$E1,$AD,$AE,$A2,$AD,$EB,$A5,$20,$AA,$AB,$A0,$A2,$A8,$E8,$A8,$20,$E3,$AF,$E0,$A0,$A2,$AB,$A5,$AD,$A8,$EF,$3A     ,$16,5,15,$3C,$18,$3E,$2C,$20,$3C,$19,$3E
C:00032A 16050E8EE1ADAEA2ADEBA520AAABA0A2A8E8A820E3AFE0A0A2ABA5ADA8EF3A16050F3C183E2C203C193E
                  .DB     $16,5,16,$3C,$45,$6E,$74,$65,$72,$3E,$20,$2D,$20,$22,$84,$A0,$22,$2C,$20,$A2,$EB,$A1,$AE,$E0
C:00033F 1605103C456E7465723E202D202284A0222C20A2EBA1AEE0
                  .DB     $16,5,17,$3C,$45,$73,$63,$3E,$20,$2D,$20,$22,$8D,$A5,$E2,$22,$2C,$20,$AE,$E2,$AC,$A5,$AD,$A0,$2C,$20,$A2,$EB,$E5,$AE,$A4,$20
C:00034B 1605113C4573633E202D20228DA5E2222C20AEE2ACA5ADA02C20A2EBE5AEA420
                  .DB     $16,5,18,$83,$AE,$E0,$EF,$E7,$A8,$A5,$20,$AA,$AB,$A0,$A2,$A8,$E8,$A8,$20,$28,$E2,$AE,$AB,$EC,$AA,$AE,$20,$A2,$20,$AC,$A5,$AD,$EE,$29,$3A,$20
C:00035B 16051283AEE0EFE7A8A520AAABA0A2A8E8A82028E2AEABECAAAE20A220ACA5ADEE293A20
                  .DB     $16,5,19,$3C,$53,$63,$72,$6F,$6C,$6C,$4C,$6F,$63,$6B,$3E,$20,$2D,$20,$E0,$A5,$A6,$A8,$AC,$20,$54,$56,$2F,$56,$47,$41
C:00036D 1605133C5363726F6C6C4C6F636B3E202D20E0A5A6A8AC2054562F564741
                  .DB     $16,5,20,$3C,$43,$61,$70,$73,$4C,$6F,$63,$6B,$3E,$20,$2D,$20,$EF,$A7,$EB,$AA,$20,$A8,$AD,$E2,$A5,$E0,$E4,$A5,$A9,$E1,$A0     ,0
C:00037C 1605143C436170734C6F636B3E202D20EFA7EBAA20A8ADE2A5E0E4A5A9E1A000
          MSG_MENU_HELP_ENG:
                  .DB     $16,5,14,$55,$73,$61,$67,$65,$3A                           ,$16,5,15,$3C,$18,$3E,$2C,$20,$3C,$19,$3E
C:00038C 16050E55736167653A16050F3C183E2C203C193E
                  .DB     $16,5,16,$3C,$45,$6E,$74,$65,$72,$3E,$20,$2D,$20,$22,$59,$65,$73,$22,$2C,$20,$73,$65,$6C,$65,$63,$74
C:000396 1605103C456E7465723E202D2022596573222C2073656C656374
                  .DB     $16,5,17,$3C,$45,$73,$63,$3E,$20,$2D,$20,$22,$4E,$6F,$22,$2C,$20,$63,$61,$6E,$63,$65,$6C,$2C,$20,$65,$78,$69,$74,$20
C:0003A3 1605113C4573633E202D20224E6F222C2063616E63656C2C206578697420
                  .DB     $16,5,18,$48,$6F,$74,$2D,$6B,$65,$79,$73,$20,$28,$69,$6E,$20,$6D,$65,$6E,$75,$20,$6F,$6E,$6C,$79,$29,$3A,$20
C:0003B2 160512486F742D6B6579732028696E206D656E75206F6E6C79293A20
                  .DB     $16,5,19,$3C,$53,$63,$72,$6F,$6C,$6C,$4C,$6F,$63,$6B,$3E,$20,$2D,$20,$74,$6F,$67,$67,$6C,$65,$20,$54,$56,$2F,$56,$47,$41,$20,$6D,$6F,$64,$65
C:0003C0 1605133C5363726F6C6C4C6F636B3E202D20746F67676C652054562F564741206D6F6465
                  .DB     $16,5,20,$3C,$43,$61,$70,$73,$4C,$6F,$63,$6B,$3E,$20,$2D,$20,$6C,$61,$6E,$67,$75,$61,$67,$65,$20,$73,$77,$69,$74,$63,$68     ,0
C:0003D2 1605143C436170734C6F636B3E202D206C616E67756167652073776974636800
         ;width limited!          "567890123456789012345678901234567"
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_TBEEP:
                  .DW     MSG_TBEEP_RUS*2, MSG_TBEEP_ENG*2
C:0003e2 07c8
          MSG_TBEEP_RUS:
                  .DB     $16,26,10,$83,$E6,$16,10,12,$3C,$18,$3E,$2C,$20,$3C,$19,$3E,$20,$2D,$20,$A8,$A7,$AC,$A5,$AD,$A5,$AD,$A8,$A5,$20,$E7,$A0,$E1,$E2,$AE,$E2,$EB,$15,$0F,0,0
C:0003E4 161A0A83E6160A0C3C183E2C203C193E202D20A8A7ACA5ADA5ADA8A520E7A0E1E2AEE2EB150F0000
          MSG_TBEEP_ENG:
                  .DB     $16,26,10,$48,$7A,$16,14,12,    $3C,$18,$3E,$2C,$20,$3C,$19,$3E,$20,$2D,$20,$66,$72,$65,$71,$75,$65,$6E,$63,$65    ,$15,$0F,0,0
C:0003F8 161A0A487A160E0C3C183E2C203C193E202D206672657175656E6365150F0000
         ;width limited!                          "0123456789012345678901234567"
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_TZXK_1:
                  .DW     MSG_TZXK_1_RUS*2, MSG_TZXK_1_ENG*2
C:000408 0814
          MSG_TZXK_1_RUS:
                  .DB     $16,14, 7,$8A,$AB,$A0,$A2,$A8,$A0,$E2,$E3,$E0,$A0,$20,$5A,$58,$16,35, 7,$84,$A6,$AE,$A9,$E1,$E2,$A8,$AA,0
C:00040A 160E078AABA0A2A8A0E2E3E0A0205A5816230784A6AEA9E1E2A8AA00
          MSG_TZXK_1_ENG:
                  .DB     $16,15, 7,$5A,$58,$20,$4B,$65,$79,$62,$6F,$61,$72,$64,$16,35, 7,$4A,$6F,$79,$73,$74,$69,$63,$6B,0
C:000418 160F075A58204B6579626F6172641623074A6F79737469636B00
         ;
         ;------------------------------------------------------------------------------
         ;
          MSG_TZXK_2:
                  .DB     $16,11, 9,$31,$20,$32,$20,$33,$20,$34,$20,$35,$20,$36,$20,$37,$20,$38,$20,$39,$20,$30
C:000425 160B0931203220332034203520362037203820392030
                  .DB     $16,11,10,$51,$20,$57,$20,$45,$20,$52,$20,$54,$20,$59,$20,$55,$20,$49,$20,$4F,$20,$50
C:000430 160B0A512057204520522054205920552049204F2050
                  .DB     $16,11,11,$41,$20,$53,$20,$44,$20,$46,$20,$47,$20,$48,$20,$4A,$20,$4B,$20,$4C,$20,$65
C:00043B 160B0B4120532044204620472048204A204B204C2065
                  .DB     $16,11,12,$63,$20,$5A,$20,$58,$20,$43,$20,$56,$20,$42,$20,$4E,$20,$4D,$20,$73,$20,$73
C:000446 160B0C63205A2058204320562042204E204D20732073
                  .DB     $16,38,10,$18
C:000451 16260A18
                  .DB     $16,36,11,$1B,$20,$46,$20,$1A
C:000453 16240B1B2046201A
                  .DB     $16,38,12,$19
C:000457 16260C19
                  .DB     $16,14,15,$53,$6F,$66,$74,$52,$65,$73,$65,$74
C:000459 160E0F536F66745265736574
                  .DB     $16,30,15,$54,$75,$72,$62,$6F,$4B,$65,$79,0
C:00045F 161E0F547572626F4B657900
         ;
         ;------------------------------------------------------------------------------
         ;
          MSG_TPS2K_1:
                  .DB     $16,5, 7,$65,$20,$20,$20,$31,$20,$32,$20,$33,$20,$34,$20,$35,$20,$36,$20,$37,$20,$38,$20,$39,$20,$30,$20,$31,$20,$32,$20,$20,$70,$20,$73,$20,$70,$20,$20,$07,$20,$07,$20,$07
C:000465 1605076520202031203220332034203520362037203820392030203120322020702073207020200720072007
                  .DB     $16,5, 9,$60,$20,$31,$20,$32,$20,$33,$20,$34,$20,$35,$20,$36,$20,$37,$20,$38,$20,$39,$20,$30,$20,$2D,$20,$3D,$20,$1B,$20,$20,$69,$20,$68,$20,$75,$20,$20,$6E,$20,$2F,$20,$2A,$20,$2D
C:00047B 160509602031203220332034203520362037203820392030202D203D201B2020692068207520206E202F202A202D
                  .DB     $16,5,10,$74,$20,$51,$20,$57,$20,$45,$20,$52,$20,$54,$20,$59,$20,$55,$20,$49,$20,$4F,$20,$50,$20,$5B,$20,$5D,$20,$5C,$20,$20,$64,$20,$65,$20,$64,$20,$20,$37,$20,$38,$20,$39
C:000492 16050A7420512057204520522054205920552049204F2050205B205D205C2020642065206420203720382039
                  .DB     $16,5,11,$63,$20,$41,$20,$53,$20,$44,$20,$46,$20,$47,$20,$48,$20,$4A,$20,$4B,$20,$4C,$20,$3B,$20,$27,$20,$20,$20,$65,$20,$20,$20,$20,$20,$20,$20,$20,$20,$34,$20,$35,$20,$36,$20,$2B
C:0004A8 16050B63204120532044204620472048204A204B204C203B2027202020652020202020202020203420352036202B
                  .DB     $16,5,12,$73,$20,$5A,$20,$58,$20,$43,$20,$56,$20,$42,$20,$4E,$20,$4D,$20,$2C,$20,$2E,$20,$2F,$20,$20,$20,$20,$20,$73,$20,$20,$20,$20,$18,$20,$20,$20,$20,$31,$20,$32,$20,$33
C:0004BF 16050C73205A2058204320562042204E204D202C202E202F2020202020732020202018202020203120322033
                  .DB     $16,5,13,$63,$20,$77,$20,$61,$20,$20,$20,$20,$20,$20,$20,$73,$20,$20,$20,$20,$20,$20,$20,$61,$20,$77,$20,$6D,$20,$63,$20,$20,$1B,$20,$19,$20,$1A,$20,$20,$30,$20,$20,$20,$2E,$20,$65
C:0004D5 16050D6320772061202020202020207320202020202020612077206D206320201B2019201A2020302020202E2065
                  .DB     $16,5,16,$52,$61,$77,$20,$64,$61,$74,$61,$3A,$16,4,15,0
C:0004EC 16051052617720646174613A16040F00
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_TPS2K_0:
                  .DW     MSG_TPS2K_0_RUS*2, MSG_TPS2K_0_ENG*2
C:0004f4 09ec
          MSG_TPS2K_0_RUS:
                  .DB     $16, 5,19,$92,$E0,$F1,$E5,$AA,$E0,$A0,$E2,$AD,$AE,$A5,$20,$AD,$A0,$A6,$A0,$E2,$A8,$A5,$20,$3C,$45,$53,$43,$3E,$20,$2D,$20,$A2,$EB,$E5,$AE,$A4,$20,$A8,$A7,$20,$E2,$A5,$E1,$E2,$A0,$2E,0,0
C:0004F6 16051392E0F1E5AAE0A0E2ADAEA520ADA0A6A0E2A8A5203C4553433E202D20A2EBE5AEA420A8A720E2A5E1E2A02E0000
          MSG_TPS2K_0_ENG:
                  .DB     $16,10,19,     $50,$72,$65,$73,$73,$20,$3C,$45,$53,$43,$3E,$20,$74,$68,$72,$65,$65,$20,$74,$69,$6D,$65,$73,$20,$74,$6F,$20,$65,$78,$69,$74,$2E,0
C:00050E 160A135072657373203C4553433E2074687265652074696D657320746F20657869742E00
         ;width limited!           "5678901234567890123456789012345678901234567"
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_MOUSE_TEST:
                  .DW     MSG_MOUSE_TEST_RUS*2, MSG_MOUSE_TEST_ENG*2
C:000520 0a44
          MSG_MOUSE_TEST_RUS:
                  .DB     $0D,$0A,$92,$A5,$E1,$E2,$A8,$E0,$AE,$A2,$A0,$AD,$A8,$A5,$20,$AC,$EB,$E8,$A8,$2E,$2E,$2E,$20,0
C:000522 0D0A92A5E1E2A8E0AEA2A0ADA8A520ACEBE8A82E2E2E2000
          MSG_MOUSE_TEST_ENG:
                  .DB     $0D,$0A,$4D,$6F,$75,$73,$65,$20,$74,$65,$73,$74,$2E,$2E,$2E,$20,0,0
C:00052E 0D0A4D6F75736520746573742E2E2E200000
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_MOUSE_DETECT:
                  .DW     MSG_MOUSE_DETECT_RUS*2, MSG_MOUSE_DETECT_ENG*2
C:000537 0a72
          MSG_MOUSE_DETECT_RUS:
                  .DB     $8E,$A1,$AD,$A0,$E0,$E3,$A6,$A5,$AD,$A8,$A5,$20,$AC,$EB,$E8,$A8,$2E,$2E,$2E,$20,$20,0
C:000539 8EA1ADA0E0E3A6A5ADA8A520ACEBE8A82E2E2E202000
          MSG_MOUSE_DETECT_ENG:
                  .DB     $44,$65,$74,$65,$63,$74,$69,$6E,$67,$20,$6D,$6F,$75,$73,$65,$2E,$2E,$2E,$20,$20,0,0
C:000544 446574656374696E67206D6F7573652E2E2E20200000
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_MOUSE_SETUP:
                  .DW     MSG_MOUSE_SETUP_RUS*2, MSG_MOUSE_SETUP_ENG*2
C:00054f 0aa2
          MSG_MOUSE_SETUP_RUS:
                  .DB     $8D,$A0,$E1,$E2,$E0,$AE,$A9,$AA,$A0,$2E,$2E,$2E,$20,0
C:000551 8DA0E1E2E0AEA9AAA02E2E2E2000
          MSG_MOUSE_SETUP_ENG:
                  .DB     $43,$75,$73,$74,$6F,$6D,$69,$7A,$61,$74,$69,$6F,$6E,$2E,$2E,$2E,$20,0
C:000558 437573746F6D697A6174696F6E2E2E2E2000
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_MOUSE_LETSGO:
                  .DW     MSG_MOUSE_LETSGO_RUS*2, MSG_MOUSE_LETSGO_ENG*2
C:000561 0ac6
          MSG_MOUSE_LETSGO_RUS:
                  .DB     $8F,$AE,$A5,$E5,$A0,$AB,$A8,$21,0,0
C:000563 8FAEA5E5A0ABA8210000
          MSG_MOUSE_LETSGO_ENG:
                  .DB     $4C,$65,$74,$27,$73,$20,$67,$6F,$21,0
C:000568 4C6574277320676F2100
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_MOUSE_FAIL0:
                  .DW     MSG_MOUSE_FAIL0_RUS*2, MSG_MOUSE_FAIL0_ENG*2
C:00056d 0ade
          MSG_MOUSE_FAIL0_RUS:
                  .DB     $20,$20,$20,$20,$20,$20,$8D,$A5,$E2,$20,$AE,$E2,$A2,$A5,$E2,$A0,$20,$AE,$E2,$20,$AC,$EB,$E8,$A8,$2E      ,0
C:00056F 2020202020208DA5E220AEE2A2A5E2A020AEE220ACEBE8A82E00
          MSG_MOUSE_FAIL0_ENG:
                  .DB     $20,$20,$20,$20,$20,$20,$4E,$6F,$20,$6D,$6F,$75,$73,$65,$20,$72,$65,$73,$70,$6F,$6E,$73,$65,$2E       ,0,0
C:00057C 2020202020204E6F206D6F75736520726573706F6E73652E0000
         ;width limited! "1234567890123456789012345678901"
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_MOUSE_FAIL1:
                  .DW     MSG_MOUSE_FAIL1_RUS*2, MSG_MOUSE_FAIL1_ENG*2
C:000589 0b16
          MSG_MOUSE_FAIL1_RUS:
                  .DB     $20,$20,$20,$88,$AC,$A5,$EE,$E2,$E1,$EF,$20,$AD,$A5,$AA,$AE,$E2,$AE,$E0,$EB,$A5,$20,$AF,$E0,$AE,$A1,$AB,$A5,$AC,$EB,$2E ,0,0
C:00058B 20202088ACA5EEE2E1EF20ADA5AAAEE2AEE0EBA520AFE0AEA1ABA5ACEB2E0000
          MSG_MOUSE_FAIL1_ENG:
                  .DB     $20,$20,$20,$20,$54,$68,$65,$72,$65,$20,$61,$72,$65,$20,$73,$6F,$6D,$65,$20,$70,$72,$6F,$62,$6C,$65,$6D,$73,$2E   ,0,0
C:00059B 2020202054686572652061726520736F6D652070726F626C656D732E0000
         ;width limited! "1234567890123456789012345678901"
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_MOUSE_RESTART:
                  .DW     MSG_MOUSE_RESTART_RUS*2, MSG_MOUSE_RESTART_ENG*2
C:0005aa 0b58
          MSG_MOUSE_RESTART_RUS:
                  .DB     $20,$20,$3C,$45,$6E,$74,$65,$72,$3E,$20,$2D,$20,$AF,$A5,$E0,$A5,$A7,$A0,$AF,$E3,$E1,$E2,$A8,$E2,$EC,$20,$E2,$A5,$E1,$E2,$2E,0
C:0005AC 20203C456E7465723E202D20AFA5E0A5A7A0AFE3E1E2A8E2EC20E2A5E1E22E00
          MSG_MOUSE_RESTART_ENG:
                  .DB     $20,$20,$20,$20,$20,$3C,$45,$6E,$74,$65,$72,$3E,$20,$2D,$20,$72,$65,$73,$74,$61,$72,$74,$20,$74,$65,$73,$74,$2E   ,0,0
C:0005BC 20202020203C456E7465723E202D207265737461727420746573742E0000
         ;width limited! "1234567890123456789012345678901"
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_MTST:
                  .DW     MSG_MTST_RUS*2, MSG_MTST_ENG*2
C:0005cb 0b9a
          MSG_MTST_RUS:
                  .DB     $16,35,18,   $20,$92,$A5,$E1,$E2,$20,$44,$52,$41,$4D,$20
C:0005CD 1623122092A5E1E2204452414D20
                  .DB     $16,32,19,$8F,$E0,$AE,$A2,$A5,$A4,$A5,$AD,$AE,$20,$E6,$A8,$AA,$AB,$AE,$A2,$16,32,20,$A1,$A5,$A7,$20,$AE,$E8,$A8,$A1,$AE,$AA
C:0005D4 1620138FE0AEA2A5A4A5ADAE20E6A8AAABAEA2162014A1A5A720AEE8A8A1AEAA
                  .DB     $16,32,21,$E1,$20,$AE,$E8,$A8,$A1,$AA,$A0,$AC,$A8,0
C:0005E4 162015E120AEE8A8A1AAA0ACA800
          MSG_MTST_ENG:
                  .DB     $16,35,18,   $20,$44,$52,$41,$4D,$20,$74,$65,$73,$74,$20
C:0005EB 162312204452414D207465737420
         ;width limited!           "23456789012345678"
                  .DB     $16,32,19,$4C,$6F,$6F,$70,$73,  $16,32,20,$50,$61,$73,$73,  $16,32,21,$46,$61,$69,$6C,0,0
C:0005F2 1620134C6F6F7073162014506173731620154661696C0000
         ;width limited!           "23456789012345678" "2345678901"       "2345678901"
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_MENU_SWLNG:
                  .DW     MSG_MENU_SWLNG_RUS*2, MSG_MENU_SWLNG_ENG*2
C:0005fe 0c00
          MSG_MENU_SWLNG_RUS:
                  .DB     $16,23,12,         $90,$E3,$E1,$E1,$AA,$A8,$A9        ,0,0
C:000600 16170C90E3E1E1AAA8A90000
          MSG_MENU_SWLNG_ENG:
                  .DB     $16,23,12,         $45,$6E,$67,$6C,$69,$73,$68        ,0,0
C:000606 16170C456E676C6973680000
         ;width limited!           "456789012345678901234567"
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_FL_MENU:
                  .DW     MSG_FL_MENU_RUS*2, MSG_FL_MENU_ENG*2
C:00060c 0c1c
          MSG_FL_MENU_RUS:
                  .DB     $16,2,2,$82,$EB,$E5,$AE,$A4
C:00060E 16020282EBE5AEA4
                  .DB     $16,2,3,$82,$E1,$F1,$20,$E1,$AD,$AE,$A2,$A0
C:000612 16020382E1F120E1ADAEA2A0
                  .DB     $16,2,4,$91,$E2,$A5,$E0,$A5,$E2,$EC,$20,$AC,$2F,$E1,$E5,$2E
C:000618 16020491E2A5E0A5E2EC20AC2FE1E52E
                  .DB     $16,2,5,$84,$AE,$A1,$A0,$A2,$2E,$A7,$A0,$A4,$A0,$AD,$A8,$A5
C:000620 16020584AEA1A0A22EA7A0A4A0ADA8A5
                  .DB     $16,2,6,$82,$EB,$AF,$AE,$AB,$AD,$A8,$E2,$EC,$20   ,0
C:000628 16020682EBAFAEABADA8E2EC2000
          MSG_FL_MENU_ENG:
                  .DB     $16,2,2,$45,$78,$69,$74,$20
C:00062F 1602024578697420
                  .DB     $16,2,3,$52,$65,$74,$72,$69,$65,$76,$65,$20,$61,$6C,$6C,$20
C:000633 160203526574726965766520616C6C20
                  .DB     $16,2,4,$45,$72,$61,$73,$65,$20,$63,$68,$69,$70,$20
C:00063B 1602044572617365206368697020
                  .DB     $16,2,5,$41,$64,$64,$20,$6A,$6F,$62
C:000642 160205416464206A6F62
                  .DB     $16,2,6,$45,$78,$65,$63,$75,$74,$65,$20,$6A,$6F,$62,$73 ,0
C:000647 16020645786563757465206A6F627300
         ;width limited!         "2345678901234"
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_FP_NOFILES:
                  .DW     MSG_FP_NOFILES_RUS*2,MSG_FP_NOFILES_ENG*2
C:00064f 0ca2
          MSG_FP_NOFILES_RUS:
                  .DB     $15,$9F,$20,$8D,$A5,$E2,$20,$E4,$A0,$A9,$AB,$AE,$A2,$20,0,0
C:000651 159F208DA5E220E4A0A9ABAEA2200000
          MSG_FP_NOFILES_ENG:
                  .DB     $15,$9F,$20,$20,$4E,$6F,$20,$66,$69,$6C,$65,$73,$20,$20,0,0
C:000659 159F20204E6F2066696C657320200000
         ;width fixed!           "123456789012"
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_FL_READROM:
                  .DW     MSG_FL_READROM_RUS*2,MSG_FL_READROM_ENG*2
C:000661 0cc6
          MSG_FL_READROM_RUS:
                  .DB     $16, 2,10,$15,$9E,$97,$E2,$A5,$AD,$A8,$A5,$20,$46,$6C,$61,$73,$68 ,$15,$9F,$16, 2,11,$3C,$45,$53,$43,$3E,$20,$2D,$20,$A2,$EB,$E5,$AE,$A4,0
C:000663 16020A159E97E2A5ADA8A520466C617368159F16020B3C4553433E202D20A2EBE5AEA400
          MSG_FL_READROM_ENG:
                  .DB     $16, 2,10,$15,$9E,$52,$65,$61,$64,$20,$46,$6C,$61,$73,$68,$2E,$2E,$2E,$15,$9F,$16, 2,11,$3C,$45,$53,$43,$3E,$20,$2D,$20,$65,$78,$69,$74 ,0
C:000675 16020A159E5265616420466C6173682E2E2E159F16020B3C4553433E202D206578697400
         ;width limited!                   "2345678901234"                   "2345678901234"
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_FL_SDINIT:
                  .DW     MSG_FL_SDINIT_RUS*2,MSG_FL_SDINIT_ENG*2
C:000687 0d12
          MSG_FL_SDINIT_RUS:
                  .DB     $16, 2,11,$15,$9F,$88,$AD,$A8,$E6,$2E,$53,$44,$20,$AA,$A0,$E0,$E2,$EB,0,0
C:000689 16020B159F88ADA8E62E534420AAA0E0E2EB0000
          MSG_FL_SDINIT_ENG:
                  .DB     $16, 2,11,$15,$9F,$53,$44,$63,$61,$72,$64,$20,$69,$6E,$69,$74,$2E,$20,0,0
C:000693 16020B159F53446361726420696E69742E200000
         ;width limited!                   "2345678901234"
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_FL_SDERROR1:
                  .DW     MSG_FL_SDERROR1_RUS*2,MSG_FL_SDERROR1_ENG*2
C:00069d 0d3e
          MSG_FL_SDERROR1_RUS:
                  .DB     $20,$8D,$A5,$E2,$20,$53,$44,$20,$AA,$A0,$E0,$E2,$EB,$21,$20,0
C:00069F 208DA5E220534420AAA0E0E2EB212000
          MSG_FL_SDERROR1_ENG:
                  .DB     $20,$20,$4E,$6F,$20,$53,$44,$2D,$63,$61,$72,$64,$21,$20,$20,0
C:0006A7 20204E6F2053442D6361726421202000
         ;width fixed!   "123456789012345"
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_FL_SDERROR2:
                  .DW     MSG_FL_SDERROR2_RUS*2,MSG_FL_SDERROR2_ENG*2
C:0006af 0d62
          MSG_FL_SDERROR2_RUS:
                  .DB     $20,$8E,$E8,$A8,$A1,$AA,$A0,$20,$E7,$E2,$2E,$20,$53,$44,$20,0
C:0006B1 208EE8A8A1AAA020E7E22E2053442000
          MSG_FL_SDERROR2_ENG:
                  .DB     $20,$53,$44,$20,$72,$65,$61,$64,$20,$65,$72,$72,$6F,$72,$20,0
C:0006B9 2053442072656164206572726F722000
         ;width fixed!   "123456789012345"
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_FL_SDERROR3:
                  .DW     MSG_FL_SDERROR3_RUS*2,MSG_FL_SDERROR3_ENG*2
C:0006c1 0d86
          MSG_FL_SDERROR3_RUS:
                  .DB     $20,$20,$20,$8D,$A5,$E2,$20,$46,$41,$54,$20,$21,$20,$20,$20,0
C:0006C3 2020208DA5E220464154202120202000
          MSG_FL_SDERROR3_ENG:
                  .DB     $20,$46,$41,$54,$20,$6E,$6F,$20,$66,$6F,$75,$6E,$64,$21,$20,0
C:0006CB 20464154206E6F20666F756E64212000
         ;width fixed!   "123456789012345"
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_FL_SDERROR4:
                  .DW     MSG_FL_SDERROR4_RUS*2,MSG_FL_SDERROR4_ENG*2
C:0006d3 0daa
          MSG_FL_SDERROR4_RUS:
                  .DB     $20,$20,$8E,$E8,$A8,$A1,$AA,$A0,$20,$46,$41,$54,$20,$21,$20,0
C:0006D5 20208EE8A8A1AAA02046415420212000
          MSG_FL_SDERROR4_ENG:
                  .DB     $20,$20,$46,$41,$54,$20,$65,$72,$72,$6F,$72,$20,$21,$20,$20,0
C:0006DD 2020464154206572726F722021202000
         ;width fixed!   "123456789012345"
         ;
         ;------------------------------------------------------------------------------
         ;это сообщение никогда ;) не должно появляться
          MLMSG_FL_SDERRORX:
                  .DW     MSG_FL_SDERRORX_RUS*2,MSG_FL_SDERRORX_ENG*2
C:0006e5 0dce
          MSG_FL_SDERRORX_RUS:
                  .DB     $20,$8E,$2C,$20,$A3,$AB,$EE,$AA,$A0,$AD,$E3,$AB,$AE,$21,$20,0
C:0006E7 208E2C20A3ABEEAAA0ADE3ABAE212000
          MSG_FL_SDERRORX_ENG:
                  .DB     $20,$47,$72,$65,$61,$74,$20,$67,$6C,$69,$74,$63,$68,$21,$20,0
C:0006EF 20477265617420676C69746368212000
         ;width fixed!   "123456789012345"
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_FL_SURE:
                  .DW     MSG_FL_SURE_RUS*2,MSG_FL_SURE_ENG*2
C:0006f7 0df2
          MSG_FL_SURE_RUS:
                  .DB     $16, 2,12,$15,$9E,$20,$93,$A2,$A5,$E0,$A5,$AD,$3F,$20,$3C,$59,$3E,$20,0,0
C:0006F9 16020C159E2093A2A5E0A5AD3F203C593E200000
          MSG_FL_SURE_ENG:
                  .DB     $16, 2,12,$15,$9E,$59,$6F,$75,$20,$73,$75,$72,$65,$3F,$20,$3C,$59,$3E,0,0
C:000703 16020C159E596F7520737572653F203C593E0000
         ;width fixed!                     "2345678901234"
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_FL_ERASE:
                  .DW     MSG_FL_ERASE_RUS*2,MSG_FL_ERASE_ENG*2
C:00070d 0e1e
          MSG_FL_ERASE_RUS:
                  .DB     $16, 2,12,$15,$9E,$91,$E2,$A8,$E0,$A0,$AD,$A8,$A5,$2E,$2E,$2E,$20,$20,0,0
C:00070F 16020C159E91E2A8E0A0ADA8A52E2E2E20200000
          MSG_FL_ERASE_ENG:
                  .DB     $16, 2,12,$15,$9E,$45,$72,$61,$73,$65,$2E,$2E,$2E,$20,$20,$20,$20,$20,0,0
C:000719 16020C159E45726173652E2E2E20202020200000
         ;width fixed!                     "2345678901234"
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_FL_WRITE:
                  .DW     MSG_FL_WRITE_RUS*2,MSG_FL_WRITE_ENG*2
C:000723 0e4a
          MSG_FL_WRITE_RUS:
                  .DB     $16, 2,12,$15,$9E,$87,$A0,$AF,$A8,$E1,$EC,$2E,$2E,$2E,$20,$20,$20,$20,0,0
C:000725 16020C159E87A0AFA8E1EC2E2E2E202020200000
          MSG_FL_WRITE_ENG:
                  .DB     $16, 2,12,$15,$9E,$57,$72,$69,$74,$65,$2E,$2E,$2E,$20,$20,$20,$20,$20,0,0
C:00072F 16020C159E57726974652E2E2E20202020200000
         ;width fixed!                     "2345678901234"
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_FL_VERIFY:
                  .DW     MSG_FL_VERIFY_RUS*2,MSG_FL_VERIFY_ENG*2
C:000739 0e76
          MSG_FL_VERIFY_RUS:
                  .DB     $16, 2,12,$15,$9E,$8F,$E0,$AE,$A2,$A5,$E0,$AA,$A0,$2E,$2E,$2E,$20,$20,0,0
C:00073B 16020C159E8FE0AEA2A5E0AAA02E2E2E20200000
          MSG_FL_VERIFY_ENG:
                  .DB     $16, 2,12,$15,$9E,$56,$65,$72,$69,$66,$79,$2E,$2E,$2E,$20,$20,$20,$20,0,0
C:000745 16020C159E5665726966792E2E2E202020200000
         ;width fixed!                     "2345678901234"
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_FL_COMPLETE:
                  .DW     MSG_FL_COMPLETE_RUS*2,MSG_FL_COMPLETE_ENG*2
C:00074f 0ea2
          MSG_FL_COMPLETE_RUS:
                  .DB     $16, 2,12,$15,$9E,$87,$A0,$A2,$A5,$E0,$E8,$A5,$AD,$AE,$2E,$20,$20,$20,0,0
C:000751 16020C159E87A0A2A5E0E8A5ADAE2E2020200000
          MSG_FL_COMPLETE_ENG:
                  .DB     $16, 2,12,$15,$9E,$43,$6F,$6D,$70,$6C,$65,$74,$65,$2E,$20,$20,$20,$20,0,0
C:00075B 16020C159E436F6D706C6574652E202020200000
         ;width limited!                   "2345678901234"
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_FLRES0:
                  .DW     MSG_FLRES0_RUS*2,MSG_FLRES0_ENG*2
C:000765 0ece
          MSG_FLRES0_RUS:
                  .DB     $16,13, 6, $87,$A0,$AF,$A8,$E1,$EC,$20,$A2,$20,$46,$6C,$61,$73,$68,$52,$4F,$4D,$20,$A7,$A0,$A2,$A5,$E0,$E8,$A5,$AD,$A0 ,0,0
C:000767 160D0687A0AFA8E1EC20A220466C617368524F4D20A7A0A2A5E0E8A5ADA00000
          MSG_FLRES0_ENG:
                  .DB     $16,18, 6,      $4A,$6F,$62,$28,$73,$29,$20,$63,$6F,$6D,$70,$6C,$65,$74,$65,$64,$2E      ,0,0
C:000777 1612064A6F6228732920636F6D706C657465642E0000
         ;width limited!           "23456789012345678901234567890"
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_FLRES1:
                  .DW     MSG_FLRES1_RUS*2,MSG_FLRES1_ENG*2
C:000782 0f08
          MSG_FLRES1_RUS:
                  .DB     $16,21, 7,         $A1,$A5,$A7,$20,$AE,$E8,$A8,$A1,$AE,$AA,$2E         ,0,0
C:000784 161507A1A5A720AEE8A8A1AEAA2E0000
          MSG_FLRES1_ENG:
                  .DB     $16,17, 7,     $4E,$6F,$20,$65,$72,$72,$6F,$72,$73,$20,$64,$65,$74,$65,$63,$74,$65,$64,$2E     ,0,0
C:00078C 1611074E6F206572726F72732064657465637465642E0000
         ;width limited!           "23456789012345678901234567890"
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_FLRES2:
                  .DW     MSG_FLRES2_RUS*2,MSG_FLRES2_ENG*2
C:000798 0f34
          MSG_FLRES2_RUS:
                  .DB     $16,21, 7,         $E1,$20,$AE,$E8,$A8,$A1,$AA,$A0,$AC,$A8,$21         ,0,0
C:00079A 161507E120AEE8A8A1AAA0ACA8210000
          MSG_FLRES2_ENG:
                  .DB     $16,14, 7,  $53,$6F,$6D,$65,$20,$65,$72,$72,$6F,$72,$73,$20,$61,$72,$65,$20,$64,$65,$74,$65,$63,$74,$65,$64,$21  ,0,0
C:0007A2 160E07536F6D65206572726F727320617265206465746563746564210000
         ;width limited!           "23456789012345678901234567890"
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_SENSORS:
                  .DW     MSG_SENSORS_RUS*2,MSG_SENSORS_ENG*2
C:0007b1 0f66
          MSG_SENSORS_RUS:
                  .DB     $20,$20,$20,$84,$A0,$E2,$E7,$A8,$AA,$A8,$3A,$20,0,0
C:0007B3 20202084A0E2E7A8AAA83A200000
          MSG_SENSORS_ENG:
                  .DB     $20,$20,$20,$53,$65,$6E,$73,$6F,$72,$73,$3A,$20,0,0
C:0007BA 20202053656E736F72733A200000
         ;width fixed!   "012345678901"
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_S_NOCARD:
                  .DW     MSG_S_NOCARD_RUS*2,MSG_S_NOCARD_ENG*2
C:0007c1 0f86
          MSG_S_NOCARD_RUS:
                  .DB     $20,$20,$20,$20,$20,$8D,$A5,$E2,$20,$AA,$A0,$E0,$E2,$EB,$20,$20,$20,$20,$20,0
C:0007C3 20202020208DA5E220AAA0E0E2EB202020202000
          MSG_S_NOCARD_ENG:
                  .DB     $20,$20,$20,$20,$20,$20,$4E,$6F,$20,$63,$61,$72,$64,$20,$20,$20,$20,$20,$20,0
C:0007CD 2020202020204E6F206361726420202020202000
         ;width fixed!   "2345678901234567890"
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_S_INSERTED:
                  .DW     MSG_S_INSERTED_RUS*2,MSG_S_INSERTED_ENG*2
C:0007d7 0fb2
          MSG_S_INSERTED_RUS:
                  .DB     $20,$8A,$A0,$E0,$E2,$A0,$20,$E3,$E1,$E2,$A0,$AD,$AE,$A2,$AB,$A5,$AD,$A0,$20,0
C:0007D9 208AA0E0E2A020E3E1E2A0ADAEA2ABA5ADA02000
          MSG_S_INSERTED_ENG:
                  .DB     $20,$20,$20,$43,$61,$72,$64,$20,$69,$6E,$73,$65,$72,$74,$65,$64,$20,$20,$20,0
C:0007E3 2020204361726420696E73657274656420202000
         ;width fixed!   "2345678901234567890"
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_S_READONLY:
                  .DW     MSG_S_READONLY_RUS*2,MSG_S_READONLY_ENG*2
C:0007ed 0fde
          MSG_S_READONLY_RUS:
                  .DB     $20,$20,$87,$A0,$E9,$A8,$E2,$A0,$20,$AE,$E2,$20,$A7,$A0,$AF,$A8,$E1,$A8,$20,0
C:0007EF 202087A0E9A8E2A020AEE220A7A0AFA8E1A82000
          MSG_S_READONLY_ENG:
                  .DB     $20,$20,$20,$20,$20,$52,$65,$61,$64,$20,$6F,$6E,$6C,$79,$20,$20,$20,$20,$20,0
C:0007F9 202020202052656164206F6E6C79202020202000
         ;width fixed!   "1234567890123456789"
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_S_WRITEEN:
                  .DW     MSG_S_WRITEEN_RUS*2,MSG_S_WRITEEN_ENG*2
C:000803 100a
          MSG_S_WRITEEN_RUS:
                  .DB     $20,$20,$87,$A0,$AF,$A8,$E1,$EC,$20,$E0,$A0,$A7,$E0,$A5,$E8,$A5,$AD,$A0,$20,0
C:000805 202087A0AFA8E1EC20E0A0A7E0A5E8A5ADA02000
          MSG_S_WRITEEN_ENG:
                  .DB     $20,$20,$20,$57,$72,$69,$74,$65,$20,$65,$6E,$61,$62,$6C,$65,$64,$20,$20,$20,0
C:00080F 202020577269746520656E61626C656420202000
         ;width fixed!   "1234567890123456789"
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_TSD_INIT:
                  .DW     MSG_TSD_INIT_RUS*2,MSG_TSD_INIT_ENG*2
C:000819 1036
          MSG_TSD_INIT_RUS:
                  .DB     $88,$AD,$A8,$E6,$A8,$A0,$AB,$A8,$A7,$A0,$E6,$A8,$EF,$20,$AA,$A0,$E0,$E2,$AE,$E7,$AA,$A8,$2E,$2E,$2E,0
C:00081B 88ADA8E6A8A0ABA8A7A0E6A8EF20AAA0E0E2AEE7AAA82E2E2E00
          MSG_TSD_INIT_ENG:
                  .DB     $43,$61,$72,$64,$20,$69,$6E,$69,$74,$69,$61,$6C,$69,$7A,$61,$74,$69,$6F,$6E,$2E,$2E,$2E,0,0
C:000828 4361726420696E697469616C697A6174696F6E2E2E2E0000
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_TSD_NOCARD:
                  .DW     MSG_TSD_NOCARD_RUS*2,MSG_TSD_NOCARD_ENG*2
C:000834 106c
          MSG_TSD_NOCARD_RUS:
                  .DB     $53,$44,$2F,$4D,$4D,$43,$20,$AA,$A0,$E0,$E2,$A0,$20,$AD,$A5,$20,$AE,$A1,$AD,$A0,$E0,$E3,$A6,$A5,$AD,$A0,$2E,0
C:000836 53442F4D4D4320AAA0E0E2A020ADA520AEA1ADA0E0E3A6A5ADA02E00
          MSG_TSD_NOCARD_ENG:
                  .DB     $4E,$6F,$20,$53,$44,$2F,$4D,$4D,$43,$20,$63,$61,$72,$64,$20,$66,$6F,$75,$6E,$64,$2E,0
C:000844 4E6F2053442F4D4D43206361726420666F756E642E00
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_TSD_FOUNDCARD:
                  .DW     MSG_TSD_FOUNDCARD_RUS*2,MSG_TSD_FOUNDCARD_ENG*2
C:00084f 10a2
          MSG_TSD_FOUNDCARD_RUS:
                  .DB     $8E,$A1,$AD,$A0,$E0,$E3,$A6,$A5,$AD,$A0,$20,$AA,$A0,$E0,$E2,$A0,$3A,$20,0,0
C:000851 8EA1ADA0E0E3A6A5ADA020AAA0E0E2A03A200000
          MSG_TSD_FOUNDCARD_ENG:
                  .DB     $46,$6F,$75,$6E,$64,$20,$63,$61,$72,$64,$3A,$20,0,0
C:00085B 466F756E6420636172643A200000
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_TSD_MENU:
                  .DW     MSG_TSD_MENU_RUS*2,MSG_TSD_MENU_ENG*2
C:000862 10c8
          MSG_TSD_MENU_RUS:
                  .DB     $16,16,11,    $8D,$A0,$E7,$A0,$E2,$EC,$20,$A4,$A8,$A0,$A3,$AD,$AE,$E1,$E2,$A8,$AA,$E3,$20
C:000864 16100B8DA0E7A0E2EC20A4A8A0A3ADAEE1E2A8AAE320
                  .DB     $16,12,12,$5B,$20,$5D,$20,$8F,$AE,$A4,$E0,$AE,$A1,$AD,$EB,$A9,$20,$AE,$E2,$E7,$F1,$E2,$20,$A2,$20,$52,$53,$2D,$32,$33,$32,0
C:00086F 160C0C5B205D208FAEA4E0AEA1ADEBA920AEE2E7F1E220A22052532D32333200
          MSG_TSD_MENU_ENG:
                  .DB     $16,17,11,     $53,$74,$61,$72,$74,$20,$64,$69,$61,$67,$6E,$6F,$73,$74,$69,$63,$20
C:00087F 16110B537461727420646961676E6F7374696320
                  .DB     $16,12,12,$5B,$20,$5D,$20,$44,$65,$74,$61,$69,$6C,$65,$64,$20,$6C,$6F,$67,$20,$74,$6F,$20,$52,$53,$2D,$32,$33,$32,0
C:000889 160C0C5B205D2044657461696C6564206C6F6720746F2052532D32333200
         ;width limited!           "2345678901234567890123456789"
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_TSD_FOUNDFAT:
                  .DW     MSG_TSD_FOUNDFAT_RUS*2,MSG_TSD_FOUNDFAT_ENG*2
C:000898 1134
          MSG_TSD_FOUNDFAT_RUS:
                  .DB     $8E,$A1,$AD,$A0,$E0,$E3,$A6,$A5,$AD,$A0,$20,$46,$41,$54,0,0
C:00089A 8EA1ADA0E0E3A6A5ADA0204641540000
          MSG_TSD_FOUNDFAT_ENG:
                  .DB     $46,$6F,$75,$6E,$64,$20,$46,$41,$54,0
C:0008A2 466F756E642046415400
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_TSD_DETECT:
                  .DW     MSG_TSD_DETECT_RUS*2,MSG_TSD_DETECT_ENG*2
C:0008a7 1152
          MSG_TSD_DETECT_RUS:
                  .DB     $8F,$AE,$A8,$E1,$AA,$20,$E4,$A0,$A9,$AB,$AE,$A2,$AE,$A9,$20,$E1,$A8,$E1,$E2,$A5,$AC,$EB,$2E,$2E,$2E,0
C:0008A9 8FAEA8E1AA20E4A0A9ABAEA2AEA920E1A8E1E2A5ACEB2E2E2E00
          MSG_TSD_DETECT_ENG:
                  .DB     $44,$65,$74,$65,$63,$74,$69,$6E,$67,$20,$6F,$66,$20,$66,$69,$6C,$65,$20,$73,$79,$73,$74,$65,$6D,$2E,$2E,$2E,0
C:0008B6 446574656374696E67206F662066696C652073797374656D2E2E2E00
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_TSD_READFILE:
                  .DW     MSG_TSD_READFILE_RUS*2,MSG_TSD_READFILE_ENG*2
C:0008c4 118c
          MSG_TSD_READFILE_RUS:
                  .DB     $97,$E2,$A5,$AD,$A8,$A5,$20,$E2,$A5,$E1,$E2,$AE,$A2,$AE,$A3,$AE,$20,$E4,$A0,$A9,$AB,$A0,$2E,$2E,$2E,0
C:0008C6 97E2A5ADA8A520E2A5E1E2AEA2AEA3AE20E4A0A9ABA02E2E2E00
          MSG_TSD_READFILE_ENG:
                  .DB     $52,$65,$61,$64,$69,$6E,$67,$20,$6F,$66,$20,$74,$65,$73,$74,$20,$66,$69,$6C,$65,$2E,$2E,$2E,0
C:0008D3 52656164696E67206F6620746573742066696C652E2E2E00
         ;
         ;------------------------------------------------------------------------------
         ;
          MLMSG_TSD_COMPLETE:
                  .DW     MSG_TSD_COMPLETE_RUS*2,MSG_TSD_COMPLETE_ENG*2
C:0008df 11c2
          MSG_TSD_COMPLETE_RUS:
                  .DB     $84,$A8,$A0,$A3,$AD,$AE,$E1,$E2,$A8,$AA,$A0,$20,$A7,$A0,$A2,$A5,$E0,$E8,$A5,$AD,$A0,$2E,0,0
C:0008E1 84A8A0A3ADAEE1E2A8AAA020A7A0A2A5E0E8A5ADA02E0000
          MSG_TSD_COMPLETE_ENG:
                  .DB     $44,$69,$61,$67,$6E,$6F,$73,$74,$69,$63,$20,$69,$73,$20,$63,$6F,$6D,$70,$6C,$65,$74,$65,$2E,0
C:0008ED 446961676E6F7374696320697320636F6D706C6574652E00
         ;
         ;------------------------------------------------------------------------------
         ;
          ;
          .INCLUDE "_t_sd.asm"
         ;
         ;--------------------------------------
         ;
          MSG_TSD_OUT:
                  .DB     $0D,$0A,"out ",0,0
C:0008F9 0D0A6F7574200000
          MSG_TSD_IN:
                  .DB     ", in ",0
C:0008FD 2C20696E2000
         
          MSG_TSD_CMD:
                  .DB     $0D,$0A,$3B,"CMD",0,0
C:000900 0D0A3B434D440000
         
          MSG_TSD_ACMD41:
                  .DB     $0D,$0A,$3B,"ACMD41",0
C:000904 0D0A3B41434D44343100
         
          MSG_TSD_CSUP:
                  .DB     $0D,$0A,"CS up",0
C:000909 0D0A435320757000
          MSG_TSD_CSDOWN:
                  .DB     $0D,$0A,"CS down",0
C:00090D 0D0A435320646F776E00
         
          MSG_TSD_MMC:
                  .DB     "MMC",0
C:000912 4D4D4300
          MSG_TSD_SDV1:
                  .DB     "SD v1",0
C:000914 534420763100
          MSG_TSD_SDSC:
                  .DB     "SD v2+ Standard Capacity",0,0
C:000917 53442076322B205374616E646172642043617061636974790000
          MSG_TSD_SDHC:
                  .DB     "SD v2+ High Capacity",0,0
C:000924 53442076322B20486967682043617061636974790000
         
          MSG_TSD_OCR:
                  .DB     "OCR: ",0
C:00092F 4F43523A2000
          MSG_TSD_CSD:
                  .DB     "CSD: ",0
C:000932 4353443A2000
          MSG_TSD_CID0:
                  .DB     "CID: ",0
C:000935 4349443A2000
          MSG_TSD_CID1:
                  .DB     "Manufacturer ID    ",0
C:000938 4D616E7566616374757265722049442020202000
          MSG_TSD_CID2:
                  .DB     "OEM/Application ID ",0
C:000942 4F454D2F4170706C69636174696F6E2049442000
          MSG_TSD_CID3:
                  .DB     "Product name       ",0
C:00094C 50726F64756374206E616D652020202020202000
          MSG_TSD_CID4:
                  .DB     "Product revision   ",0
C:000956 50726F64756374207265766973696F6E20202000
          MSG_TSD_CID5:
                  .DB     "Product serial #   ",0
C:000960 50726F647563742073657269616C202320202000
          MSG_TSD_CID6:
                  .DB     "Manufacturing date ",0
C:00096A 4D616E75666163747572696E6720646174652000
          MSG_TSD_CID6B:
                  .DB     ".20",0
C:000974 2E323000
          MSG_TSD_CID6C:
                  .DB     ".19",0
C:000976 2E313900
          MSG_TSD_CRC:
                  .DB     "CRC=",0,0
C:000978 4352433D0000
          MSG_TSD_READSECTOR:
                  .DB     $0D,$0A,$3B,"Read sector ",0
C:00097B 0D0A3B5265616420736563746F722000
          MSG_TSD_SKIP:
                  .DB     $0D,$0A,$3B,"512 operations is skiped",0
C:000983 0D0A3B353132206F7065726174696F6E7320697320736B6970656400
         
          WIND_TSD1:
                  .DB     10,10,32,4,$9F,$01
C:000991 0A0A20049F01
          WIND_TSD2:
                  .DB     0,2,53,22,$DF,$00
C:000994 00023516DF00
         ;
         ;--------------------------------------
         ;
          .EQU    TSD_BLS0        =4
          .EQU    TSD_BLS1        =5
          .EQU    TSD_ARG_ACMD41  =18
          .EQU    TSD_CARDTYPE    =19
          .EQU    TSD_Y           =20
         ;
         ;--------------------------------------
         ;
C:000997   +  TESTSD: GETMEM  21
C:000997 9765      SBIW    YL,21
         ;
C:000998 7f4c      T_SD00: CBR     FLAGS1,0B00000011
C:000999 6044              SBR     FLAGS1,0B00000100
         
C:00099a 940e 1557         CALL    SCR_FADE
C:00099c e0a0              LDI     XL,0
C:00099d e0b1              LDI     XH,1
C:00099e 940e 1708         CALL    SCR_SET_CURSOR
C:0009a0 e200              LDI     DATA,$20
C:0009a1 e71f              LDI     TEMP,$7F
C:0009a2 e325              LDI     COUNT,53
C:0009a3 940e 1747         CALL    SCR_FILL_CHAR_ATTR
         
C:0009a5   +          LDIZ    WIND_TSD1*2
C:0009a5 e2e2      LDI     ZL,LOW(WIND_TSD1*2)
C:0009a6 e1f3      LDI     ZH,HIGH(WIND_TSD1*2)
C:0009a7 940e 157b         CALL    WINDOW
C:0009a9   +          LDIZ    MLMSG_TSD_MENU*2
C:0009a9 ece4      LDI     ZL,LOW(MLMSG_TSD_MENU*2)
C:0009aa e1f0      LDI     ZH,HIGH(MLMSG_TSD_MENU*2)
C:0009ab 940e 1715         CALL    SCR_PRINTMLSTR
         
C:0009ad   +  T_SD02: STH     TSD_Y,NULL
C:0009ad 8afc      STD     Y+TSD_Y,NULL
C:0009ae d299      T_SD04: RCALL   T_SD_PUTCURSOR
C:0009af d306      T_SD01: RCALL   T_SD_SENSORS
C:0009b0 940e 0ffc         CALL    INKEY
C:0009b2 f3e1              BREQ    T_SD01
C:0009b3 3705              CPI     DATA,KEY_UP
C:0009b4 f3c1              BREQ    T_SD02
C:0009b5 3702              CPI     DATA,KEY_DOWN
C:0009b6 f049              BREQ    T_SD03
C:0009b7 350a              CPI     DATA,KEY_ENTER
C:0009b8 f049              BREQ    T_SD0E
C:0009b9 fd11              SBRC    TEMP,PS2K_BIT_EXTKEY
C:0009ba cff4              RJMP    T_SD01
C:0009bb 3706              CPI     DATA,KEY_ESC
C:0009bc f791              BRNE    T_SD01
C:0009bd 7f47              CBR     FLAGS1,0B00001000
C:0009be   +          FREEMEM 21
C:0009be 9665      ADIW    YL,21
C:0009bf 9508              RET
         ;
C:0009c0   +  T_SD03: STH     TSD_Y,ONE
C:0009c0 8aec      STD     Y+TSD_Y,ONE
C:0009c1 cfec              RJMP    T_SD04
         ;
C:0009c2   +  T_SD0E: LDH     DATA,TSD_Y
C:0009c2 890c      LDD     DATA,Y+TSD_Y
C:0009c3 2300              TST     DATA
C:0009c4 f019              BREQ    T_SD10
C:0009c5 e008              LDI     DATA,0B00001000
C:0009c6 2740              EOR     FLAGS1,DATA
C:0009c7 cfe6              RJMP    T_SD04
         ; - - - - - - - - - - - - - - - - - - -
          T_SD10:
C:0009c8 7f4a              CBR     FLAGS1,0B00000101
C:0009c9 6042              SBR     FLAGS1,0B00000010
C:0009ca d2db              RCALL   T_SD_CRLF_DC
C:0009cb d2da              RCALL   T_SD_CRLF_DC
C:0009cc   +          LDIZ    MSG_TITLE1*2
C:0009cc ece0      LDI     ZL,LOW(MSG_TITLE1*2)
C:0009cd e0f0      LDI     ZH,HIGH(MSG_TITLE1*2)
C:0009ce 940e 14fd         CALL    PRINTSTRZ
C:0009d0 940e 14d4         CALL    PRINT_SHORT_VERS
C:0009d2 d2d3              RCALL   T_SD_CRLF_DC
C:0009d3 6046              SBR     FLAGS1,0B00000110
C:0009d4 d2e1              RCALL   T_SD_SENSORS
         
C:0009d5   +          LDIZ    WIND_TSD2*2
C:0009d5 e2e8      LDI     ZL,LOW(WIND_TSD2*2)
C:0009d6 e1f3      LDI     ZH,HIGH(WIND_TSD2*2)
C:0009d7 940e 157b         CALL    WINDOW
C:0009d9 e0a1              LDI     XL,1
C:0009da e0b3              LDI     XH,3
C:0009db   +          STH     TSD_Y,XH
C:0009db 8bbc      STD     Y+TSD_Y,XH
C:0009dc 940e 1708         CALL    SCR_SET_CURSOR
C:0009de d2c7              RCALL   T_SD_CRLF_DC
C:0009df   +          LDIZ    MLMSG_TSD_INIT*2
C:0009df e3e2      LDI     ZL,LOW(MLMSG_TSD_INIT*2)
C:0009e0 e1f0      LDI     ZH,HIGH(MLMSG_TSD_INIT*2)
C:0009e1 940e 14f8         CALL    PRINTMLSTR
         
C:0009e3 92f0 0126         STS     SD_CARDTYPE,NULL
C:0009e5   +          STH     TSD_CARDTYPE,NULL
C:0009e5 8afb      STD     Y+TSD_CARDTYPE,NULL
         
C:0009e6 d2a9              RCALL   T_SD_CSUP
C:0009e7 ea12              LDI     TEMP,SD_CS1
C:0009e8 ef0f              SER     DATA
C:0009e9 940e 176f         CALL    FPGA_REG
C:0009eb e210              LDI     TEMP,32
C:0009ec 940e 1786         CALL    SD_RD_DUMMY
         
C:0009ee d2ac              RCALL   T_SD_CSDOWN
C:0009ef ea11              LDI     TEMP,SD_CS0
C:0009f0 ef0f              SER     DATA
C:0009f1 940e 176f         CALL    FPGA_REG
C:0009f3 ef2f              SER     COUNT
          T_SD11:
C:0009f4 e000              LDI     DATA,0
C:0009f5 d280              RCALL   T_SD_CMDXX
C:0009f6   +          LDIZ    CMD00*2     ;CMD0 (go_idle_state)
C:0009f6 efee      LDI     ZL,LOW(CMD00*2)
C:0009f7 e3f2      LDI     ZH,HIGH(CMD00*2)
C:0009f8 940e 179b         CALL    SD_WR_PGM_6
C:0009fa 952a              DEC     COUNT
C:0009fb f431              BRNE    T_SD12
         
C:0009fc d2ae              RCALL   T_SD_SCR_CRLF_DC
C:0009fd   +          LDIZ    MLMSG_TSD_NOCARD*2
C:0009fd e6e8      LDI     ZL,LOW(MLMSG_TSD_NOCARD*2)
C:0009fe e1f0      LDI     ZH,HIGH(MLMSG_TSD_NOCARD*2)
C:0009ff 940e 14f8         CALL    PRINTMLSTR
C:000a01 c23a              RJMP    T_SD90
          T_SD12:
C:000a02 3001              CPI     DATA,$01
C:000a03 f781              BRNE    T_SD11
         
C:000a04 e008              LDI     DATA,8
C:000a05 d270              RCALL   T_SD_CMDXX
C:000a06   +          LDIZ    CMD08*2     ;CMD8 (send_if_cond)
C:000a06 e0e4      LDI     ZL,LOW(CMD08*2)
C:000a07 e3f3      LDI     ZH,HIGH(CMD08*2)
C:000a08 940e 179b         CALL    SD_WR_PGM_6
C:000a0a e080              LDI     WL,$00
C:000a0b ff02              SBRS    DATA,2
C:000a0c e480              LDI     WL,$40
C:000a0d   +          STH     TSD_ARG_ACMD41,WL
C:000a0d 8b8a      STD     Y+TSD_ARG_ACMD41,WL
C:000a0e e014              LDI     TEMP,4
C:000a0f 940e 1786         CALL    SD_RD_DUMMY
         
C:000a11 d273      T_SD13: RCALL   T_SD_ACMD41
C:000a12 e707              LDI     DATA,$40|55 ;CMD55
C:000a13 940e 178b         CALL    SD_WR_CMD
C:000a15 e012              LDI     TEMP,2
C:000a16 940e 1786         CALL    SD_RD_DUMMY
C:000a18 e609              LDI     DATA,$40|41 ;ACMD41 (sd_send_op_cond)
C:000a19 940e 17e3         CALL    SD_EXCHANGE
C:000a1b   +          LDH     DATA,TSD_ARG_ACMD41
C:000a1b 890a      LDD     DATA,Y+TSD_ARG_ACMD41
C:000a1c 940e 17e3         CALL    SD_EXCHANGE
C:000a1e 940e 1792         CALL    SD_WR_CMX4
C:000a20 2300              TST     DATA
C:000a21 f079              BREQ    T_SD15
C:000a22 ff02              SBRS    DATA,2
C:000a23 cfed              RJMP    T_SD13
         
C:000a24 e001      T_SD14: LDI     DATA,1
C:000a25 d250              RCALL   T_SD_CMDXX
C:000a26 e401              LDI     DATA,$40|1  ;CMD1 (send_op_cond)
C:000a27 940e 178b         CALL    SD_WR_CMD
C:000a29 2300              TST     DATA
C:000a2a f7c9              BRNE    T_SD14
C:000a2b d242              RCALL   T_SD_CRC_OFF
C:000a2c d238              RCALL   T_SD_SETBLKLEN
C:000a2d e110              LDI     TEMP,0B00010000
C:000a2e   +          LDIZ    MSG_TSD_MMC*2
C:000a2e e2e4      LDI     ZL,LOW(MSG_TSD_MMC*2)
C:000a2f e1f2      LDI     ZH,HIGH(MSG_TSD_MMC*2)
C:000a30 c01d              RJMP    T_SD18
         
C:000a31 d23c      T_SD15: RCALL   T_SD_CRC_OFF
C:000a32 d232              RCALL   T_SD_SETBLKLEN
         
C:000a33 e011              LDI     TEMP,0B00000001
C:000a34   +          LDIZ    MSG_TSD_SDV1*2
C:000a34 e2e8      LDI     ZL,LOW(MSG_TSD_SDV1*2)
C:000a35 e1f2      LDI     ZH,HIGH(MSG_TSD_SDV1*2)
C:000a36   +          LDH     DATA,TSD_ARG_ACMD41
C:000a36 890a      LDD     DATA,Y+TSD_ARG_ACMD41
C:000a37 2300              TST     DATA
C:000a38 f0a9              BREQ    T_SD18
C:000a39 e30a              LDI     DATA,58
C:000a3a d23b              RCALL   T_SD_CMDXX
C:000a3b e70a              LDI     DATA,$40|58 ;CMD58 (read_ocr)
C:000a3c 940e 178b         CALL    SD_WR_CMD
C:000a3e 01de              MOVW    XL,YL
C:000a3f e026              LDI     COUNT,6
C:000a40 940e 17e2 T_SD16: CALL    SD_RECEIVE
C:000a42 930d              ST      X+,DATA
C:000a43 952a              DEC     COUNT
C:000a44 f7d9              BRNE    T_SD16
         
C:000a45 e012              LDI     TEMP,0B00000010
C:000a46   +          LDIZ    MSG_TSD_SDSC*2
C:000a46 e2ee      LDI     ZL,LOW(MSG_TSD_SDSC*2)
C:000a47 e1f2      LDI     ZH,HIGH(MSG_TSD_SDSC*2)
C:000a48   +          LDH     DATA,0
C:000a48 8108      LDD     DATA,Y+0
C:000a49 ff06              SBRS    DATA,6
C:000a4a c003              RJMP    T_SD18
C:000a4b e016              LDI     TEMP,0B00000110
C:000a4c   +          LDIZ    MSG_TSD_SDHC*2
C:000a4c e4e8      LDI     ZL,LOW(MSG_TSD_SDHC*2)
C:000a4d e1f2      LDI     ZH,HIGH(MSG_TSD_SDHC*2)
         
C:000a4e 9310 0126 T_SD18: STS     SD_CARDTYPE,TEMP
C:000a50   +          STH     TSD_CARDTYPE,TEMP
C:000a50 8b1b      STD     Y+TSD_CARDTYPE,TEMP
C:000a51   +          PUSHZ
C:000a51 93ef      PUSH    ZL
C:000a52 93ff      PUSH    ZH
C:000a53 d257              RCALL   T_SD_SCR_CRLF_DC
C:000a54   +          LDIZ    MLMSG_TSD_FOUNDCARD*2
C:000a54 e9ee      LDI     ZL,LOW(MLMSG_TSD_FOUNDCARD*2)
C:000a55 e1f0      LDI     ZH,HIGH(MLMSG_TSD_FOUNDCARD*2)
C:000a56 940e 14f8         CALL    PRINTMLSTR
C:000a58   +          POPZ
C:000a58 91ff      POP     ZH
C:000a59 91ef      POP     ZL
C:000a5a 940e 14fd         CALL    PRINTSTRZ
         
C:000a5c   +          LDH     TEMP,TSD_CARDTYPE
C:000a5c 891b      LDD     TEMP,Y+TSD_CARDTYPE
C:000a5d ff11              SBRS    TEMP,1
C:000a5e c00c              RJMP    T_SD20
C:000a5f d24b              RCALL   T_SD_SCR_CRLF_DC
C:000a60   +          LDIZ    MSG_TSD_OCR*2
C:000a60 e5ee      LDI     ZL,LOW(MSG_TSD_OCR*2)
C:000a61 e1f2      LDI     ZH,HIGH(MSG_TSD_OCR*2)
C:000a62 940e 14fd         CALL    PRINTSTRZ
C:000a64 01de              MOVW    XL,YL
C:000a65 e024              LDI     COUNT,4
C:000a66 910d      T_SD19: LD      DATA,X+
C:000a67 940e 154d         CALL    HEXBYTE_FOR_DUMP
C:000a69 952a              DEC     COUNT
C:000a6a f7d9              BRNE    T_SD19
         ;
C:000a6b ea11      T_SD20: LDI     TEMP,SD_CS0
C:000a6c ef0f              SER     DATA
C:000a6d 940e 176f         CALL    FPGA_REG
C:000a6f e009              LDI     DATA,9
C:000a70 d205              RCALL   T_SD_CMDXX
C:000a71 e409              LDI     DATA,$40|9  ;CMD9 (send_csd)
C:000a72 940e 178b         CALL    SD_WR_CMD
C:000a74 2300              TST     DATA
C:000a75 f4b9              BRNE    T_SD30
C:000a76 940e 17a2         CALL    SD_WAIT_NOTFF
C:000a78 3f0f              CPI     DATA,$FF
C:000a79 f099              BREQ    T_SD30
C:000a7a 01de              MOVW    XL,YL
C:000a7b e122              LDI     COUNT,18
C:000a7c 940e 17e2 T_SD21: CALL    SD_RECEIVE
C:000a7e 930d              ST      X+,DATA
C:000a7f 952a              DEC     COUNT
C:000a80 f7d9              BRNE    T_SD21
         
C:000a81 d229              RCALL   T_SD_SCR_CRLF_DC
C:000a82   +          LDIZ    MSG_TSD_CSD*2
C:000a82 e6e4      LDI     ZL,LOW(MSG_TSD_CSD*2)
C:000a83 e1f2      LDI     ZH,HIGH(MSG_TSD_CSD*2)
C:000a84 940e 14fd         CALL    PRINTSTRZ
C:000a86 01de              MOVW    XL,YL
C:000a87 e02f              LDI     COUNT,15
C:000a88 910d      T_SD22: LD      DATA,X+
C:000a89 940e 154d         CALL    HEXBYTE_FOR_DUMP
C:000a8b 952a              DEC     COUNT
C:000a8c f7d9              BRNE    T_SD22
         
C:000a8d ea11      T_SD30: LDI     TEMP,SD_CS0
C:000a8e ef0f              SER     DATA
C:000a8f 940e 176f         CALL    FPGA_REG
C:000a91 e00a              LDI     DATA,10
C:000a92 d1e3              RCALL   T_SD_CMDXX
C:000a93 e40a              LDI     DATA,$40|10 ;CMD10 (send_cid)
C:000a94 940e 178b         CALL    SD_WR_CMD
C:000a96 2300              TST     DATA
C:000a97 f421              BRNE    T_SD39
C:000a98 940e 17a2         CALL    SD_WAIT_NOTFF
C:000a9a 3f0f              CPI     DATA,$FF
C:000a9b f409              BRNE    T_SD31
C:000a9c c19f      T_SD39: RJMP    T_SD90
C:000a9d 01de      T_SD31: MOVW    XL,YL
C:000a9e e122              LDI     COUNT,18
C:000a9f 940e 17e2 T_SD32: CALL    SD_RECEIVE
C:000aa1 930d              ST      X+,DATA
C:000aa2 952a              DEC     COUNT
C:000aa3 f7d9              BRNE    T_SD32
         
C:000aa4 d206              RCALL   T_SD_SCR_CRLF_DC
C:000aa5   +          LDIZ    MSG_TSD_CID0*2
C:000aa5 e6ea      LDI     ZL,LOW(MSG_TSD_CID0*2)
C:000aa6 e1f2      LDI     ZH,HIGH(MSG_TSD_CID0*2)
C:000aa7 940e 14fd         CALL    PRINTSTRZ
C:000aa9 01de              MOVW    XL,YL
C:000aaa e02f              LDI     COUNT,15
C:000aab 910d      T_SD33: LD      DATA,X+
C:000aac 940e 154d         CALL    HEXBYTE_FOR_DUMP
C:000aae 952a              DEC     COUNT
C:000aaf f7d9              BRNE    T_SD33
         
C:000ab0 d1fa              RCALL   T_SD_SCR_CRLF_DC
C:000ab1   +          LDIZ    MSG_TSD_CID1*2
C:000ab1 e7e0      LDI     ZL,LOW(MSG_TSD_CID1*2)
C:000ab2 e1f2      LDI     ZH,HIGH(MSG_TSD_CID1*2)
C:000ab3 940e 14fd         CALL    PRINTSTRZ
C:000ab5   +          LDH     DATA,0
C:000ab5 8108      LDD     DATA,Y+0
C:000ab6 940e 150f         CALL    HEXBYTE
C:000ab8 d1f2              RCALL   T_SD_SCR_CRLF_DC
C:000ab9   +          LDIZ    MSG_TSD_CID2*2
C:000ab9 e8e4      LDI     ZL,LOW(MSG_TSD_CID2*2)
C:000aba e1f2      LDI     ZH,HIGH(MSG_TSD_CID2*2)
C:000abb 940e 14fd         CALL    PRINTSTRZ
C:000abd   +          LDH     BITS,TSD_CARDTYPE
C:000abd 893b      LDD     BITS,Y+TSD_CARDTYPE
C:000abe   +          LDH     DATA,1
C:000abe 8109      LDD     DATA,Y+1
C:000abf ff34              SBRS    BITS,4
C:000ac0 940e 1553         CALL    PUTCHAR_FOR_DUMP
C:000ac2 fd34              SBRC    BITS,4
C:000ac3 940e 150f         CALL    HEXBYTE
C:000ac5   +          LDH     DATA,2
C:000ac5 810a      LDD     DATA,Y+2
C:000ac6 ff34              SBRS    BITS,4
C:000ac7 940e 1553         CALL    PUTCHAR_FOR_DUMP
C:000ac9 fd34              SBRC    BITS,4
C:000aca 940e 150f         CALL    HEXBYTE
C:000acc d1de              RCALL   T_SD_SCR_CRLF_DC
C:000acd   +          LDIZ    MSG_TSD_CID3*2
C:000acd e9e8      LDI     ZL,LOW(MSG_TSD_CID3*2)
C:000ace e1f2      LDI     ZH,HIGH(MSG_TSD_CID3*2)
C:000acf 940e 14fd         CALL    PRINTSTRZ
C:000ad1 01de              MOVW    XL,YL
C:000ad2 9613              ADIW    XL,3
C:000ad3 e025              LDI     COUNT,5
C:000ad4 fd34              SBRC    BITS,4
C:000ad5 e026              LDI     COUNT,6
C:000ad6 910d      T_SD34: LD      DATA,X+
C:000ad7 940e 1518         CALL    PUTCHAR
C:000ad9 952a              DEC     COUNT
C:000ada f7d9              BRNE    T_SD34
C:000adb d1cf              RCALL   T_SD_SCR_CRLF_DC
C:000adc   +          LDIZ    MSG_TSD_CID4*2
C:000adc eaec      LDI     ZL,LOW(MSG_TSD_CID4*2)
C:000add e1f2      LDI     ZH,HIGH(MSG_TSD_CID4*2)
C:000ade 940e 14fd         CALL    PRINTSTRZ
C:000ae0   +          LDH     DATA,8
C:000ae0 8508      LDD     DATA,Y+8
C:000ae1 fd34              SBRC    BITS,4
C:000ae2   +          LDH     DATA,9
C:000ae2 8509      LDD     DATA,Y+9
C:000ae3 9502              SWAP    DATA
C:000ae4 940e 1513         CALL    HEXHALF
C:000ae6 e20e              LDI     DATA,$2E ;"."
C:000ae7 940e 1518         CALL    PUTCHAR
C:000ae9   +          LDH     DATA,8
C:000ae9 8508      LDD     DATA,Y+8
C:000aea fd34              SBRC    BITS,4
C:000aeb   +          LDH     DATA,9
C:000aeb 8509      LDD     DATA,Y+9
C:000aec 940e 1513         CALL    HEXHALF
C:000aee d1bc              RCALL   T_SD_SCR_CRLF_DC
C:000aef   +          LDIZ    MSG_TSD_CID5*2
C:000aef ece0      LDI     ZL,LOW(MSG_TSD_CID5*2)
C:000af0 e1f2      LDI     ZH,HIGH(MSG_TSD_CID5*2)
C:000af1 940e 14fd         CALL    PRINTSTRZ
C:000af3 01de              MOVW    XL,YL
C:000af4 9619              ADIW    XL,9
C:000af5 fd34              SBRC    BITS,4
C:000af6 9611              ADIW    XL,1
C:000af7 e024              LDI     COUNT,4
C:000af8 910d      T_SD35: LD      DATA,X+
C:000af9 940e 150f         CALL    HEXBYTE
C:000afb 952a              DEC     COUNT
C:000afc f7d9              BRNE    T_SD35
C:000afd d1ad              RCALL   T_SD_SCR_CRLF_DC
C:000afe   +          LDIZ    MSG_TSD_CID6*2
C:000afe ede4      LDI     ZL,LOW(MSG_TSD_CID6*2)
C:000aff e1f2      LDI     ZH,HIGH(MSG_TSD_CID6*2)
C:000b00 940e 14fd         CALL    PRINTSTRZ
C:000b02   +          LDH     DATA,14
C:000b02 850e      LDD     DATA,Y+14
C:000b03 fd34              SBRC    BITS,4
C:000b04 9502              SWAP    DATA
C:000b05 700f              ANDI    DATA,$0F
C:000b06 940e 1503         CALL    DECBYTE
C:000b08   +          LDIZ    MSG_TSD_CID6B*2
C:000b08 eee8      LDI     ZL,LOW(MSG_TSD_CID6B*2)
C:000b09 e1f2      LDI     ZH,HIGH(MSG_TSD_CID6B*2)
C:000b0a   +          LDH     DATA,14
C:000b0a 850e      LDD     DATA,Y+14
C:000b0b fd34              SBRC    BITS,4
C:000b0c c00c              RJMP    T_SD36
C:000b0d   +          LDH     TEMP,13
C:000b0d 851d      LDD     TEMP,Y+13
C:000b0e 7f00              ANDI    DATA,$F0
C:000b0f 701f              ANDI    TEMP,$0F
C:000b10 2b01              OR      DATA,TEMP
C:000b11 9502              SWAP    DATA
C:000b12 930f              PUSH    DATA
C:000b13 940e 14fd         CALL    PRINTSTRZ
C:000b15 910f              POP     DATA
C:000b16 940e 1503         CALL    DECBYTE
C:000b18 c00c              RJMP    T_SD38
C:000b19 700f      T_SD36: ANDI    DATA,$0F
C:000b1a 5003              SUBI    DATA,3
C:000b1b f418              BRCC    T_SD37
C:000b1c   +          ADDI    DATA,100
C:000b1c 590c      SUBI    DATA,(-(100)&$FF)
C:000b1d   +          LDIZ    MSG_TSD_CID6C*2
C:000b1d eeec      LDI     ZL,LOW(MSG_TSD_CID6C*2)
C:000b1e e1f2      LDI     ZH,HIGH(MSG_TSD_CID6C*2)
C:000b1f 930f      T_SD37: PUSH    DATA
C:000b20 940e 14fd         CALL    PRINTSTRZ
C:000b22 910f              POP     DATA
C:000b23 940e 1503         CALL    DECBYTE
          T_SD38:
         ; - - - - - - - - - - - - - - - - - - -
C:000b25 d185              RCALL   T_SD_SCR_CRLF_DC
C:000b26   +          LDIZ    MLMSG_TSD_DETECT*2
C:000b26 e4ee      LDI     ZL,LOW(MLMSG_TSD_DETECT*2)
C:000b27 e1f1      LDI     ZH,HIGH(MLMSG_TSD_DETECT*2)
C:000b28 940e 14f8         CALL    PRINTMLSTR
         
C:000b2a b71d              IN      TEMP,SPL
C:000b2b 9310 0105         STS     GLB_STACK+0,TEMP
C:000b2d b71e              IN      TEMP,SPH
C:000b2e 9310 0106         STS     GLB_STACK+1,TEMP
C:000b30 93c0 0107         STS     GLB_Y+0,YL
C:000b32 93d0 0108         STS     GLB_Y+1,YH
C:000b34   +          LDIZ    T_SD_ERRORHANDL
C:000b34 e1e9      LDI     ZL,LOW(T_SD_ERRORHANDL)
C:000b35 e0fc      LDI     ZH,HIGH(T_SD_ERRORHANDL)
C:000b36   +          STSZ    FAT_ERRHANDLER
C:000b36 93e0 015c STS     FAT_ERRHANDLER,ZL
C:000b38 93f0 015d STS     FAT_ERRHANDLER+1,ZH
C:000b3a ea11              LDI     TEMP,SD_CS0
C:000b3b ef0f              SER     DATA
C:000b3c 940e 176f         CALL    FPGA_REG
C:000b3e 940e 19ce         CALL    WC_FAT
         
C:000b40   +          PUSHX
C:000b40 93af      PUSH    XL
C:000b41 93bf      PUSH    XH
C:000b42   +          PUSHW
C:000b42 938f      PUSH    WL
C:000b43 939f      PUSH    WH
C:000b44 d166              RCALL   T_SD_SCR_CRLF_DC
C:000b45   +          LDIZ    MLMSG_TSD_FOUNDFAT*2
C:000b45 e3e0      LDI     ZL,LOW(MLMSG_TSD_FOUNDFAT*2)
C:000b46 e1f1      LDI     ZH,HIGH(MLMSG_TSD_FOUNDFAT*2)
C:000b47 940e 14f8         CALL    PRINTMLSTR
C:000b49 9110 0127         LDS     TEMP,FAT_CAL_FAT
C:000b4b e102              LDI     DATA,$12
C:000b4c 2311              TST     TEMP
C:000b4d f021              BREQ    T_SDF01
C:000b4e e106              LDI     DATA,$16
C:000b4f 951a              DEC     TEMP
C:000b50 f009              BREQ    T_SDF01
C:000b51 e302              LDI     DATA,$32
C:000b52 940e 150f T_SDF01:CALL    HEXBYTE
C:000b54   +          POPW
C:000b54 919f      POP     WH
C:000b55 918f      POP     WL
C:000b56   +          POPX
C:000b56 91bf      POP     XH
C:000b57 91af      POP     XL
         ; - - - - - - - - - - - - - - - - - - -
         ;поиск файла в директории
C:000b58   +          LDIW    0               ;номер описателя файла
C:000b58 e080      LDI     WL,LOW(0)
C:000b59 e090      LDI     WH,HIGH(0)
C:000b5a 940e 1b76         CALL    RDDIRSC
C:000b5c c007              RJMP    T_SD_FNDF_2
          T_SD_FNDF_1:
C:000b5d 9601              ADIW    WL,1            ;номерописателя++
C:000b5e 96b0              ADIW    ZL,$20          ;следующий описатель
C:000b5f 30f8              CPI     ZH,HIGH(BUF4FAT+512);
                                         ;вылезли за сектор?
C:000b60 f419              BRNE    T_SD_FNDF_2     ;нет ещё
C:000b61 940e 1b76         CALL    RDDIRSC         ;считываем следующий
C:000b63 f501              BRNE    T_SD_FNDF_E     ;кончились сектора в директории
          T_SD_FNDF_2:
C:000b64 8110              LD      TEMP,Z          ;первый символ
C:000b65 3e15              CPI     TEMP,$E5        ;удалён?
C:000b66 f3b1              BREQ    T_SD_FNDF_1
C:000b67 2311              TST     TEMP            ;пустой описатель? (конец списка)
C:000b68 f0d9              BREQ    T_SD_FNDF_E
C:000b69 8503              LDD     DATA,Z+$0B      ;атрибуты
C:000b6a 7d08              ANDI    DATA,0B11011000
C:000b6b f789              BRNE    T_SD_FNDF_1
C:000b6c 93ef              PUSH    ZL
C:000b6d 01df              MOVW    XL,ZL
C:000b6e   +          LDIZ    T_SD_FILENAME*2
C:000b6e e0ea      LDI     ZL,LOW(T_SD_FILENAME*2)
C:000b6f e1f7      LDI     ZH,HIGH(T_SD_FILENAME*2)
          T_SD_DALSHE:
C:000b70 9105              LPM     DATA,Z+
C:000b71 2300              TST     DATA
C:000b72 f031              BREQ    T_SD_NASHEL
C:000b73 911d              LD      TEMP,X+
C:000b74 1701              CP      DATA,TEMP
C:000b75 f3d1              BREQ    T_SD_DALSHE
C:000b76 2ffb              MOV     ZH,XH
C:000b77 91ef              POP     ZL
C:000b78 cfe4              RJMP    T_SD_FNDF_1
          T_SD_NASHEL:
C:000b79 2ffb              MOV     ZH,XH
C:000b7a 91ef              POP     ZL
C:000b7b 8d84              LDD     WL,Z+$1C
C:000b7c 8d95              LDD     WH,Z+$1D
C:000b7d 8da6              LDD     XL,Z+$1E
C:000b7e 8db7              LDD     XH,Z+$1F
C:000b7f 2f08              MOV     DATA,WL
C:000b80 2b09              OR      DATA,WH
C:000b81 2b0a              OR      DATA,XL
C:000b82 2b0b              OR      DATA,XH
C:000b83 f439              BRNE    T_SD_FNDF_9     ;пустой файл
          T_SD_FNDF_E:
C:000b84 c0b7              RJMP    T_SD90
          T_SD_FILENAME:
                  .DB     "TESTFILEBIN",0
C:000B85 5445535446494C4542494E00
          T_SD_FNDF_9:
C:000b8b ef6f              LDI     TMP2,LOW(511)
C:000b8c e071              LDI     TMP3,HIGH(511)
C:000b8d 940e 1c6b         CALL    HLDEPBC
C:000b8f   +          STH     TSD_BLS0,WL
C:000b8f 838c      STD     Y+TSD_BLS0,WL
C:000b90   +          STH     TSD_BLS1,WH
C:000b90 839d      STD     Y+TSD_BLS1,WH
C:000b91 940e 1c49         CALL    BCDE200         ;кол-во секторов
C:000b93 9701              SBIW    WL,1
C:000b94 09af              SBC     XL,NULL
C:000b95 09bf              SBC     XH,NULL
C:000b96 9100 0129         LDS     DATA,FAT_BYTSSEC
C:000b98 950a              DEC     DATA
C:000b99 2308              AND     DATA,WL
C:000b9a 9503              INC     DATA
C:000b9b 9300 0156         STS     FAT_MPHWOST,DATA    ;кол-во секторов в последнем кластере
C:000b9d 9100 0129         LDS     DATA,FAT_BYTSSEC
C:000b9f 940e 1c52         CALL    BCDE_A
C:000ba1   +          STSW    FAT_KOL_CLS+0
C:000ba1 9380 0157 STS     FAT_KOL_CLS+0,WL
C:000ba3 9390 0158 STS     FAT_KOL_CLS+0+1,WH
C:000ba5   +          STSX    FAT_KOL_CLS+2
C:000ba5 93a0 0159 STS     FAT_KOL_CLS+2,XL
C:000ba7 93b0 015a STS     FAT_KOL_CLS+2+1,XH
C:000ba9 92f0 0151         STS     FAT_NUMSECK,NULL
C:000bab 8d82              LDD     WL,Z+$1A
C:000bac 8d93              LDD     WH,Z+$1B
C:000bad 89a4              LDD     XL,Z+$14
C:000bae 89b5              LDD     XH,Z+$15        ;номер первого кластера файла
C:000baf   +          STSW    FAT_TFILCLS+0
C:000baf 9380 0152 STS     FAT_TFILCLS+0,WL
C:000bb1 9390 0153 STS     FAT_TFILCLS+0+1,WH
C:000bb3   +          STSX    FAT_TFILCLS+2
C:000bb3 93a0 0154 STS     FAT_TFILCLS+2,XL
C:000bb5 93b0 0155 STS     FAT_TFILCLS+2+1,XH
         ; - - - - - - - - - - - - - - - - - - -
C:000bb7 d0f3              RCALL   T_SD_SCR_CRLF_DC
C:000bb8   +          LDIZ    MLMSG_TSD_READFILE*2
C:000bb8 e8e8      LDI     ZL,LOW(MLMSG_TSD_READFILE*2)
C:000bb9 e1f1      LDI     ZH,HIGH(MLMSG_TSD_READFILE*2)
C:000bba 940e 14f8         CALL    PRINTMLSTR
         
C:000bbc 92f0 0104         STS     NEWFRAME,NULL
C:000bbe e002              LDI     DATA,0B00000010
C:000bbf 2ec0              MOV     INT6VECT,DATA
C:000bc0 e514              LDI     TEMP,INT_CONTROL
C:000bc1 940e 176f         CALL    FPGA_REG
         
C:000bc3 940e 267f         CALL    CRC32_INIT
          T_SD_RDFILE1:
C:000bc5 940e 1c7a         CALL    NEXTSEC
C:000bc7 2300              TST     DATA
C:000bc8 f131              BREQ    T_SD_RDFILE2
C:000bc9   +          LDIZ    BUFSECT
C:000bc9 e0e0      LDI     ZL,LOW(BUFSECT)
C:000bca e0f4      LDI     ZH,HIGH(BUFSECT)
C:000bcb   +          LDIX    512
C:000bcb e0a0      LDI     XL,LOW(512)
C:000bcc e0b2      LDI     XH,HIGH(512)
C:000bcd 940e 26b1         CALL    RAM_CRC32_UPDATE
C:000bcf 9100 0104         LDS     DATA,NEWFRAME
C:000bd1 2300              TST     DATA
C:000bd2 f391              BREQ    T_SD_RDFILE1
C:000bd3 92f0 0104         STS     NEWFRAME,NULL
C:000bd5 e1ae              LDI     XL,30
C:000bd6   +          LDH     XH,TSD_Y
C:000bd6 89bc      LDD     XH,Y+TSD_Y
C:000bd7   +          STH     TSD_Y,XH
C:000bd7 8bbc      STD     Y+TSD_Y,XH
C:000bd8 940e 1708         CALL    SCR_SET_CURSOR
C:000bda 934f              PUSH    FLAGS1
C:000bdb 7f4c              CBR     FLAGS1,0B00000011
C:000bdc 6044              SBR     FLAGS1,0B00000100
C:000bdd 9100 015a         LDS     DATA,FAT_KOL_CLS+3
C:000bdf 940e 150f         CALL    HEXBYTE
C:000be1 9100 0159         LDS     DATA,FAT_KOL_CLS+2
C:000be3 940e 150f         CALL    HEXBYTE
C:000be5 9100 0158         LDS     DATA,FAT_KOL_CLS+1
C:000be7 940e 150f         CALL    HEXBYTE
C:000be9 9100 0157         LDS     DATA,FAT_KOL_CLS+0
C:000beb 940e 150f         CALL    HEXBYTE
C:000bed 914f              POP     FLAGS1
C:000bee cfd6              RJMP    T_SD_RDFILE1
         
          T_SD_RDFILE2:
C:000bef   +          LDIZ    BUFSECT
C:000bef e0e0      LDI     ZL,LOW(BUFSECT)
C:000bf0 e0f4      LDI     ZH,HIGH(BUFSECT)
C:000bf1   +          LDH     XL,TSD_BLS0
C:000bf1 81ac      LDD     XL,Y+TSD_BLS0
C:000bf2   +          LDH     XH,TSD_BLS1
C:000bf2 81bd      LDD     XH,Y+TSD_BLS1
C:000bf3 70b1              ANDI    XH,$01
C:000bf4 9611              ADIW    XL,1
C:000bf5 940e 26b1         CALL    RAM_CRC32_UPDATE
C:000bf7 940e 26a4         CALL    CRC32_RELEASE
C:000bf9 24cc              CLR     INT6VECT
C:000bfa 2700              CLR     DATA
C:000bfb e514              LDI     TEMP,INT_CONTROL
C:000bfc 940e 176f         CALL    FPGA_REG
C:000bfe e1ae              LDI     XL,30
C:000bff   +          LDH     XH,TSD_Y
C:000bff 89bc      LDD     XH,Y+TSD_Y
C:000c00   +          STH     TSD_Y,XH
C:000c00 8bbc      STD     Y+TSD_Y,XH
C:000c01 940e 1708         CALL    SCR_SET_CURSOR
C:000c03 e200              LDI     DATA,$20
C:000c04 e028              LDI     COUNT,8
C:000c05 940e 174c         CALL    SCR_FILL_CHAR
C:000c07 d0a3              RCALL   T_SD_SCR_CRLF_DC
C:000c08   +          LDIZ    MSG_TSD_CRC*2
C:000c08 efe0      LDI     ZL,LOW(MSG_TSD_CRC*2)
C:000c09 e1f2      LDI     ZH,HIGH(MSG_TSD_CRC*2)
C:000c0a 940e 14fd         CALL    PRINTSTRZ
C:000c0c   +          LDH     DATA,3
C:000c0c 810b      LDD     DATA,Y+3
C:000c0d 940e 150f         CALL    HEXBYTE
C:000c0f   +          LDH     DATA,2
C:000c0f 810a      LDD     DATA,Y+2
C:000c10 940e 150f         CALL    HEXBYTE
C:000c12   +          LDH     DATA,1
C:000c12 8109      LDD     DATA,Y+1
C:000c13 940e 150f         CALL    HEXBYTE
C:000c15   +          LDH     DATA,0
C:000c15 8108      LDD     DATA,Y+0
C:000c16 940e 150f         CALL    HEXBYTE
         
C:000c18 c023              RJMP    T_SD90
         ; - - - - - - - - - - - - - - - - - - -
          T_SD_ERRORHANDL:
C:000c19 94f8              CLI
C:000c1a 9110 0105         LDS     TEMP,GLB_STACK+0
C:000c1c bf1d              OUT     SPL,TEMP
C:000c1d 9110 0106         LDS     TEMP,GLB_STACK+1
C:000c1f bf1e              OUT     SPH,TEMP
C:000c20 91c0 0107         LDS     YL,GLB_Y+0
C:000c22 91d0 0108         LDS     YH,GLB_Y+1
C:000c24 9478              SEI
C:000c25 930f              PUSH    DATA
C:000c26 d084              RCALL   T_SD_SCR_CRLF_DC
C:000c27 910f              POP     DATA
C:000c28   +          LDIZ    MLMSG_FL_SDERROR1*2
C:000c28 e3ea      LDI     ZL,LOW(MLMSG_FL_SDERROR1*2)
C:000c29 e0fd      LDI     ZH,HIGH(MLMSG_FL_SDERROR1*2)
C:000c2a 3001              CPI     DATA,1
C:000c2b f071              BREQ    T_SD_ERRHNDL1
C:000c2c   +          LDIZ    MLMSG_FL_SDERROR2*2
C:000c2c e5ee      LDI     ZL,LOW(MLMSG_FL_SDERROR2*2)
C:000c2d e0fd      LDI     ZH,HIGH(MLMSG_FL_SDERROR2*2)
C:000c2e 3002              CPI     DATA,2
C:000c2f f051              BREQ    T_SD_ERRHNDL1
C:000c30   +          LDIZ    MLMSG_FL_SDERROR3*2
C:000c30 e8e2      LDI     ZL,LOW(MLMSG_FL_SDERROR3*2)
C:000c31 e0fd      LDI     ZH,HIGH(MLMSG_FL_SDERROR3*2)
C:000c32 3003              CPI     DATA,3
C:000c33 f031              BREQ    T_SD_ERRHNDL1
C:000c34   +          LDIZ    MLMSG_FL_SDERROR4*2
C:000c34 eae6      LDI     ZL,LOW(MLMSG_FL_SDERROR4*2)
C:000c35 e0fd      LDI     ZH,HIGH(MLMSG_FL_SDERROR4*2)
C:000c36 3004              CPI     DATA,4
C:000c37 f011              BREQ    T_SD_ERRHNDL1
C:000c38   +          LDIZ    MLMSG_FL_SDERRORX*2
C:000c38 ecea      LDI     ZL,LOW(MLMSG_FL_SDERRORX*2)
C:000c39 e0fd      LDI     ZH,HIGH(MLMSG_FL_SDERRORX*2)
          T_SD_ERRHNDL1:
C:000c3a 940e 14f8         CALL    PRINTMLSTR
         ; - - - - - - - - - - - - - - - - - - -
C:000c3c d06e      T_SD90: RCALL   T_SD_SCR_CRLF_DC
C:000c3d   +          LDIZ    MLMSG_TSD_COMPLETE*2
C:000c3d ebee      LDI     ZL,LOW(MLMSG_TSD_COMPLETE*2)
C:000c3e e1f1      LDI     ZH,HIGH(MLMSG_TSD_COMPLETE*2)
C:000c3f 940e 14f8         CALL    PRINTMLSTR
C:000c41 7f4c              CBR     FLAGS1,0B00000011
C:000c42 6044              SBR     FLAGS1,0B00000100
C:000c43 d072      T_SD99: RCALL   T_SD_SENSORS
C:000c44 940e 0ffc         CALL    INKEY
C:000c46 f3e1              BREQ    T_SD99
C:000c47 cd50              RJMP    T_SD00
         ;
         ;--------------------------------------
         ;
          T_SD_PUTCURSOR:
C:000c48 2722              CLR     COUNT
C:000c49 2fb2      TSD_PC2:MOV     XH,COUNT
C:000c4a   +          ADDI    XH,11
C:000c4a 5fb5      SUBI    XH,(-(11)&$FF)
C:000c4b e0ab              LDI     XL,11
C:000c4c 940e 1708         CALL    SCR_SET_CURSOR
C:000c4e 932f              PUSH    COUNT
C:000c4f   +          LDH     DATA,TSD_Y
C:000c4f 890c      LDD     DATA,Y+TSD_Y
C:000c50 e91f              LDI     TEMP,$9F
C:000c51 1720              CP      COUNT,DATA
C:000c52 f409              BRNE    TSD_PC1
C:000c53 ef10              LDI     TEMP,$F0
C:000c54 e12e      TSD_PC1:LDI     COUNT,30
C:000c55 940e 1751         CALL    SCR_FILL_ATTR
C:000c57 912f              POP     COUNT
C:000c58 9523              INC     COUNT
C:000c59 3022              CPI     COUNT,2
C:000c5a f771              BRNE    TSD_PC2
         
C:000c5b e0ad              LDI     XL,13
C:000c5c e0bc              LDI     XH,12
C:000c5d 940e 1708         CALL    SCR_SET_CURSOR
C:000c5f e200              LDI     DATA,$20 ;" "
C:000c60 fd43              SBRC    FLAGS1,3
C:000c61 ef0b              LDI     DATA,$FB ;"√"
C:000c62 940e 1742         CALL    SCR_PUTCHAR
C:000c64 9508              RET
         ;
         ;--------------------------------------
         ;
          T_SD_SETBLKLEN:
C:000c65 e100              LDI     DATA,16
C:000c66 d00f              RCALL   T_SD_CMDXX
C:000c67   +          LDIZ    CMD16*2     ;CMD16 (set_blocklen)
C:000c67 e0ea      LDI     ZL,LOW(CMD16*2)
C:000c68 e3f3      LDI     ZH,HIGH(CMD16*2)
C:000c69 940e 179b         CALL    SD_WR_PGM_6
C:000c6b 2300              TST     DATA
C:000c6c f7c1              BRNE    T_SD_SETBLKLEN
C:000c6d 9508              RET
         ;
         ;--------------------------------------
         ;
          T_SD_CRC_OFF:
C:000c6e e30b              LDI     DATA,59
C:000c6f d006              RCALL   T_SD_CMDXX
C:000c70 e70b              LDI     DATA,$40|59 ;CMD59 (crc_on_off)
C:000c71 940e 178b         CALL    SD_WR_CMD
C:000c73 2300              TST     DATA
C:000c74 f7c9              BRNE    T_SD_CRC_OFF
C:000c75 9508              RET
         ;
         ;--------------------------------------
         ;
          T_SD_CMDXX:
C:000c76 ff43              SBRS    FLAGS1,3
C:000c77 9508              RET
C:000c78 934f              PUSH    FLAGS1
C:000c79 7f4a              CBR     FLAGS1,0B00000101
C:000c7a 6042              SBR     FLAGS1,0B00000010
C:000c7b 930f              PUSH    DATA
C:000c7c   +          LDIZ    MSG_TSD_CMD*2
C:000c7c e0e0      LDI     ZL,LOW(MSG_TSD_CMD*2)
C:000c7d e1f2      LDI     ZH,HIGH(MSG_TSD_CMD*2)
C:000c7e 940e 14fd         CALL    PRINTSTRZ
C:000c80 910f              POP     DATA
C:000c81 940e 1503         CALL    DECBYTE
C:000c83 914f              POP     FLAGS1
C:000c84 9508              RET
         ;
         ;--------------------------------------
         ;
          T_SD_ACMD41:
C:000c85 ff43              SBRS    FLAGS1,3
C:000c86 9508              RET
C:000c87 934f              PUSH    FLAGS1
C:000c88 7f4a              CBR     FLAGS1,0B00000101
C:000c89 6042              SBR     FLAGS1,0B00000010
C:000c8a   +          LDIZ    MSG_TSD_ACMD41*2
C:000c8a e0e8      LDI     ZL,LOW(MSG_TSD_ACMD41*2)
C:000c8b e1f2      LDI     ZH,HIGH(MSG_TSD_ACMD41*2)
C:000c8c 940e 14fd         CALL    PRINTSTRZ
C:000c8e 914f              POP     FLAGS1
C:000c8f 9508              RET
         ;
         ;--------------------------------------
         ;
          T_SD_CSUP:
C:000c90 ff43              SBRS    FLAGS1,3
C:000c91 9508              RET
C:000c92 934f              PUSH    FLAGS1
C:000c93 7f4a              CBR     FLAGS1,0B00000101
C:000c94 6042              SBR     FLAGS1,0B00000010
C:000c95   +          LDIZ    MSG_TSD_CSUP*2
C:000c95 e1e2      LDI     ZL,LOW(MSG_TSD_CSUP*2)
C:000c96 e1f2      LDI     ZH,HIGH(MSG_TSD_CSUP*2)
C:000c97 940e 14fd         CALL    PRINTSTRZ
C:000c99 914f              POP     FLAGS1
C:000c9a 9508              RET
         ;
         ;--------------------------------------
         ;
          T_SD_CSDOWN:
C:000c9b ff43              SBRS    FLAGS1,3
C:000c9c 9508              RET
C:000c9d 934f              PUSH    FLAGS1
C:000c9e 7f4a              CBR     FLAGS1,0B00000101
C:000c9f 6042              SBR     FLAGS1,0B00000010
C:000ca0   +          LDIZ    MSG_TSD_CSDOWN*2
C:000ca0 e1ea      LDI     ZL,LOW(MSG_TSD_CSDOWN*2)
C:000ca1 e1f2      LDI     ZH,HIGH(MSG_TSD_CSDOWN*2)
C:000ca2 940e 14fd         CALL    PRINTSTRZ
C:000ca4 914f              POP     FLAGS1
C:000ca5 9508              RET
         ;
         ;--------------------------------------
         ;
          T_SD_CRLF_DC:
C:000ca6 d0f4              RCALL   UART_CRLF
C:000ca7 ff43              SBRS    FLAGS1,3
C:000ca8 9508              RET
C:000ca9 e30b              LDI     DATA,$3B ;";"
C:000caa c0ad              RJMP    UART_PUTCHAR
         ;
         ;--------------------------------------
         ;
          T_SD_SCR_CRLF_DC:
C:000cab e0a1              LDI     XL,1
C:000cac   +          LDH     XH,TSD_Y
C:000cac 89bc      LDD     XH,Y+TSD_Y
C:000cad 95b3              INC     XH
C:000cae   +          STH     TSD_Y,XH
C:000cae 8bbc      STD     Y+TSD_Y,XH
C:000caf 940e 1708         CALL    SCR_SET_CURSOR
C:000cb1 d0e9              RCALL   UART_CRLF
C:000cb2 ff43              SBRS    FLAGS1,3
C:000cb3 9508              RET
C:000cb4 e30b              LDI     DATA,$3B ;";"
C:000cb5 c0a2              RJMP    UART_PUTCHAR
         ;
         ;--------------------------------------
         ;
          T_SD_SENSORS:
C:000cb6 e0a0              LDI     XL,0
C:000cb7 e0b1              LDI     XH,1
C:000cb8 940e 1708         CALL    SCR_SET_CURSOR
C:000cba e71f              LDI     TEMP,$7F
C:000cbb 940e 1705         CALL    SCR_SET_ATTR
C:000cbd   +          LDIZ    MLMSG_SENSORS*2
C:000cbd e6e2      LDI     ZL,LOW(MLMSG_SENSORS*2)
C:000cbe e0ff      LDI     ZH,HIGH(MLMSG_SENSORS*2)
C:000cbf 940e 14f8         CALL    PRINTMLSTR
C:000cc1 e71a              LDI     TEMP,$7A
C:000cc2   +          LDIZ    MLMSG_S_NOCARD*2
C:000cc2 e8e2      LDI     ZL,LOW(MLMSG_S_NOCARD*2)
C:000cc3 e0ff      LDI     ZH,HIGH(MLMSG_S_NOCARD*2)
C:000cc4 99b5              SBIC    PINB,5
C:000cc5 c003              RJMP    T_SDSENS1
C:000cc6 e71c              LDI     TEMP,$7C
C:000cc7   +          LDIZ    MLMSG_S_INSERTED*2
C:000cc7 eaee      LDI     ZL,LOW(MLMSG_S_INSERTED*2)
C:000cc8 e0ff      LDI     ZH,HIGH(MLMSG_S_INSERTED*2)
          T_SDSENS1:
C:000cc9 940e 1705         CALL    SCR_SET_ATTR
C:000ccb 940e 14f8         CALL    PRINTMLSTR
C:000ccd e71a              LDI     TEMP,$7A
C:000cce   +          LDIZ    MLMSG_S_READONLY*2
C:000cce edea      LDI     ZL,LOW(MLMSG_S_READONLY*2)
C:000ccf e0ff      LDI     ZH,HIGH(MLMSG_S_READONLY*2)
C:000cd0 99b4              SBIC    PINB,4
C:000cd1 c003              RJMP    T_SDSENS2
C:000cd2 e71c              LDI     TEMP,$7C
C:000cd3   +          LDIZ    MLMSG_S_WRITEEN*2
C:000cd3 e0e6      LDI     ZL,LOW(MLMSG_S_WRITEEN*2)
C:000cd4 e1f0      LDI     ZH,HIGH(MLMSG_S_WRITEEN*2)
          T_SDSENS2:
C:000cd5 940e 1705         CALL    SCR_SET_ATTR
C:000cd7 940e 14f8         CALL    PRINTMLSTR
C:000cd9 9508              RET
         ;
         ;--------------------------------------
         ;
          ;
          .INCLUDE "_uart.asm"
          .MACRO  RTS_SET
                  SBI     PORTD,5
          .ENDMACRO
         
          .MACRO  RTS_CLR
                  CBI     PORTD,5
          .ENDMACRO
         ;
         ;--------------------------------------
         ;
          .DSEG
D:000109    UART_TX_HD:     .BYTE   1
D:00010a    UART_TX_TL:     .BYTE   1
D:00010b    UART_TX_LN:     .BYTE   1
D:00010c    UART_RX_HD:     .BYTE   1
D:00010d    UART_RX_TL:     .BYTE   1
D:00010e    UART_RX_LN:     .BYTE   1
         ;        .ORG    $0300                   ;см. SERVICE.ASM
         ;.EQU    UART_TXBSIZE    =128            ;размер буфера д.б. равен СТЕПЕНЬ_ДВОЙКИ байт (32,64,128 или 256)
         ;UART_TX_BUFF:   .BYTE   UART_TXBSIZE    ;адрес д.б. кратен UART_TXBSIZE
         ;.EQU    UART_RXBSIZE    =128            ;размер буфера д.б. равен СТЕПЕНЬ_ДВОЙКИ байт (32,64,128 или 256)
         ;UART_RX_BUFF:   .BYTE   UART_RXBSIZE    ;адрес д.б. кратен UART_RXBSIZE
          .CSEG
         ;
         ;--------------------------------------
         ;
          UARTDIRECT_INIT:
C:000cda d010              RCALL   UART_SET_BAUDRATE
C:000cdb e018              LDI     TEMP,(1<<TXEN)  ;Разрешаем передачу
C:000cdc   +          OUTPORT UCSR1B,TEMP     ;
C:000cdc 9310 009a STS     UCSR1B+$20*(UCSR1B<$40),TEMP
C:000cde 7f4d              CBR     FLAGS1,0B00000010
C:000cdf 6041              SBR     FLAGS1,0B00000001
C:000ce0 9508              RET
         ;
         ;--------------------------------------
         ;
          UARTDIRECT_CRLF:
C:000ce1 e00d              LDI     DATA,$0D
C:000ce2 d001              RCALL   UARTDIRECT_PUTCHAR
C:000ce3 e00a              LDI     DATA,$0A
         ;
         ;--------------------------------------
         ;in:    DATA == передаваемый байт
          UARTDIRECT_PUTCHAR:
C:000ce4   +  UD_PCHR:INPORT  R0,UCSR1A
C:000ce4 9000 009b LDS     R0,UCSR1A+$20*(UCSR1A<$40)
C:000ce6 fe05              SBRS    R0,UDRE
C:000ce7 cffc              RJMP    UD_PCHR
C:000ce8   +          OUTPORT UDR1,DATA
C:000ce8 9300 009c STS     UDR1+$20*(UDR1<$40),DATA
C:000cea 9508              RET
         ;
         ;--------------------------------------
         ;
          UART_SET_BAUDRATE:
C:000ceb   +          OUTPORT UBRR1H,NULL
C:000ceb 92f0 0098 STS     UBRR1H+$20*(UBRR1H<$40),NULL
C:000ced e015              LDI     TEMP,5 ;115200 baud (CPU @ 11.0592 MHz), Normal speed
C:000cee   +          OUTPORT UBRR1L,TEMP
C:000cee 9310 0099 STS     UBRR1L+$20*(UBRR1L<$40),TEMP
C:000cf0   +          OUTPORT UCSR1A,NULL ;Normal Speed
C:000cf0 92f0 009b STS     UCSR1A+$20*(UCSR1A<$40),NULL
C:000cf2 e01e              LDI     TEMP,(1<<UCSZ1)|(1<<UCSZ0)|(1<<USBS) ;data8bit, 2stopbits
C:000cf3   +          OUTPORT UCSR1C,TEMP
C:000cf3 9310 009d STS     UCSR1C+$20*(UCSR1C<$40),TEMP
C:000cf5 9508              RET
         ;
         ;--------------------------------------
         ;
          UART_INIT:
C:000cf6 dff4              RCALL   UART_SET_BAUDRATE
C:000cf7 e918              LDI     TEMP,(1<<RXCIE)|(1<<RXEN)|(1<<TXEN)
C:000cf8   +          OUTPORT UCSR1B,TEMP
C:000cf8 9310 009a STS     UCSR1B+$20*(UCSR1B<$40),TEMP
C:000cfa 7f4e              CBR     FLAGS1,0B00000001
C:000cfb 6042              SBR     FLAGS1,0B00000010
         
C:000cfc e010              LDI     TEMP,LOW(UART_TX_BUFF)
C:000cfd 9310 0109         STS     UART_TX_HD,TEMP
C:000cff 9310 010a         STS     UART_TX_TL,TEMP
C:000d01 92f0 010b         STS     UART_TX_LN,NULL
C:000d03 e810              LDI     TEMP,LOW(UART_RX_BUFF)
C:000d04 9310 010c         STS     UART_RX_HD,TEMP
C:000d06 9310 010d         STS     UART_RX_TL,TEMP
C:000d08 92f0 010e         STS     UART_RX_LN,NULL
         
C:000d0a   +          RTS_CLR
C:000d0a 9895      CBI     PORTD,5
C:000d0b 9a8d              SBI     DDRD,5
C:000d0c 98be              CBI     DDRB,6
         
C:000d0d 9508              RET
         ;
         ;--------------------------------------
         ;USART1 RX Interrupt handler
          USART1_RXC:
C:000d0e 931f              PUSH    TEMP
C:000d0f b71f              IN      TEMP,SREG
C:000d10 931f              PUSH    TEMP
C:000d11 930f              PUSH    DATA
         
C:000d12   +          INPORT  DATA,UDR1
C:000d12 9100 009c LDS     DATA,UDR1+$20*(UDR1<$40)
C:000d14 9110 010e         LDS     TEMP,UART_RX_LN
C:000d16 3810              CPI     TEMP,UART_RXBSIZE ;буфер полный?
C:000d17 f498              BRCC    U1RX9
C:000d18   +          PUSHX
C:000d18 93af      PUSH    XL
C:000d19 93bf      PUSH    XH
C:000d1a e0b3              LDI     XH,HIGH(UART_RX_BUFF)
C:000d1b 91a0 010c         LDS     XL,UART_RX_HD
C:000d1d 930d              ST      X+,DATA
C:000d1e 77af              ANDI    XL,UART_RXBSIZE-1
C:000d1f 68a0              ORI     XL,LOW(UART_RX_BUFF)
C:000d20 93a0 010c         STS     UART_RX_HD,XL
C:000d22   +          POPX
C:000d22 91bf      POP     XH
C:000d23 91af      POP     XL
C:000d24 9513              INC     TEMP
C:000d25 9310 010e         STS     UART_RX_LN,TEMP
C:000d27 361c              CPI     TEMP,UART_RXBSIZE-20
C:000d28 f010              BRCS    U1RX9
C:000d29 fd44              SBRC    FLAGS1,4
C:000d2a   +          RTS_SET
C:000d2a 9a95      SBI     PORTD,5
          U1RX9:
C:000d2b 910f              POP     DATA
C:000d2c 911f              POP     TEMP
C:000d2d bf1f              OUT     SREG,TEMP
C:000d2e 911f              POP     TEMP
C:000d2f 9518              RETI
         ;
         ;--------------------------------------
         ;USART1 UDR Empty Interrupt handler
          USART1_DRE:
C:000d30 931f              PUSH    TEMP
C:000d31 b71f              IN      TEMP,SREG
C:000d32 931f              PUSH    TEMP
         
C:000d33 9110 010b         LDS     TEMP,UART_TX_LN
C:000d35 2311              TST     TEMP ;есть что в буфере?
C:000d36 f0c1              BREQ    U1TX1
C:000d37 ff44              SBRS    FLAGS1,4
C:000d38 c002              RJMP    U1TX2
C:000d39 99b6              SBIC    PINB,6
C:000d3a c014              RJMP    U1TX1
         
C:000d3b   +  U1TX2:  PUSHX
C:000d3b 93af      PUSH    XL
C:000d3c 93bf      PUSH    XH
C:000d3d 930f              PUSH    DATA
C:000d3e e0b3              LDI     XH,HIGH(UART_TX_BUFF)
C:000d3f 91a0 010a         LDS     XL,UART_TX_TL
C:000d41 910d              LD      DATA,X+
C:000d42   +          OUTPORT UDR1,DATA
C:000d42 9300 009c STS     UDR1+$20*(UDR1<$40),DATA
C:000d44 77af              ANDI    XL,UART_TXBSIZE-1
C:000d45 60a0              ORI     XL,LOW(UART_TX_BUFF)
C:000d46 93a0 010a         STS     UART_TX_TL,XL
C:000d48 951a              DEC     TEMP
C:000d49 9310 010b         STS     UART_TX_LN,TEMP
C:000d4b 910f              POP     DATA
C:000d4c   +          POPX
C:000d4c 91bf      POP     XH
C:000d4d 91af      POP     XL
C:000d4e c005              RJMP    U1TX9
         
C:000d4f   +  U1TX1:  INPORT  TEMP,UCSR1B
C:000d4f 9110 009a LDS     TEMP,UCSR1B+$20*(UCSR1B<$40)
C:000d51 7d1f              CBR     TEMP,(1<<UDRIE) ;Запрещаем прерывания Empty Data Register
C:000d52   +          OUTPORT UCSR1B,TEMP
C:000d52 9310 009a STS     UCSR1B+$20*(UCSR1B<$40),TEMP
         
C:000d54 911f      U1TX9:  POP     TEMP
C:000d55 bf1f              OUT     SREG,TEMP
C:000d56 911f              POP     TEMP
C:000d57 9518              RETI
         ;
         ;--------------------------------------
         ;Put byte to UART buffer
         ;in:    DATA
          UART_PUTCHAR:
C:000d58 931f              PUSH    TEMP
C:000d59   +          PUSHX
C:000d59 93af      PUSH    XL
C:000d5a 93bf      PUSH    XH
         
C:000d5b fd44      U_PCHR1:SBRC    FLAGS1,4
C:000d5c d087              RCALL   UART_CHK_CTS
C:000d5d 9110 010b         LDS     TEMP,UART_TX_LN
C:000d5f 3810              CPI     TEMP,UART_TXBSIZE ;буфер полный?
C:000d60 f7d0              BRCC    U_PCHR1
         
C:000d61 e0b3              LDI     XH,HIGH(UART_TX_BUFF)
C:000d62 91a0 0109         LDS     XL,UART_TX_HD
C:000d64 930d              ST      X+,DATA
C:000d65 94f8              CLI
C:000d66 9110 010b         LDS     TEMP,UART_TX_LN
C:000d68 9513              INC     TEMP
C:000d69 9310 010b         STS     UART_TX_LN,TEMP
C:000d6b 9478              SEI
C:000d6c 77af              ANDI    XL,UART_TXBSIZE-1
C:000d6d 60a0              ORI     XL,LOW(UART_TX_BUFF)
C:000d6e 93a0 0109         STS     UART_TX_HD,XL
         
C:000d70 ff44              SBRS    FLAGS1,4
C:000d71 c002              RJMP    U_PCHR8
C:000d72 99b6              SBIC    PINB,6
C:000d73 c005              RJMP    U_PCHR9
C:000d74   +  U_PCHR8:INPORT  TEMP,UCSR1B
C:000d74 9110 009a LDS     TEMP,UCSR1B+$20*(UCSR1B<$40)
C:000d76 6210              SBR     TEMP,(1<<UDRIE) ;Разрешаем прерывания Empty Data Register
C:000d77   +          OUTPORT UCSR1B,TEMP
C:000d77 9310 009a STS     UCSR1B+$20*(UCSR1B<$40),TEMP
         
C:000d79   +  U_PCHR9:POPX
C:000d79 91bf      POP     XH
C:000d7a 91af      POP     XL
C:000d7b 911f              POP     TEMP
C:000d7c 9508              RET
         ;
         ;--------------------------------------
         ;Get byte from UART buffer
         ;out:   sreg.Z == SET - нет данных
         ;       DATA == данные
          UART_GETCHAR:
C:000d7d 931f              PUSH    TEMP
C:000d7e 9110 010e         LDS     TEMP,UART_RX_LN
C:000d80 2311              TST     TEMP
C:000d81 f0b9              BREQ    U_GCHR9
C:000d82   +          PUSHX
C:000d82 93af      PUSH    XL
C:000d83 93bf      PUSH    XH
C:000d84 e0b3              LDI     XH,HIGH(UART_RX_BUFF)
C:000d85 91a0 010d         LDS     XL,UART_RX_TL
C:000d87 910d              LD      DATA,X+
C:000d88 94f8              CLI
C:000d89 9110 010e         LDS     TEMP,UART_RX_LN
C:000d8b 951a              DEC     TEMP
C:000d8c 9310 010e         STS     UART_RX_LN,TEMP
C:000d8e 9478              SEI
C:000d8f 361b              CPI     TEMP,UART_RXBSIZE-21
C:000d90 f408              BRCC    U_GCHR1
C:000d91   +          RTS_CLR
C:000d91 9895      CBI     PORTD,5
C:000d92 77af      U_GCHR1:ANDI    XL,UART_RXBSIZE-1
C:000d93 68a0              ORI     XL,LOW(UART_RX_BUFF)
C:000d94 93a0 010d         STS     UART_RX_TL,XL
C:000d96 9498              CLZ
C:000d97   +          POPX
C:000d97 91bf      POP     XH
C:000d98 91af      POP     XL
C:000d99 911f      U_GCHR9:POP     TEMP
C:000d9a 9508              RET
         ;
         ;--------------------------------------
         ;
          UART_CRLF:
C:000d9b e00d              LDI     DATA,$0D
C:000d9c dfbb              RCALL   UART_PUTCHAR
C:000d9d e00a              LDI     DATA,$0A
C:000d9e cfb9              RJMP    UART_PUTCHAR
         ;
         ;--------------------------------------
         ;
          UART_DUMP512:
C:000d9f 934f              PUSH    FLAGS1
C:000da0 7f42              CBR     FLAGS1,0B00001101
C:000da1 6042              SBR     FLAGS1,0B00000010
C:000da2   +          PUSHZ
C:000da2 93ef      PUSH    ZL
C:000da3 93ff      PUSH    ZH
C:000da4   +          LDIZ    MSG_DUMPHEAD*2
C:000da4 e9e0      LDI     ZL,LOW(MSG_DUMPHEAD*2)
C:000da5 e1fb      LDI     ZH,HIGH(MSG_DUMPHEAD*2)
C:000da6 d756              RCALL   PRINTSTRZ
C:000da7   +          POPZ
C:000da7 91ff      POP     ZH
C:000da8 91ef      POP     ZL
C:000da9   +          LDIX    0
C:000da9 e0a0      LDI     XL,LOW(0)
C:000daa e0b0      LDI     XH,HIGH(0)
C:000dab dfef      UDUMP3: RCALL   UART_CRLF
C:000dac 2f0b              MOV     DATA,XH
C:000dad d761              RCALL   HEXBYTE
C:000dae 2f0a              MOV     DATA,XL
C:000daf d75f              RCALL   HEXBYTE
C:000db0 e200              LDI     DATA,$20
C:000db1 dfa6              RCALL   UART_PUTCHAR
C:000db2 dfa5              RCALL   UART_PUTCHAR
C:000db3   +          PUSHZ
C:000db3 93ef      PUSH    ZL
C:000db4 93ff      PUSH    ZH
C:000db5 e180              LDI     WL,16
C:000db6 9101      UDUMP1: LD      DATA,Z+
C:000db7 d795              RCALL   HEXBYTE_FOR_DUMP
C:000db8 958a              DEC     WL
C:000db9 f7e1              BRNE    UDUMP1
C:000dba e200              LDI     DATA,$20
C:000dbb df9c              RCALL   UART_PUTCHAR
C:000dbc   +          POPZ
C:000dbc 91ff      POP     ZH
C:000dbd 91ef      POP     ZL
C:000dbe e180              LDI     WL,16
C:000dbf 9101      UDUMP2: LD      DATA,Z+
C:000dc0 d792              RCALL   PUTCHAR_FOR_DUMP
C:000dc1 958a              DEC     WL
C:000dc2 f7e1              BRNE    UDUMP2
C:000dc3 9650              ADIW    XL,16
C:000dc4 30b2              CPI     XH,$02
C:000dc5 f729              BRNE    UDUMP3
C:000dc6 914f              POP     FLAGS1
C:000dc7 9508              RET
          MSG_DUMPHEAD:
                  .DB     $0D,$0A,$3B,"     .0 .1 .2 .3 .4 .5 .6 .7 .8 .9 .A .B .C .D .E .F",0
C:000DC8 0D0A3B20202020202E30202E31202E32202E33202E34202E35202E36202E37202E38202E39202E41202E42202E43202E44202E45202E4600
         ;
         ;--------------------------------------
         ;
          UART_CHK_CTS:
C:000de4 99b6              SBIC    PINB,6
C:000de5 9508              RET
C:000de6 931f              PUSH    TEMP
C:000de7 9110 010b         LDS     TEMP,UART_TX_LN
C:000de9 2311              TST     TEMP
C:000dea f029              BREQ    UART_CHKCTS9
C:000deb   +          INPORT  TEMP,UCSR1B
C:000deb 9110 009a LDS     TEMP,UCSR1B+$20*(UCSR1B<$40)
C:000ded 6210              SBR     TEMP,(1<<UDRIE) ;Разрешаем прерывания Empty Data Register
C:000dee   +          OUTPORT UCSR1B,TEMP
C:000dee 9310 009a STS     UCSR1B+$20*(UCSR1B<$40),TEMP
          UART_CHKCTS9:
C:000df0 911f              POP     TEMP
C:000df1 9508              RET
         ;
         ;--------------------------------------
         ;
          ;
          .INCLUDE "_timers.asm"
         ;
         ;--------------------------------------
         ;
          .DSEG
D:00010f    MSCOUNTER:      .BYTE   2
          .CSEG
         ;
         ;--------------------------------------
         ;
          TIMERS_INIT:
         ;TIMER 3
C:000df2 e010              LDI     TEMP,(0<<WGM31)|(0<<WGM30)
C:000df3   +          OUTPORT TCCR3A,TEMP
C:000df3 9310 008b STS     TCCR3A+$20*(TCCR3A<$40),TEMP
C:000df5 e019              LDI     TEMP,(0<<WGM33)|(1<<WGM32)|(0<<CS32)|(0<<CS31)|(1<<CS30)
C:000df6   +          OUTPORT TCCR3B,TEMP
C:000df6 9310 008a STS     TCCR3B+$20*(TCCR3B<$40),TEMP
         
C:000df8 e21b              LDI     TEMP,HIGH(11058)
C:000df9   +          OUTPORT OCR3AH,TEMP
C:000df9 9310 0087 STS     OCR3AH+$20*(OCR3AH<$40),TEMP
C:000dfb e312              LDI     TEMP,LOW(11058)
C:000dfc   +          OUTPORT OCR3AL,TEMP
C:000dfc 9310 0086 STS     OCR3AL+$20*(OCR3AL<$40),TEMP
         ;
C:000dfe   +          INPORT  TEMP,ETIMSK
C:000dfe 9110 007d LDS     TEMP,ETIMSK+$20*(ETIMSK<$40)
C:000e00 6110              ORI     TEMP,(1<<OCIE3A)
C:000e01   +          OUTPORT ETIMSK,TEMP
C:000e01 9310 007d STS     ETIMSK+$20*(ETIMSK<$40),TEMP
         
C:000e03 9508              RET
         ;
         ;--------------------------------------
         ;
          TIM3_COMPA:
C:000e04 931f              PUSH    TEMP
C:000e05 b71f              IN      TEMP,SREG
C:000e06 931f              PUSH    TEMP
         
C:000e07 9110 010f         LDS     TEMP,MSCOUNTER+0
C:000e09 fd14              SBRC    TEMP,4
C:000e0a   +          LED_ON
C:000e0a 98c7      CBI     PORTB,7
C:000e0b 9513              INC     TEMP
C:000e0c 9310 010f         STS     MSCOUNTER+0,TEMP
C:000e0e f431              BRNE    TIM3_CMPA_1
C:000e0f   +          LED_OFF
C:000e0f 9ac7      SBI     PORTB,7
C:000e10 9110 0110         LDS     TEMP,MSCOUNTER+1
C:000e12 9513              INC     TEMP
C:000e13 9310 0110         STS     MSCOUNTER+1,TEMP
          TIM3_CMPA_1:
         
C:000e15 911f              POP     TEMP
C:000e16 bf1f              OUT     SREG,TEMP
C:000e17 911f              POP     TEMP
C:000e18 9518              RETI
         ;
         ;--------------------------------------
         ;in:    W == таймайт, мс (1..16383)
         ;       Z == указатель в RAM (используются два байта)
          SET_TIMEOUT_MS:
C:000e19   +          PUSHX
C:000e19 93af      PUSH    XL
C:000e1a 93bf      PUSH    XH
C:000e1b 94f8              CLI
C:000e1c 91a0 010f         LDS     XL,MSCOUNTER+0
C:000e1e 91b0 0110         LDS     XH,MSCOUNTER+1
C:000e20 9478              SEI
C:000e21 0fa8              ADD     XL,WL
C:000e22 1fb9              ADC     XH,WH
C:000e23 68b0              ORI     XH,$80
C:000e24 83a0              ST      Z,XL
C:000e25 83b1              STD     Z+1,XH
C:000e26   +          POPX
C:000e26 91bf      POP     XH
C:000e27 91af      POP     XL
C:000e28 9508              RET
         ;
         ;--------------------------------------
         ;in:    Z == указатель в RAM (используются два байта)
         ;out:   sreg.C - SET == время вышло
          CHECK_TIMEOUT_MS:
C:000e29 939f              PUSH    WH
C:000e2a 8191              LDD     WH,Z+1
C:000e2b ff97              SBRS    WH,7
C:000e2c c012              RJMP    CHKTMS_9
C:000e2d 938f              PUSH    WL
C:000e2e 8180              LD      WL,Z
C:000e2f   +          PUSHX
C:000e2f 93af      PUSH    XL
C:000e30 93bf      PUSH    XH
C:000e31 94f8              CLI
C:000e32 91a0 010f         LDS     XL,MSCOUNTER+0
C:000e34 91b0 0110         LDS     XH,MSCOUNTER+1
C:000e36 9478              SEI
C:000e37 1ba8              SUB     XL,WL
C:000e38 0bb9              SBC     XH,WH
C:000e39 fdb6              SBRC    XH,6
C:000e3a c007              RJMP    CHKTMS_8
C:000e3b 82f1              STD     Z+1,NULL
C:000e3c   +          POPX
C:000e3c 91bf      POP     XH
C:000e3d 91af      POP     XL
C:000e3e 918f              POP     WL
          CHKTMS_9:
C:000e3f 919f              POP     WH
C:000e40 9408              SEC
C:000e41 9508              RET
          CHKTMS_8:
C:000e42   +          POPX
C:000e42 91bf      POP     XH
C:000e43 91af      POP     XL
C:000e44 918f              POP     WL
C:000e45 919f              POP     WH
C:000e46 9488              CLC
C:000e47 9508              RET
         ;
         ;--------------------------------------
         ;
          ;
          .INCLUDE "_pintest.asm"
         ;
         ;--------------------------------------
         ;
          PINTEST:
C:000e48 2711              CLR     TEMP
C:000e49 9a93              SBI     PORTD,3
C:000e4a 0000              NOP
C:000e4b 0000              NOP
C:000e4c 0000              NOP
C:000e4d 0000              NOP
C:000e4e 0000              NOP
C:000e4f 0000              NOP
C:000e50 0000              NOP
C:000e51 0000              NOP
C:000e52 9b83              SBIS    PIND,3
C:000e53 6011              SBR     TEMP,$01
C:000e54 9893              CBI     PORTD,3
C:000e55 9a8b              SBI     DDRD,3
C:000e56 0000              NOP
C:000e57 0000              NOP
C:000e58 9983              SBIC    PIND,3
C:000e59 6012              SBR     TEMP,$02
C:000e5a 988b              CBI     DDRD,3
C:000e5b 2311              TST     TEMP
C:000e5c f061              BREQ    PINTEST_UART_OK
          CHAOS00:
C:000e5d 9abf              SBI     DDRB,7
C:000e5e 940e 2643 CHAOS2: CALL    RANDOM
C:000e60   +          LED_OFF
C:000e60 9ac7      SBI     PORTB,7
C:000e61 fd00              SBRC    DATA,0
C:000e62   +          LED_ON
C:000e62 98c7      CBI     PORTB,7
C:000e63   +          LDIX    $6C00
C:000e63 e0a0      LDI     XL,LOW($6C00)
C:000e64 e6bc      LDI     XH,HIGH($6C00)
C:000e65 50a1      CHAOS1: SUBI    XL,1
C:000e66 40b0              SBCI    XH,0
C:000e67 f7e9              BRNE    CHAOS1
C:000e68 cff5              RJMP    CHAOS2
         
          PINTEST_UART_OK:
C:000e69 940e 0cda         CALL    UARTDIRECT_INIT
         
C:000e6b de75              RCALL   UARTDIRECT_CRLF
C:000e6c de74              RCALL   UARTDIRECT_CRLF
C:000e6d de73              RCALL   UARTDIRECT_CRLF
C:000e6e   +          LDIZ    MSG_TITLE1*2
C:000e6e ece0      LDI     ZL,LOW(MSG_TITLE1*2)
C:000e6f e0f0      LDI     ZH,HIGH(MSG_TITLE1*2)
C:000e70 940e 14fd         CALL    PRINTSTRZ
C:000e72 940e 14d4         CALL    PRINT_SHORT_VERS
C:000e74   +          LDIZ    MLMSG_PINTEST*2
C:000e74 e0e0      LDI     ZL,LOW(MLMSG_PINTEST*2)
C:000e75 e0f1      LDI     ZH,HIGH(MLMSG_PINTEST*2)
C:000e76 940e 14f8         CALL    PRINTMLSTR
         
C:000e78 e515              LDI     TEMP,0B01010101
C:000e79 bb1b              OUT     PORTA,TEMP
C:000e7a ea1a              LDI     TEMP,0B10101010
C:000e7b bb1a              OUT     DDRA,TEMP
C:000e7c e812              LDI     TEMP,0B10000010
C:000e7d bb18              OUT     PORTB,TEMP
C:000e7e e015              LDI     TEMP,0B00000101
C:000e7f bb17              OUT     DDRB,TEMP
C:000e80 e115              LDI     TEMP,0B00010101
C:000e81 bb15              OUT     PORTC,TEMP
C:000e82 e01a              LDI     TEMP,0B00001010
C:000e83 bb14              OUT     DDRC,TEMP
C:000e84 9a95              SBI     PORTD,5
C:000e85 988d              CBI     DDRD,5
C:000e86 9a18              SBI     PORTE,0
C:000e87 9810              CBI     DDRE,0
C:000e88 9819              CBI     PORTE,1
C:000e89 9a11              SBI     DDRE,1
C:000e8a e115              LDI     TEMP,0B00010101
C:000e8b   +          OUTPORT PORTG,TEMP
C:000e8b 9310 0065 STS     PORTG+$20*(PORTG<$40),TEMP
C:000e8d e01a              LDI     TEMP,0B00001010
C:000e8e   +          OUTPORT DDRG,TEMP
C:000e8e 9310 0064 STS     DDRG+$20*(DDRG<$40),TEMP
C:000e90   +          DELAY_US 100
          .IF (100<70)
C:000e90 e184      LDI     WL,LOW(100*27648/10000)
C:000e91 e091      LDI     WH,HIGH(100*27648/10000)
C:000e92 9701      DLY_US2:SBIW    WL,1    

C:000e93 f7f1      BRNE    DLY_US2 

          .ENDIF
         
C:000e94 2700              CLR     DATA
C:000e95 b319              IN      TEMP,PINA
C:000e96 3515              CPI     TEMP,0B01010101
C:000e97 f009              BREQ    PINTEST_OK11
C:000e98 6001              ORI     DATA,$01
          PINTEST_OK11:
C:000e99 b316              IN      TEMP,PINB
C:000e9a 7817              ANDI    TEMP,0B10000111
C:000e9b 3810              CPI     TEMP,0B10000000
C:000e9c f009              BREQ    PINTEST_OK12
C:000e9d 6002              ORI     DATA,$02
          PINTEST_OK12:
C:000e9e b313              IN      TEMP,PINC
C:000e9f 711f              ANDI    TEMP,0B00011111
C:000ea0 3115              CPI     TEMP,0B00010101
C:000ea1 f009              BREQ    PINTEST_OK13
C:000ea2 6004              ORI     DATA,$04
          PINTEST_OK13:
C:000ea3 9b85              SBIS    PIND,5
C:000ea4 6008              ORI     DATA,$08
C:000ea5 b111              IN      TEMP,PINE
C:000ea6 7012              ANDI    TEMP,0B00000010
C:000ea7 3010              CPI     TEMP,0B00000000
C:000ea8 f009              BREQ    PINTEST_OK14
C:000ea9 6100              ORI     DATA,$10
          PINTEST_OK14:
C:000eaa   +          INPORT  TEMP,PING
C:000eaa 9110 0063 LDS     TEMP,PING+$20*(PING<$40)
C:000eac 711f              ANDI    TEMP,0B00011111
C:000ead 3115              CPI     TEMP,0B00010101
C:000eae f009              BREQ    PINTEST_OK15
C:000eaf 6200              ORI     DATA,$20
          PINTEST_OK15:
         
C:000eb0 ea1a              LDI     TEMP,0B10101010
C:000eb1 bb1b              OUT     PORTA,TEMP
C:000eb2 e515              LDI     TEMP,0B01010101
C:000eb3 bb1a              OUT     DDRA,TEMP
C:000eb4 e015              LDI     TEMP,0B00000101
C:000eb5 bb18              OUT     PORTB,TEMP
C:000eb6 e812              LDI     TEMP,0B10000010
C:000eb7 bb17              OUT     DDRB,TEMP
C:000eb8 e01a              LDI     TEMP,0B00001010
C:000eb9 bb15              OUT     PORTC,TEMP
C:000eba e115              LDI     TEMP,0B00010101
C:000ebb bb14              OUT     DDRC,TEMP
C:000ebc 9895              CBI     PORTD,5
C:000ebd 9a8d              SBI     DDRD,5
C:000ebe 9818              CBI     PORTE,0
C:000ebf 9a10              SBI     DDRE,0
C:000ec0 9a19              SBI     PORTE,1
C:000ec1 9811              CBI     DDRE,1
C:000ec2 e01a              LDI     TEMP,0B00001010
C:000ec3   +          OUTPORT PORTG,TEMP
C:000ec3 9310 0065 STS     PORTG+$20*(PORTG<$40),TEMP
C:000ec5 e115              LDI     TEMP,0B00010101
C:000ec6   +          OUTPORT DDRG,TEMP
C:000ec6 9310 0064 STS     DDRG+$20*(DDRG<$40),TEMP
C:000ec8   +          DELAY_US 100
          .IF (100<70)
C:000ec8 e184      LDI     WL,LOW(100*27648/10000)
C:000ec9 e091      LDI     WH,HIGH(100*27648/10000)
C:000eca 9701      DLY_US2:SBIW    WL,1    

C:000ecb f7f1      BRNE    DLY_US2 

          .ENDIF
         
C:000ecc b319              IN      TEMP,PINA
C:000ecd 3a1a              CPI     TEMP,0B10101010
C:000ece f009              BREQ    PINTEST_OK21
C:000ecf 6001              ORI     DATA,$01
          PINTEST_OK21:
C:000ed0 b316              IN      TEMP,PINB
C:000ed1 7817              ANDI    TEMP,0B10000111
C:000ed2 3015              CPI     TEMP,0B00000101
C:000ed3 f009              BREQ    PINTEST_OK22
C:000ed4 6002              ORI     DATA,$02
          PINTEST_OK22:
C:000ed5 b313              IN      TEMP,PINC
C:000ed6 711f              ANDI    TEMP,0B00011111
C:000ed7 301a              CPI     TEMP,0B00001010
C:000ed8 f009              BREQ    PINTEST_OK23
C:000ed9 6004              ORI     DATA,$04
          PINTEST_OK23:
C:000eda 9985              SBIC    PIND,5
C:000edb 6008              ORI     DATA,$08
C:000edc b111              IN      TEMP,PINE
C:000edd 7013              ANDI    TEMP,0B00000011
C:000ede 3012              CPI     TEMP,0B00000010
C:000edf f009              BREQ    PINTEST_OK24
C:000ee0 6100              ORI     DATA,$10
          PINTEST_OK24:
C:000ee1   +          INPORT  TEMP,PING
C:000ee1 9110 0063 LDS     TEMP,PING+$20*(PING<$40)
C:000ee3 711f              ANDI    TEMP,0B00011111
C:000ee4 301a              CPI     TEMP,0B00001010
C:000ee5 f009              BREQ    PINTEST_OK25
C:000ee6 6200              ORI     DATA,$20
          PINTEST_OK25:
C:000ee7 2300              TST     DATA
C:000ee8 f429              BRNE    PINTEST_ERROR
C:000ee9   +          LDIZ    MLMSG_PINTEST_OK*2
C:000ee9 e4e2      LDI     ZL,LOW(MLMSG_PINTEST_OK*2)
C:000eea e0f1      LDI     ZH,HIGH(MLMSG_PINTEST_OK*2)
C:000eeb 940e 14f8         CALL    PRINTMLSTR
C:000eed 9508              RET
         ;
          PINTEST_ERROR:
C:000eee 930f              PUSH    DATA
C:000eef 940e 2664         CALL    CLRPINS
C:000ef1   +          LDIZ    MLMSG_PINTEST_ERROR*2
C:000ef1 e7e2      LDI     ZL,LOW(MLMSG_PINTEST_ERROR*2)
C:000ef2 e0f1      LDI     ZH,HIGH(MLMSG_PINTEST_ERROR*2)
C:000ef3 940e 14f8         CALL    PRINTMLSTR
C:000ef5 910f              POP     DATA
C:000ef6 9506              LSR     DATA
C:000ef7 930f              PUSH    DATA
C:000ef8 f420              BRCC    PINTEST_ERR1
C:000ef9   +          LDIZ    MSG_PINTEST_PA*2
C:000ef9 ebea      LDI     ZL,LOW(MSG_PINTEST_PA*2)
C:000efa e0f1      LDI     ZH,HIGH(MSG_PINTEST_PA*2)
C:000efb 940e 14fd         CALL    PRINTSTRZ
          PINTEST_ERR1:
C:000efd 910f              POP     DATA
C:000efe 9506              LSR     DATA
C:000eff 930f              PUSH    DATA
C:000f00 f420              BRCC    PINTEST_ERR2
C:000f01   +          LDIZ    MSG_PINTEST_PB*2
C:000f01 ece0      LDI     ZL,LOW(MSG_PINTEST_PB*2)
C:000f02 e0f1      LDI     ZH,HIGH(MSG_PINTEST_PB*2)
C:000f03 940e 14fd         CALL    PRINTSTRZ
          PINTEST_ERR2:
C:000f05 910f              POP     DATA
C:000f06 9506              LSR     DATA
C:000f07 930f              PUSH    DATA
C:000f08 f420              BRCC    PINTEST_ERR3
C:000f09   +          LDIZ    MSG_PINTEST_PC*2
C:000f09 ece6      LDI     ZL,LOW(MSG_PINTEST_PC*2)
C:000f0a e0f1      LDI     ZH,HIGH(MSG_PINTEST_PC*2)
C:000f0b 940e 14fd         CALL    PRINTSTRZ
          PINTEST_ERR3:
C:000f0d 910f              POP     DATA
C:000f0e 9506              LSR     DATA
C:000f0f 930f              PUSH    DATA
C:000f10 f420              BRCC    PINTEST_ERR4
C:000f11   +          LDIZ    MSG_PINTEST_PD*2
C:000f11 ecec      LDI     ZL,LOW(MSG_PINTEST_PD*2)
C:000f12 e0f1      LDI     ZH,HIGH(MSG_PINTEST_PD*2)
C:000f13 940e 14fd         CALL    PRINTSTRZ
          PINTEST_ERR4:
C:000f15 910f              POP     DATA
C:000f16 9506              LSR     DATA
C:000f17 930f              PUSH    DATA
C:000f18 f420              BRCC    PINTEST_ERR5
C:000f19   +          LDIZ    MSG_PINTEST_PE*2
C:000f19 ede2      LDI     ZL,LOW(MSG_PINTEST_PE*2)
C:000f1a e0f1      LDI     ZH,HIGH(MSG_PINTEST_PE*2)
C:000f1b 940e 14fd         CALL    PRINTSTRZ
          PINTEST_ERR5:
C:000f1d 910f              POP     DATA
C:000f1e 9506              LSR     DATA
C:000f1f 930f              PUSH    DATA
C:000f20 f420              BRCC    PINTEST_ERR6
C:000f21   +          LDIZ    MSG_PINTEST_PG*2
C:000f21 ede8      LDI     ZL,LOW(MSG_PINTEST_PG*2)
C:000f22 e0f1      LDI     ZH,HIGH(MSG_PINTEST_PG*2)
C:000f23 940e 14fd         CALL    PRINTSTRZ
          PINTEST_ERR6:
C:000f25   +          LDIZ    MLMSG_HALT*2
C:000f25 edee      LDI     ZL,LOW(MLMSG_HALT*2)
C:000f26 e0f1      LDI     ZH,HIGH(MLMSG_HALT*2)
C:000f27 940e 14f8         CALL    PRINTMLSTR
C:000f29 940e 2664         CALL    CLRPINS
          PINTEST_HALT:
C:000f2b cfff              RJMP    PINTEST_HALT
         ;
         ;--------------------------------------
         ;
          ;
          .INCLUDE "_ps2k.asm"
          .EQU    KEY_ESC         =$76
          .EQU    KEY_ENTER       =$5A
          .EQU    KEY_UP          =$75
          .EQU    KEY_DOWN        =$72
          .EQU    KEY_LEFT        =$6B
          .EQU    KEY_RIGHT       =$74
          .EQU    KEY_PAGEUP      =$7D
          .EQU    KEY_PAGEDOWN    =$7A
          .EQU    KEY_HOME        =$6C
          .EQU    KEY_END         =$69
          .EQU    KEY_SPACE       =$29
          .EQU    KEY_F1          =$05
          .EQU    KEY_NUMLOCK     =$77
          .EQU    KEY_CAPSLOCK    =$58
          .EQU    KEY_SCROLLLOCK  =$7E
          .EQU    KEY_Y           =$35
         
          .EQU    PS2K_BIT_PARITY =0
          .EQU    PS2K_BIT_EXTKEY =1      ; расш.код
          .EQU    PS2K_BIT_RELEASE=2      ; отпускание
          .EQU    PS2K_BIT_ACKBIT =3      ; окончание передачи
          .EQU    PS2K_BIT_TX     =7      ; передача
          .EQU    PS2K_BIT_READY  =7
         
          .MACRO  PS2K_DATALINE_UP
                  CBI     DDRD,6
                  SBI     PORTD,6
          .ENDMACRO
         
          .MACRO  PS2K_DATALINE_DOWN
                  CBI     PORTD,6
                  SBI     DDRD,6
          .ENDMACRO
         
          .MACRO  PS2K_CLOCKLINE_UP
                  CBI     DDRE,4
                  SBI     PORTE,4
          .ENDMACRO
         
          .MACRO  PS2K_CLOCKLINE_DOWN
                  CBI     PORTE,4
                  SBI     DDRE,4
          .ENDMACRO
         ;
         ;--------------------------------------
         ;
          .DSEG
D:000111    PS2K_BIT_COUNT: .BYTE   1
D:000112    PS2K_DATA:      .BYTE   1
D:000113    PS2K_RAW_READY: .BYTE   1
D:000114    PS2K_RAW_CODE:  .BYTE   1
D:000115    PS2K_SKIP:      .BYTE   1
D:000116    PS2K_FLAGS:     .BYTE   1
D:000117    PS2K_KEY_FLAGS: .BYTE   1
D:000118    PS2K_KEY_CODE:  .BYTE   1
D:000119    PS2K_TIMEOUT:   .BYTE   2
          .CSEG
         ;
         ;--------------------------------------
         ;
          PS2K_INIT:
         
C:000f2c b71a              IN      TEMP,EICRB
C:000f2d 6012              ORI     TEMP,(1<<ISC41)|(0<<ISC40)
C:000f2e bf1a              OUT     EICRB,TEMP
C:000f2f b719              IN      TEMP,EIMSK
C:000f30 6110              ORI     TEMP,(1<<INT4)
C:000f31 bf19              OUT     EIMSK,TEMP
         
C:000f32 e012              LDI     TEMP,(0<<CS02)|(1<<CS01)|(0<<CS00) ; clk/8
C:000f33 bf13              OUT     TCCR0,TEMP
         
C:000f34 92f0 0116         STS     PS2K_FLAGS,NULL
C:000f36 92f0 0111         STS     PS2K_BIT_COUNT,NULL
C:000f38 92f0 0115         STS     PS2K_SKIP,NULL
C:000f3a 92f0 0117         STS     PS2K_KEY_FLAGS,NULL
         
C:000f3c 9508              RET
         ;
         ;--------------------------------------
         ;
          TIM0_OVF:
C:000f3d   +          PS2K_DATALINE_UP
C:000f3d 988e      CBI     DDRD,6
C:000f3e 9a96      SBI     PORTD,6
C:000f3f 931f              PUSH    TEMP
C:000f40 b71f              IN      TEMP,SREG
C:000f41 931f              PUSH    TEMP
C:000f42 b717              IN      TEMP,TIMSK
C:000f43 7f1e              CBR     TEMP,(1<<TOIE0)
C:000f44 bf17              OUT     TIMSK,TEMP
C:000f45 911f              POP     TEMP
C:000f46 bf1f              OUT     SREG,TEMP
C:000f47 911f              POP     TEMP
C:000f48   +          PS2K_CLOCKLINE_UP
C:000f48 9814      CBI     DDRE,4
C:000f49 9a1c      SBI     PORTE,4
C:000f4a 9518              RETI
         ;
         ;--------------------------------------
         ;
          EXT_INT4:
C:000f4b 931f              PUSH    TEMP
C:000f4c b71f              IN      TEMP,SREG
C:000f4d 931f              PUSH    TEMP
C:000f4e 932f              PUSH    COUNT
C:000f4f 930f              PUSH    DATA
C:000f50 9100 0112         LDS     DATA,PS2K_DATA
C:000f52 9120 0111         LDS     COUNT,PS2K_BIT_COUNT
C:000f54 9110 0116         LDS     TEMP,PS2K_FLAGS
C:000f56 fd17              SBRC    TEMP,PS2K_BIT_TX
C:000f57 c064              RJMP    INT4TX_0
         
C:000f58 3029              CPI     COUNT,9
C:000f59 f081              BREQ    INT4RX9
C:000f5a 302a              CPI     COUNT,10
C:000f5b f4a0              BRCC    INT4RXS
C:000f5c 2322              TST     COUNT
C:000f5d f429              BRNE    INT4RX1
         ;start bit
C:000f5e 9986              SBIC    PIND,6   ; data line
C:000f5f c059              RJMP    INT4RX_CLR_D
C:000f60 7f1e              CBR     TEMP,(1<<PS2K_BIT_PARITY)
C:000f61 9523              INC     COUNT
C:000f62 c080              RJMP    INT4_EXIT
         ;data bits
C:000f63 9506      INT4RX1:LSR     DATA
C:000f64 9b86              SBIS    PIND,6   ; data line
C:000f65 c002              RJMP    INT4RX2
C:000f66 6800              ORI     DATA,0B10000000
C:000f67 251e              EOR     TEMP,ONE
C:000f68 9523      INT4RX2:INC     COUNT
C:000f69 c079              RJMP    INT4_EXIT
         ;parity bit
C:000f6a 9986      INT4RX9:SBIC    PIND,6   ; data line
C:000f6b 251e              EOR     TEMP,ONE
C:000f6c ff10              SBRS    TEMP,PS2K_BIT_PARITY
C:000f6d c04b              RJMP    INT4RX_CLR_D
C:000f6e 9523              INC     COUNT
C:000f6f c073              RJMP    INT4_EXIT
         ;stop bit
C:000f70 9b86      INT4RXS:SBIS    PIND,6   ; data line
C:000f71 c047              RJMP    INT4RX_CLR_D
         
C:000f72 9320 0113         STS     PS2K_RAW_READY,COUNT
C:000f74 9300 0114         STS     PS2K_RAW_CODE,DATA
C:000f76   +          PS2K_CLOCKLINE_DOWN
C:000f76 981c      CBI     PORTE,4
C:000f77 9a14      SBI     DDRE,4
C:000f78 e820              LDI     COUNT,$80
C:000f79 bf22              OUT     TCNT0,COUNT     ;Tclk*8*128=~92us
C:000f7a e021              LDI     COUNT,(1<<TOV0)
C:000f7b bf26              OUT     TIFR,COUNT
C:000f7c b727              IN      COUNT,TIMSK
C:000f7d 6021              ORI     COUNT,(1<<TOIE0)
C:000f7e bf27              OUT     TIMSK,COUNT
         
C:000f7f 9120 0115         LDS     COUNT,PS2K_SKIP
C:000f81 2322              TST     COUNT
C:000f82 f4d1              BRNE    INT4RX_SKIP
         
C:000f83 3e01              CPI     DATA,$E1
C:000f84 f151              BREQ    INT4RX_E1
C:000f85 3a0a              CPI     DATA,$AA
C:000f86 f189              BREQ    INT4RX_CLR_F
C:000f87 3a0b              CPI     DATA,$AB
C:000f88 f101              BREQ    INT4RX_AB
C:000f89 3e0e              CPI     DATA,$EE
C:000f8a f169              BREQ    INT4RX_CLR_F
C:000f8b 3f0a              CPI     DATA,$FA
C:000f8c f159              BREQ    INT4RX_CLR_F
C:000f8d 3f0e              CPI     DATA,$FE
C:000f8e f149              BREQ    INT4RX_CLR_F
C:000f8f 3e00              CPI     DATA,$E0
C:000f90 f041              BREQ    INT4RX_E0
C:000f91 3f00              CPI     DATA,$F0
C:000f92 f041              BREQ    INT4RX_F0
         
C:000f93 6810              SBR     TEMP,(1<<PS2K_BIT_READY)
C:000f94 9310 0117         STS     PS2K_KEY_FLAGS,TEMP
C:000f96 9300 0118         STS     PS2K_KEY_CODE,DATA
C:000f98 c01f              RJMP    INT4RX_CLR_F
         
          INT4RX_E0:
C:000f99 6012              SBR     TEMP,(1<<PS2K_BIT_EXTKEY)
C:000f9a c01e              RJMP    INT4RX_CLR_D
         
          INT4RX_F0:
C:000f9b 6014              SBR     TEMP,(1<<PS2K_BIT_RELEASE)
C:000f9c c01c              RJMP    INT4RX_CLR_D
         
          INT4RX_SKIP:
C:000f9d 952a              DEC     COUNT
C:000f9e 9320 0115         STS     PS2K_SKIP,COUNT
C:000fa0 f4c1              BRNE    INT4RX_CLR_D
C:000fa1 9100 0118         LDS     DATA,PS2K_KEY_CODE
C:000fa3 370e              CPI     DATA,$7E
C:000fa4 f4a1              BRNE    INT4RX_CLR_D
C:000fa5 e816              LDI     TEMP,(1<<PS2K_BIT_READY)|(1<<PS2K_BIT_RELEASE)|(1<<PS2K_BIT_EXTKEY)
C:000fa6 9310 0117         STS     PS2K_KEY_FLAGS,TEMP
C:000fa8 c00f              RJMP    INT4RX_CLR_F
         
          INT4RX_AB:
C:000fa9 92f0 0118         STS     PS2K_KEY_CODE,NULL
C:000fab e021              LDI     COUNT,1
C:000fac 9320 0115         STS     PS2K_SKIP,COUNT
C:000fae c009              RJMP    INT4RX_CLR_F
         
          INT4RX_E1:
C:000faf e812              LDI     TEMP,(1<<PS2K_BIT_READY)|(1<<PS2K_BIT_EXTKEY)
C:000fb0 9310 0117         STS     PS2K_KEY_FLAGS,TEMP
C:000fb2 e70e              LDI     DATA,$7E
C:000fb3 9300 0118         STS     PS2K_KEY_CODE,DATA
C:000fb5 e027              LDI     COUNT,7
C:000fb6 9320 0115         STS     PS2K_SKIP,COUNT
         
          INT4RX_CLR_F:
C:000fb8 2711              CLR     TEMP
          INT4RX_CLR_D:
C:000fb9 2700              CLR     DATA
C:000fba 2722              CLR     COUNT
C:000fbb c027              RJMP    INT4_EXIT
         ;-------
          INT4TX_0:
C:000fbc 3029              CPI     COUNT,9
C:000fbd f0a1              BREQ    INT4TX9
C:000fbe 302a              CPI     COUNT,10
C:000fbf f0e1              BREQ    INT4TXS
C:000fc0 302b              CPI     COUNT,11
C:000fc1 f4f0              BRCC    INT4TXA
C:000fc2 2322              TST     COUNT
C:000fc3 f419              BRNE    INT4TX1
         ;start bit
C:000fc4 6011              SBR     TEMP,(1<<PS2K_BIT_PARITY)
C:000fc5 9523              INC     COUNT
C:000fc6 c01c              RJMP    INT4_EXIT
         ;data bits
C:000fc7 9507      INT4TX1:ROR     DATA
C:000fc8 f428              BRCC    INT4TX2
C:000fc9   +          PS2K_DATALINE_UP
C:000fc9 988e      CBI     DDRD,6
C:000fca 9a96      SBI     PORTD,6
C:000fcb 251e              EOR     TEMP,ONE
C:000fcc 9523              INC     COUNT
C:000fcd c015              RJMP    INT4_EXIT
C:000fce   +  INT4TX2:PS2K_DATALINE_DOWN
C:000fce 9896      CBI     PORTD,6
C:000fcf 9a8e      SBI     DDRD,6
C:000fd0 9523              INC     COUNT
C:000fd1 c011              RJMP    INT4_EXIT
         ;parity bit
C:000fd2 fd10      INT4TX9:SBRC    TEMP,PS2K_BIT_PARITY
C:000fd3 c004              RJMP    INT4TXP
C:000fd4   +          PS2K_DATALINE_DOWN
C:000fd4 9896      CBI     PORTD,6
C:000fd5 9a8e      SBI     DDRD,6
C:000fd6 9523              INC     COUNT
C:000fd7 c00b              RJMP    INT4_EXIT
C:000fd8   +  INT4TXP:PS2K_DATALINE_UP
C:000fd8 988e      CBI     DDRD,6
C:000fd9 9a96      SBI     PORTD,6
C:000fda 9523              INC     COUNT
C:000fdb c007              RJMP    INT4_EXIT
         ;stop bit
C:000fdc   +  INT4TXS:PS2K_DATALINE_UP
C:000fdc 988e      CBI     DDRD,6
C:000fdd 9a96      SBI     PORTD,6
C:000fde 9523              INC     COUNT
C:000fdf c003              RJMP    INT4_EXIT
         ;здесь раньше проверялся ack-bit, но CHRV знает ;)
         ; где есть такие клавиатуры, которые не выдают этот бит.
          INT4TXA:;CLR     TEMP
                 ;SBIS    PIND,6   ; data line
C:000fe0 e018              LDI     TEMP,(1<<PS2K_BIT_ACKBIT)
C:000fe1 2700              CLR     DATA
C:000fe2 2722              CLR     COUNT
         
          INT4_EXIT:
C:000fe3 9320 0111         STS     PS2K_BIT_COUNT,COUNT
C:000fe5 9300 0112         STS     PS2K_DATA,DATA
C:000fe7 9310 0116         STS     PS2K_FLAGS,TEMP
C:000fe9 910f              POP     DATA
C:000fea 912f              POP     COUNT
C:000feb 911f              POP     TEMP
C:000fec bf1f              OUT     SREG,TEMP
C:000fed 911f              POP     TEMP
C:000fee 9518              RETI
         ;
         ;--------------------------------------
         ;out:   DATA == скан-код клавиши
         ;       TEMP.PS2K_BIT_EXTKEY == расш.код
C:000fef 940e 2643 WAITKEY:CALL    RANDOM
C:000ff1 9110 0117         LDS     TEMP,PS2K_KEY_FLAGS
C:000ff3 ff17              SBRS    TEMP,PS2K_BIT_READY
C:000ff4 cffa              RJMP    WAITKEY
C:000ff5 92f0 0117         STS     PS2K_KEY_FLAGS,NULL
C:000ff7 fd12              SBRC    TEMP,PS2K_BIT_RELEASE
C:000ff8 cff6              RJMP    WAITKEY
C:000ff9 9100 0118         LDS     DATA,PS2K_KEY_CODE
C:000ffb 9508              RET
         ;
         ;--------------------------------------
         ;out:   sreg.Z == clr - было нажатие (автоповтор)
         ;       DATA == скан-код клавиши
         ;       TEMP.PS2K_BIT_EXTKEY == расш.код
C:000ffc 940e 2643 INKEY:  CALL    RANDOM
C:000ffe 9110 0117         LDS     TEMP,PS2K_KEY_FLAGS
C:001000 ff17              SBRS    TEMP,PS2K_BIT_READY
C:001001 c008              RJMP    INKEY9
C:001002 92f0 0117         STS     PS2K_KEY_FLAGS,NULL
C:001004 fd12              SBRC    TEMP,PS2K_BIT_RELEASE
C:001005 c004              RJMP    INKEY9
C:001006 9100 0118         LDS     DATA,PS2K_KEY_CODE
C:001008 9498              CLZ
C:001009 9508              RET
         
C:00100a 9418      INKEY9: SEZ
C:00100b 9508              RET
         ;
         ;--------------------------------------
         ;in:    DATA
         ;out:   sreg.Z - CLR == ok; SET == timeout
          PS2K_SEND_BYTE:
C:00100c   +          PS2K_DATALINE_UP
C:00100c 988e      CBI     DDRD,6
C:00100d 9a96      SBI     PORTD,6
C:00100e b717              IN      TEMP,TIMSK
C:00100f 7f1e              CBR     TEMP,(1<<TOIE0)
C:001010 bf17              OUT     TIMSK,TEMP
C:001011   +          PS2K_CLOCKLINE_UP
C:001011 9814      CBI     DDRE,4
C:001012 9a1c      SBI     PORTE,4
C:001013 2711              CLR     TEMP
          PS2K_SEND0:
C:001014 9b0c              SBIS    PINE,4   ; clock line
C:001015 cff6              RJMP    PS2K_SEND_BYTE
C:001016 951a              DEC     TEMP
C:001017 f7e1              BRNE    PS2K_SEND0
         
C:001018 94f8              CLI
C:001019   +          PS2K_CLOCKLINE_DOWN
C:001019 981c      CBI     PORTE,4
C:00101a 9a14      SBI     DDRE,4
C:00101b   +          PS2K_DATALINE_DOWN
C:00101b 9896      CBI     PORTD,6
C:00101c 9a8e      SBI     DDRD,6
C:00101d 9300 0112         STS     PS2K_DATA,DATA
C:00101f e810              LDI     TEMP,(1<<PS2K_BIT_TX)
C:001020 9310 0116         STS     PS2K_FLAGS,TEMP
C:001022 92f0 0111         STS     PS2K_BIT_COUNT,NULL
C:001024 92f0 0115         STS     PS2K_SKIP,NULL
C:001026 92f0 0117         STS     PS2K_KEY_FLAGS,NULL
C:001028 92f0 0113         STS     PS2K_RAW_READY,NULL
C:00102a 9478              SEI
C:00102b   +          DELAY_US 100
          .IF (100<70)
C:00102b e184      LDI     WL,LOW(100*27648/10000)
C:00102c e091      LDI     WH,HIGH(100*27648/10000)
C:00102d 9701      DLY_US2:SBIW    WL,1    

C:00102e f7f1      BRNE    DLY_US2 

          .ENDIF
C:00102f   +          PS2K_DATALINE_DOWN
C:00102f 9896      CBI     PORTD,6
C:001030 9a8e      SBI     DDRD,6
C:001031   +          DELAY_US 500
          .IF (500<70)
C:001031 e686      LDI     WL,LOW(500*27648/10000)
C:001032 e095      LDI     WH,HIGH(500*27648/10000)
C:001033 9701      DLY_US2:SBIW    WL,1    

C:001034 f7f1      BRNE    DLY_US2 

          .ENDIF
C:001035   +          LDIZ    PS2K_TIMEOUT
C:001035 e1e9      LDI     ZL,LOW(PS2K_TIMEOUT)
C:001036 e0f1      LDI     ZH,HIGH(PS2K_TIMEOUT)
C:001037   +          LDIW    15
C:001037 e08f      LDI     WL,LOW(15)
C:001038 e090      LDI     WH,HIGH(15)
C:001039 940e 0e19         CALL    SET_TIMEOUT_MS
C:00103b   +          PS2K_CLOCKLINE_UP
C:00103b 9814      CBI     DDRE,4
C:00103c 9a1c      SBI     PORTE,4
          PS2K_SEND1:
C:00103d 9110 0116         LDS     TEMP,PS2K_FLAGS
C:00103f 7018              ANDI    TEMP,(1<<PS2K_BIT_ACKBIT)
C:001040 f441              BRNE    PS2K_SEND2
C:001041   +          LDIZ    PS2K_TIMEOUT
C:001041 e1e9      LDI     ZL,LOW(PS2K_TIMEOUT)
C:001042 e0f1      LDI     ZH,HIGH(PS2K_TIMEOUT)
C:001043 940e 0e29         CALL    CHECK_TIMEOUT_MS
C:001045 f7b8              BRCC    PS2K_SEND1
C:001046   +          PS2K_DATALINE_UP
C:001046 988e      CBI     DDRD,6
C:001047 9a96      SBI     PORTD,6
C:001048 9418              SEZ
          PS2K_SEND2:
C:001049 9508              RET
         ;
         ;--------------------------------------
         ;out:   sreg.Z - CLR == ok; SET == timeout
         ;       DATA == byte
          PS2K_RECEIVE_BYTE:
C:00104a 92f0 0113         STS     PS2K_RAW_READY,NULL
C:00104c   +          LDIZ    PS2K_TIMEOUT
C:00104c e1e9      LDI     ZL,LOW(PS2K_TIMEOUT)
C:00104d e0f1      LDI     ZH,HIGH(PS2K_TIMEOUT)
C:00104e   +          LDIW    20
C:00104e e184      LDI     WL,LOW(20)
C:00104f e090      LDI     WH,HIGH(20)
C:001050 940e 0e19         CALL    SET_TIMEOUT_MS
         
          PS2K_RXBYTE1:
C:001052 9110 0113         LDS     TEMP,PS2K_RAW_READY
C:001054 2311              TST     TEMP
C:001055 f441              BRNE    PS2K_RXBYTE2
C:001056   +          LDIZ    PS2K_TIMEOUT
C:001056 e1e9      LDI     ZL,LOW(PS2K_TIMEOUT)
C:001057 e0f1      LDI     ZH,HIGH(PS2K_TIMEOUT)
C:001058 940e 0e29         CALL    CHECK_TIMEOUT_MS
C:00105a f7b8              BRCC    PS2K_RXBYTE1
C:00105b 2700              CLR     DATA
C:00105c 9418              SEZ
C:00105d 9508              RET
         
          PS2K_RXBYTE2:
C:00105e 9100 0114         LDS     DATA,PS2K_RAW_CODE
C:001060 9508              RET
         ;
         ;--------------------------------------
         ;
          .EQU    PS2K_DETECT_TEMP=0
         ;
          PS2K_DETECT_KBD:
C:001061   +          GETMEM  1
C:001061 9721      SBIW    YL,1
C:001062   +          PS2K_CLOCKLINE_UP
C:001062 9814      CBI     DDRE,4
C:001063 9a1c      SBI     PORTE,4
C:001064   +          LDIZ    MLMSG_KBD_DETECT*2
C:001064 e9e2      LDI     ZL,LOW(MLMSG_KBD_DETECT*2)
C:001065 e0f3      LDI     ZH,HIGH(MLMSG_KBD_DETECT*2)
C:001066 d491              RCALL   PRINTMLSTR
         
C:001067 92f0 0113         STS     PS2K_RAW_READY,NULL
C:001069   +          LDIZ    PS2K_TIMEOUT
C:001069 e1e9      LDI     ZL,LOW(PS2K_TIMEOUT)
C:00106a e0f1      LDI     ZH,HIGH(PS2K_TIMEOUT)
C:00106b   +          LDIW    500
C:00106b ef84      LDI     WL,LOW(500)
C:00106c e091      LDI     WH,HIGH(500)
C:00106d 940e 0e19         CALL    SET_TIMEOUT_MS
          PS2K_DETECT_K1:
C:00106f 9110 0113         LDS     TEMP,PS2K_RAW_READY
C:001071 2311              TST     TEMP
C:001072 f431              BRNE    PS2K_DETECT_K2
C:001073   +          LDIZ    PS2K_TIMEOUT
C:001073 e1e9      LDI     ZL,LOW(PS2K_TIMEOUT)
C:001074 e0f1      LDI     ZH,HIGH(PS2K_TIMEOUT)
C:001075 940e 0e29         CALL    CHECK_TIMEOUT_MS
C:001077 f7b8              BRCC    PS2K_DETECT_K1
C:001078 c003              RJMP    PS2K_DETECT_K3
          PS2K_DETECT_K2:
C:001079 9100 0114         LDS     DATA,PS2K_RAW_CODE
C:00107b d4d1              RCALL   HEXBYTE_FOR_DUMP
          PS2K_DETECT_K3:
         
C:00107c ef0f              LDI     DATA,$FF
C:00107d d031              RCALL   PS2K_DETECT_SEND
         ;        BRNE    PS2K_DETECT_K6
C:00107e 92f0 0113         STS     PS2K_RAW_READY,NULL
C:001080   +          LDIZ    PS2K_TIMEOUT
C:001080 e1e9      LDI     ZL,LOW(PS2K_TIMEOUT)
C:001081 e0f1      LDI     ZH,HIGH(PS2K_TIMEOUT)
C:001082   +          LDIW    1000
C:001082 ee88      LDI     WL,LOW(1000)
C:001083 e093      LDI     WH,HIGH(1000)
C:001084 940e 0e19         CALL    SET_TIMEOUT_MS
          PS2K_DETECT_K4:
C:001086 9110 0113         LDS     TEMP,PS2K_RAW_READY
C:001088 2311              TST     TEMP
C:001089 f439              BRNE    PS2K_DETECT_K5
C:00108a   +          LDIZ    PS2K_TIMEOUT
C:00108a e1e9      LDI     ZL,LOW(PS2K_TIMEOUT)
C:00108b e0f1      LDI     ZH,HIGH(PS2K_TIMEOUT)
C:00108c 940e 0e29         CALL    CHECK_TIMEOUT_MS
C:00108e f7b8              BRCC    PS2K_DETECT_K4
C:00108f d036              RCALL   PS2K_DETECT_NORESPONSE
C:001090 c006              RJMP    PS2K_DETECT_K6
          PS2K_DETECT_K5:
C:001091 9100 0114         LDS     DATA,PS2K_RAW_CODE
C:001093 d4b9              RCALL   HEXBYTE_FOR_DUMP
C:001094 3a0a              CPI     DATA,$AA
C:001095 f009              BREQ    PS2K_DETECT_K6
C:001096 d02c              RCALL   PS2K_DETECT_UNWANTED
         
          PS2K_DETECT_K6:
C:001097 ef02              LDI     DATA,$F2
C:001098 d016              RCALL   PS2K_DETECT_SEND
C:001099 f429              BRNE    PS2K_DETECT_K7
C:00109a ea0b              LDI     DATA,$AB
C:00109b d01c              RCALL   PS2K_DETECT_RECEIVE
C:00109c f411              BRNE    PS2K_DETECT_K7
C:00109d e803              LDI     DATA,$83
C:00109e d019              RCALL   PS2K_DETECT_RECEIVE
          PS2K_DETECT_K7:
C:00109f ef00              LDI     DATA,$F0
C:0010a0 d00e              RCALL   PS2K_DETECT_SEND
C:0010a1 f411              BRNE    PS2K_DETECT_K8
C:0010a2 e002              LDI     DATA,$02
C:0010a3 d00b              RCALL   PS2K_DETECT_SEND
          PS2K_DETECT_K8:
C:0010a4 ef03              LDI     DATA,$F3
C:0010a5 d009              RCALL   PS2K_DETECT_SEND
C:0010a6 f431              BRNE    PS2K_DETECT_K9
C:0010a7 e000              LDI     DATA,$00
C:0010a8 d006              RCALL   PS2K_DETECT_SEND
C:0010a9   +          LDIZ    MSG_READY*2+3
C:0010a9 ece1      LDI     ZL,LOW(MSG_READY*2+3)
C:0010aa e5f5      LDI     ZH,HIGH(MSG_READY*2+3)
C:0010ab 940e 14fd         CALL    PRINTSTRZ
          PS2K_DETECT_K9:
C:0010ad   +          FREEMEM 1
C:0010ad 9621      ADIW    YL,1
C:0010ae 9508              RET
         ;
          PS2K_DETECT_SEND:
C:0010af d49d              RCALL   HEXBYTE_FOR_DUMP
C:0010b0 df5b              RCALL   PS2K_SEND_BYTE
C:0010b1 f071              BREQ    PS2K_DETECT_TXFAIL
C:0010b2 df97              RCALL   PS2K_RECEIVE_BYTE
C:0010b3 f091              BREQ    PS2K_DETECT_NORESPONSE
C:0010b4 d498              RCALL   HEXBYTE_FOR_DUMP
C:0010b5 3f0a              CPI     DATA,$FA
C:0010b6 f461              BRNE    PS2K_DETECT_UNWANTED
C:0010b7 9508              RET
         ;
          PS2K_DETECT_RECEIVE:
C:0010b8   +          STH     PS2K_DETECT_TEMP,DATA
C:0010b8 8308      STD     Y+PS2K_DETECT_TEMP,DATA
C:0010b9 df90              RCALL   PS2K_RECEIVE_BYTE
C:0010ba f059              BREQ    PS2K_DETECT_NORESPONSE
C:0010bb d491              RCALL   HEXBYTE_FOR_DUMP
C:0010bc   +          LDH     TEMP,PS2K_DETECT_TEMP
C:0010bc 8118      LDD     TEMP,Y+PS2K_DETECT_TEMP
C:0010bd 1701              CP      DATA,TEMP
C:0010be f421              BRNE    PS2K_DETECT_UNWANTED
C:0010bf 9508              RET
         ;
          PS2K_DETECT_TXFAIL:
C:0010c0   +          LDIZ    MLMSG_TXFAIL*2
C:0010c0 e2ee      LDI     ZL,LOW(MLMSG_TXFAIL*2)
C:0010c1 e0f4      LDI     ZH,HIGH(MLMSG_TXFAIL*2)
C:0010c2 c005              RJMP    PS2K_DETECT_XXFAIL
          PS2K_DETECT_UNWANTED:
C:0010c3   +          LDIZ    MLMSG_UNWANTED*2
C:0010c3 efea      LDI     ZL,LOW(MLMSG_UNWANTED*2)
C:0010c4 e0f3      LDI     ZH,HIGH(MLMSG_UNWANTED*2)
C:0010c5 c002              RJMP    PS2K_DETECT_XXFAIL
          PS2K_DETECT_NORESPONSE:
C:0010c6   +          LDIZ    MLMSG_NORESPONSE*2
C:0010c6 ede2      LDI     ZL,LOW(MLMSG_NORESPONSE*2)
C:0010c7 e0f3      LDI     ZH,HIGH(MLMSG_NORESPONSE*2)
          PS2K_DETECT_XXFAIL:
C:0010c8 940e 14f8         CALL    PRINTMLSTR
C:0010ca 9498              CLZ
C:0010cb 9508              RET
         ;
         ;--------------------------------------
         ;
          ;
          .INCLUDE "_t_ps2k.asm"
         ;
         ;
         ;   0                                   4
         ;   5                                   1
         ; ┌─────────────────────────────────────────────┐
         ; │                                             │
         ; │ e   1 2 3 4 5 6 7 8 9 0 1 2  p s p  . . .   │07
         ; │                                             │
         ; │ ` 1 2 3 4 5 6 7 8 9 0 - = <  i h u  n / * - │
         ; │ t Q W E R T Y U I O P [ ] \  d e d  7 8 9   │
         ; │ c A S D F G H J K L ; '   e         4 5 6 + │
         ; │ s Z X C V B N M , . /     s        1 2 3   │
         ; │ c w a       s       a w m c  <  >  0   . e │
         ; │                                             │
         ; │─────────────────────────────────────────────│
         ; │ Raw data:                                   │16
         ; │  00 00 00 00 00 00 00 00 00 00 00 00 00 00  │17
         ; │                                             │
         ; │ Трёхкратное нажатие <ESC> - выход из теста  │19
         ; └─────────────────────────────────────────────┘
         ;
         ;
         ;--------------------------------------
         ;
          .EQU    TPSK_PTR        =0
          .EQU    TPSK_TEMP       =1
          .EQU    TPSK_COUNT      =2
          .EQU    TPSK_FLAGS      =3
          .EQU    TPSK_LEDS       =4
         ;
         ;--------------------------------------
         ;
         ;TESTPS2KEYB_NOEXIT:
         ;        GETMEM  5
         ;        STH     TPSK_FLAGS,FF
         ;
         ;        LDIZ    WIND_T_PS2K*2
         ;        CALL    WINDOW
         ;        RJMP    T_PSK00
         ;
         ; - - - - - - - - - - - - - - - - - - -
         ;
          TESTPS2KEYB:
C:0010cc   +          GETMEM  5
C:0010cc 9725      SBIW    YL,5
C:0010cd   +          STH     TPSK_FLAGS,NULL
C:0010cd 82fb      STD     Y+TPSK_FLAGS,NULL
         
C:0010ce   +          LDIZ    WIND_T_PS2K*2
C:0010ce e5e6      LDI     ZL,LOW(WIND_T_PS2K*2)
C:0010cf e2f3      LDI     ZH,HIGH(WIND_T_PS2K*2)
C:0010d0 940e 157b         CALL    WINDOW
C:0010d2   +          LDIZ    MLMSG_TPS2K_0*2
C:0010d2 eee8      LDI     ZL,LOW(MLMSG_TPS2K_0*2)
C:0010d3 e0f9      LDI     ZH,HIGH(MLMSG_TPS2K_0*2)
C:0010d4 d640              RCALL   SCR_PRINTMLSTR
C:0010d5 e810      T_PSK00:LDI     TEMP,$80
C:0010d6   +          STH     TPSK_LEDS,TEMP
C:0010d6 831c      STD     Y+TPSK_LEDS,TEMP
         
C:0010d7   +          LDIZ    MSG_TPS2K_1*2
C:0010d7 ecea      LDI     ZL,LOW(MSG_TPS2K_1*2)
C:0010d8 e0f8      LDI     ZH,HIGH(MSG_TPS2K_1*2)
C:0010d9 d640              RCALL   SCR_PRINTSTRZ
C:0010da ec04              LDI     DATA,$C4        ;"─"
C:0010db e22d              LDI     COUNT,45
C:0010dc d66f              RCALL   SCR_FILL_CHAR
         
C:0010dd   +          LDIZ    MEGABUFFER+16
C:0010dd e1e0      LDI     ZL,LOW(MEGABUFFER+16)
C:0010de e0f8      LDI     ZH,HIGH(MEGABUFFER+16)
C:0010df 92f2      T_PSK01:ST      -Z,NULL
C:0010e0 23ee              TST     ZL
C:0010e1 f7e9              BRNE    T_PSK01
C:0010e2 92f0 0113         STS     PS2K_RAW_READY,NULL
C:0010e4   +          STH     TPSK_PTR,NULL
C:0010e4 82f8      STD     Y+TPSK_PTR,NULL
         
          T_PSK10:
C:0010e5 9100 0113         LDS     DATA,PS2K_RAW_READY
C:0010e7 2300              TST     DATA
C:0010e8 f019              BREQ    T_PSK11
C:0010e9 9100 0114         LDS     DATA,PS2K_RAW_CODE
C:0010eb d071              RCALL   T_PSK80
          T_PSK11:
C:0010ec   +          LDH     DATA,TPSK_LEDS
C:0010ec 810c      LDD     DATA,Y+TPSK_LEDS
C:0010ed ff07              SBRS    DATA,7
C:0010ee c015              RJMP    T_PSK1L
C:0010ef 7007              ANDI    DATA,$07
C:0010f0   +          STH     TPSK_LEDS,DATA
C:0010f0 830c      STD     Y+TPSK_LEDS,DATA
C:0010f1 ee0d              LDI     DATA,$ED
C:0010f2 d06a              RCALL   T_PSK80
C:0010f3 df18              RCALL   PS2K_SEND_BYTE
C:0010f4 f079              BREQ    T_PSK1_SETLED_FAIL
C:0010f5 df54              RCALL   PS2K_RECEIVE_BYTE
C:0010f6 f069              BREQ    T_PSK1_SETLED_FAIL
C:0010f7 d065              RCALL   T_PSK80
C:0010f8 3f0a              CPI     DATA,$FA
C:0010f9 f451              BRNE    T_PSK1_SETLED_FAIL
C:0010fa   +          LDH     DATA,TPSK_LEDS
C:0010fa 810c      LDD     DATA,Y+TPSK_LEDS
C:0010fb d061              RCALL   T_PSK80
C:0010fc df0f              RCALL   PS2K_SEND_BYTE
C:0010fd f031              BREQ    T_PSK1_SETLED_FAIL
C:0010fe df4b              RCALL   PS2K_RECEIVE_BYTE
C:0010ff f021              BREQ    T_PSK1_SETLED_FAIL
C:001100 d05c              RCALL   T_PSK80
C:001101 3f0a              CPI     DATA,$FA
C:001102 f409              BRNE    T_PSK1_SETLED_FAIL
C:001103 d092              RCALL   T_PSK7_SHOW_LEDS
          T_PSK1_SETLED_FAIL:
         
          T_PSK1L:
C:001104 9110 0117         LDS     TEMP,PS2K_KEY_FLAGS
C:001106 ff17              SBRS    TEMP,PS2K_BIT_READY
C:001107 cfdd              RJMP    T_PSK10
         ;
C:001108 92f0 0117         STS     PS2K_KEY_FLAGS,NULL
C:00110a 9100 0118         LDS     DATA,PS2K_KEY_CODE
C:00110c   +          STH     TPSK_TEMP,TEMP
C:00110c 8319      STD     Y+TPSK_TEMP,TEMP
         
C:00110d   +          LDH     COUNT,TPSK_FLAGS
C:00110d 812b      LDD     COUNT,Y+TPSK_FLAGS
         ;        TST     COUNT
         ;        BRMI    T_PSK21
C:00110e ff12              SBRS    TEMP,PS2K_BIT_RELEASE
C:00110f c00c              RJMP    T_PSK21
C:001110 fd11              SBRC    TEMP,PS2K_BIT_EXTKEY
C:001111 c009              RJMP    T_PSK22
C:001112 3706              CPI     DATA,KEY_ESC
C:001113 f439              BRNE    T_PSK22
C:001114 9523              INC     COUNT
C:001115   +          STH     TPSK_FLAGS,COUNT
C:001115 832b      STD     Y+TPSK_FLAGS,COUNT
C:001116 3023              CPI     COUNT,3
C:001117 f020              BRCS    T_PSK21
         
C:001118 d5e0              RCALL   SCR_KBDSETLED
C:001119   +          FREEMEM 5
C:001119 9625      ADIW    YL,5
C:00111a 9508              RET
         ;
C:00111b   +  T_PSK22:STH     TPSK_FLAGS,NULL
C:00111b 82fb      STD     Y+TPSK_FLAGS,NULL
C:00111c fd11      T_PSK21:SBRC    TEMP,PS2K_BIT_EXTKEY
C:00111d c017              RJMP    T_PSK12
C:00111e fd12              SBRC    TEMP,PS2K_BIT_RELEASE
C:00111f c011              RJMP    T_PSK26
         
C:001120   +          LDH     XL,TPSK_LEDS
C:001120 81ac      LDD     XL,Y+TPSK_LEDS
C:001121 e0b1              LDI     XH,$01
C:001122 370e              CPI     DATA,KEY_SCROLLLOCK
C:001123 f411              BRNE    T_PSK23
C:001124 27ab              EOR     XL,XH
C:001125 68a0              ORI     XL,$80
C:001126 0fbb      T_PSK23:LSL     XH
C:001127 3707              CPI     DATA,KEY_NUMLOCK
C:001128 f411              BRNE    T_PSK24
C:001129 27ab              EOR     XL,XH
C:00112a 68a0              ORI     XL,$80
C:00112b 0fbb      T_PSK24:LSL     XH
C:00112c 3508              CPI     DATA,KEY_CAPSLOCK
C:00112d f411              BRNE    T_PSK25
C:00112e 27ab              EOR     XL,XH
C:00112f 68a0              ORI     XL,$80
C:001130   +  T_PSK25:STH     TPSK_LEDS,XL
C:001130 83ac      STD     Y+TPSK_LEDS,XL
          T_PSK26:
         
C:001131 3803              CPI     DATA,$83        ;F7
C:001132 f411              BRNE    T_PSK12
C:001133 e4a8              LDI     XL,(9<<3)|0
C:001134 c010              RJMP    T_PSK14
C:001135 3804      T_PSK12:CPI     DATA,$84        ;SysReg
C:001136 f411              BRNE    T_PSK13
C:001137 e7a8              LDI     XL,(15<<3)|0
C:001138 c00c              RJMP    T_PSK14
          T_PSK13:
C:001139 3800              CPI     DATA,$80
C:00113a f508              BRCC    T_PSK10_A
C:00113b 0f00              LSL     DATA
C:00113c fd11              SBRC    TEMP,PS2K_BIT_EXTKEY
C:00113d 6001              ORI     DATA,$01
C:00113e   +          LDIZ    TPSK_TAB*2
C:00113e e5ec      LDI     ZL,LOW(TPSK_TAB*2)
C:00113f e2f3      LDI     ZH,HIGH(TPSK_TAB*2)
C:001140 0fe0              ADD     ZL,DATA
C:001141 1dff              ADC     ZH,NULL
C:001142 91a4              LPM     XL,Z
C:001143 23aa              TST     XL
C:001144 f0b9              BREQ    T_PSK10_A
C:001145 2fba      T_PSK14:MOV     XH,XL
C:001146 70b7              ANDI    XH,0B00000111
C:001147 23bb              TST     XH
C:001148 f009              BREQ    T_PSK15
C:001149 95b3              INC     XH
C:00114a 95a6      T_PSK15:LSR     XL
C:00114b 95a6              LSR     XL
C:00114c 73ae              ANDI    XL,0B00111110
C:00114d 32a4              CPI     XL,36
C:00114e f008              BRCS    T_PSK16
C:00114f 95a3              INC     XL
C:001150 31ae      T_PSK16:CPI     XL,30
C:001151 f008              BRCS    T_PSK17
C:001152 95a3              INC     XL
C:001153   +  T_PSK17:ADDI    XL,3
C:001153 5fad      SUBI    XL,(-(3)&$FF)
C:001154   +          ADDI    XH,7
C:001154 5fb9      SUBI    XH,(-(7)&$FF)
C:001155 d5b2              RCALL   SCR_SET_CURSOR
C:001156   +          LDH     DATA,TPSK_TEMP
C:001156 8109      LDD     DATA,Y+TPSK_TEMP
C:001157 ea1e              LDI     TEMP,$AE
C:001158 fd02              SBRC    DATA,PS2K_BIT_RELEASE
C:001159 ed11              LDI     TEMP,$D1
C:00115a e021              LDI     COUNT,1
C:00115b d5f5              RCALL   SCR_FILL_ATTR
          T_PSK10_A:
C:00115c cf88              RJMP    T_PSK10
         ;
         ;
C:00115d 930f      T_PSK80:PUSH    DATA
C:00115e 92f0 0113         STS     PS2K_RAW_READY,NULL
         
C:001160   +          LDH     ZL,TPSK_PTR
C:001160 81e8      LDD     ZL,Y+TPSK_PTR
C:001161 e0f8              LDI     ZH,HIGH(MEGABUFFER)
C:001162 9301              ST      Z+,DATA
C:001163 70ef              ANDI    ZL,$0F
C:001164   +          STH     TPSK_PTR,ZL
C:001164 83e8      STD     Y+TPSK_PTR,ZL
         
C:001165 7f4c              ANDI    FLAGS1,0B11111100       ;!!!
C:001166 e0a5              LDI     XL,5
C:001167 e1b1              LDI     XH,17
C:001168 d59f              RCALL   SCR_SET_CURSOR
C:001169   +          LDH     ZL,TPSK_PTR
C:001169 81e8      LDD     ZL,Y+TPSK_PTR
C:00116a 95e3              INC     ZL
C:00116b e02d              LDI     COUNT,13
         
C:00116c   +  T_PSK81:STH     TPSK_COUNT,COUNT
C:00116c 832a      STD     Y+TPSK_COUNT,COUNT
C:00116d e0f8              LDI     ZH,HIGH(MEGABUFFER)
C:00116e 95e3              INC     ZL
C:00116f 70ef              ANDI    ZL,$0F
C:001170   +          STH     TPSK_TEMP,ZL
C:001170 83e9      STD     Y+TPSK_TEMP,ZL
C:001171 8100              LD      DATA,Z
C:001172 930f              PUSH    DATA
C:001173 e01e              LDI     TEMP,$0E
C:001174 3e00              CPI     DATA,$E0
C:001175 f061              BREQ    T_PSK82
C:001176 3e01              CPI     DATA,$E1
C:001177 f051              BREQ    T_PSK82
C:001178 e01d              LDI     TEMP,$0D
C:001179 3f00              CPI     DATA,$F0
C:00117a f039              BREQ    T_PSK82
C:00117b e01b              LDI     TEMP,$0B
C:00117c 3e0d              CPI     DATA,$ED
C:00117d f021              BREQ    T_PSK82
C:00117e e01a              LDI     TEMP,$0A
C:00117f 3805              CPI     DATA,$85
C:001180 f408              BRCC    T_PSK82
C:001181 e01f              LDI     TEMP,$0F
C:001182 d582      T_PSK82:RCALL   SCR_SET_ATTR
C:001183 e200              LDI     DATA,$20
C:001184 d5bd              RCALL   SCR_PUTCHAR
C:001185 910f              POP     DATA
C:001186   +          LDH     COUNT,TPSK_COUNT
C:001186 812a      LDD     COUNT,Y+TPSK_COUNT
C:001187 2322              TST     COUNT
C:001188 f029              BREQ    T_PSK83
C:001189 d385              RCALL   HEXBYTE
C:00118a   +          LDH     ZL,TPSK_TEMP
C:00118a 81e9      LDD     ZL,Y+TPSK_TEMP
C:00118b   +          LDH     COUNT,TPSK_COUNT
C:00118b 812a      LDD     COUNT,Y+TPSK_COUNT
C:00118c 952a              DEC     COUNT
C:00118d cfde              RJMP    T_PSK81
          T_PSK83:
C:00118e 6042              ORI     FLAGS1,0B00000010       ;!!!
C:00118f 940e 150f         CALL    HEXBYTE
C:001191 e200              LDI     DATA,$20
C:001192 940e 1518         CALL    PUTCHAR
         
C:001194 910f              POP     DATA
C:001195 9508              RET
         ;
         ;
          T_PSK7_SHOW_LEDS:
C:001196 e2a9              LDI     XL,41
C:001197 e0b7              LDI     XH,7
C:001198 d56f              RCALL   SCR_SET_CURSOR
C:001199   +          LDH     DATA,TPSK_LEDS
C:001199 810c      LDD     DATA,Y+TPSK_LEDS
C:00119a ed1c              LDI     TEMP,$DC
C:00119b ff01              SBRS    DATA,1
C:00119c ed10              LDI     TEMP,$D0
C:00119d e022              LDI     COUNT,2
C:00119e d5b2              RCALL   SCR_FILL_ATTR
C:00119f   +          LDH     DATA,TPSK_LEDS
C:00119f 810c      LDD     DATA,Y+TPSK_LEDS
C:0011a0 ed1c              LDI     TEMP,$DC
C:0011a1 ff02              SBRS    DATA,2
C:0011a2 ed10              LDI     TEMP,$D0
C:0011a3 e022              LDI     COUNT,2
C:0011a4 d5ac              RCALL   SCR_FILL_ATTR
C:0011a5   +          LDH     DATA,TPSK_LEDS
C:0011a5 810c      LDD     DATA,Y+TPSK_LEDS
C:0011a6 ed1c              LDI     TEMP,$DC
C:0011a7 ff00              SBRS    DATA,0
C:0011a8 ed10              LDI     TEMP,$D0
C:0011a9 e022              LDI     COUNT,2
C:0011aa c5a6              RJMP    SCR_FILL_ATTR
         ;
         ;--------------------------------------
         ;
          WIND_T_PS2K:
                  .DB     3,5,47,16,$DF,$01
C:0011AB 03052F10DF01
         ;
         ;--------------------------------------
         ;
          TPSK_TAB:
                  .DB     0        , 0            ;00
C:0011AE 0000
                  .DB     (11<<3)|0, 0            ;01
C:0011AF 5800
                  .DB     0        , 0            ;02
C:0011B0 0000
                  .DB     ( 7<<3)|0, 0            ;03
C:0011B1 3800
                  .DB     ( 5<<3)|0, 0            ;04
C:0011B2 2800
                  .DB     ( 3<<3)|0, 0            ;05
C:0011B3 1800
                  .DB     ( 4<<3)|0, 0            ;06
C:0011B4 2000
                  .DB     (14<<3)|0, 0            ;07
C:0011B5 7000
                  .DB     0        , 0            ;08
C:0011B6 0000
                  .DB     (12<<3)|0, 0            ;09
C:0011B7 6000
                  .DB     (10<<3)|0, 0            ;0A
C:0011B8 5000
                  .DB     ( 8<<3)|0, 0            ;0B
C:0011B9 4000
                  .DB     ( 6<<3)|0, 0            ;0C
C:0011BA 3000
                  .DB     ( 1<<3)|2, 0            ;0D
C:0011BB 0A00
                  .DB     ( 1<<3)|1, 0            ;0E
C:0011BC 0900
                  .DB     0        , 0            ;0F
C:0011BD 0000
                  .DB     0        , 0            ;10
C:0011BE 0000
                  .DB     ( 3<<3)|5, (11<<3)|5    ;11
C:0011BF 1D5D
                  .DB     ( 1<<3)|4, 0            ;12
C:0011C0 0C00
                  .DB     0        , 0            ;13
C:0011C1 0000
                  .DB     ( 1<<3)|5, (14<<3)|5    ;14
C:0011C2 0D75
                  .DB     ( 2<<3)|2, 0            ;15
C:0011C3 1200
                  .DB     ( 2<<3)|1, 0            ;16
C:0011C4 1100
                  .DB     0        , 0            ;17
C:0011C5 0000
                  .DB     0        , 0            ;18
C:0011C6 0000
                  .DB     0        , 0            ;19
C:0011C7 0000
                  .DB     ( 2<<3)|4, 0            ;1A
C:0011C8 1400
                  .DB     ( 3<<3)|3, 0            ;1B
C:0011C9 1B00
                  .DB     ( 2<<3)|3, 0            ;1C
C:0011CA 1300
                  .DB     ( 3<<3)|2, 0            ;1D
C:0011CB 1A00
                  .DB     ( 3<<3)|1, 0            ;1E
C:0011CC 1900
                  .DB     0        , ( 2<<3)|5    ;1F
C:0011CD 0015
                  .DB     0        , 0            ;20
C:0011CE 0000
                  .DB     ( 4<<3)|4, 0            ;21
C:0011CF 2400
                  .DB     ( 3<<3)|4, 0            ;22
C:0011D0 1C00
                  .DB     ( 4<<3)|3, 0            ;23
C:0011D1 2300
                  .DB     ( 4<<3)|2, 0            ;24
C:0011D2 2200
                  .DB     ( 5<<3)|1, 0            ;25
C:0011D3 2900
                  .DB     ( 4<<3)|1, 0            ;26
C:0011D4 2100
                  .DB     0        , (12<<3)|5    ;27
C:0011D5 0065
                  .DB     0        , 0            ;28
C:0011D6 0000
                  .DB     ( 7<<3)|5, 0            ;29
C:0011D7 3D00
                  .DB     ( 5<<3)|4, 0            ;2A
C:0011D8 2C00
                  .DB     ( 5<<3)|3, 0            ;2B
C:0011D9 2B00
                  .DB     ( 6<<3)|2, 0            ;2C
C:0011DA 3200
                  .DB     ( 5<<3)|2, 0            ;2D
C:0011DB 2A00
                  .DB     ( 6<<3)|1, 0            ;2E
C:0011DC 3100
                  .DB     0        , (13<<3)|5    ;2F
C:0011DD 006D
                  .DB     0        , 0            ;30
C:0011DE 0000
                  .DB     ( 7<<3)|4, 0            ;31
C:0011DF 3C00
                  .DB     ( 6<<3)|4, 0            ;32
C:0011E0 3400
                  .DB     ( 7<<3)|3, 0            ;33
C:0011E1 3B00
                  .DB     ( 6<<3)|3, 0            ;34
C:0011E2 3300
                  .DB     ( 7<<3)|2, 0            ;35
C:0011E3 3A00
                  .DB     ( 7<<3)|1, 0            ;36
C:0011E4 3900
                  .DB     0        , 0            ;37
C:0011E5 0000
                  .DB     0        , 0            ;38
C:0011E6 0000
                  .DB     0        , 0            ;39
C:0011E7 0000
                  .DB     ( 8<<3)|4, 0            ;3A
C:0011E8 4400
                  .DB     ( 8<<3)|3, 0            ;3B
C:0011E9 4300
                  .DB     ( 8<<3)|2, 0            ;3C
C:0011EA 4200
                  .DB     ( 8<<3)|1, 0            ;3D
C:0011EB 4100
                  .DB     ( 9<<3)|1, 0            ;3E
C:0011EC 4900
                  .DB     0        , 0            ;3F
C:0011ED 0000
                  .DB     0        , 0            ;40
C:0011EE 0000
                  .DB     ( 9<<3)|4, 0            ;41
C:0011EF 4C00
                  .DB     ( 9<<3)|3, 0            ;42
C:0011F0 4B00
                  .DB     ( 9<<3)|2, 0            ;43
C:0011F1 4A00
                  .DB     (10<<3)|2, 0            ;44
C:0011F2 5200
                  .DB     (11<<3)|1, 0            ;45
C:0011F3 5900
                  .DB     (10<<3)|1, 0            ;46
C:0011F4 5100
                  .DB     0        , 0            ;47
C:0011F5 0000
                  .DB     0        , 0            ;48
C:0011F6 0000
                  .DB     (10<<3)|4, 0            ;49
C:0011F7 5400
                  .DB     (11<<3)|4, (19<<3)|1    ;4A
C:0011F8 5C99
                  .DB     (10<<3)|3, 0            ;4B
C:0011F9 5300
                  .DB     (11<<3)|3, 0            ;4C
C:0011FA 5B00
                  .DB     (11<<3)|2, 0            ;4D
C:0011FB 5A00
                  .DB     (12<<3)|1, 0            ;4E
C:0011FC 6100
                  .DB     0        , 0            ;4F
C:0011FD 0000
                  .DB     0        , 0            ;50
C:0011FE 0000
                  .DB     0        , 0            ;51
C:0011FF 0000
                  .DB     (12<<3)|3, 0            ;52
C:001200 6300
                  .DB     0        , 0            ;53
C:001201 0000
                  .DB     (12<<3)|2, 0            ;54
C:001202 6200
                  .DB     (13<<3)|1, 0            ;55
C:001203 6900
                  .DB     0        , 0            ;56
C:001204 0000
                  .DB     0        , 0            ;57
C:001205 0000
                  .DB     ( 1<<3)|3, 0            ;58
C:001206 0B00
                  .DB     (14<<3)|4, 0            ;59
C:001207 7400
                  .DB     (14<<3)|3, (21<<3)|5    ;5A
C:001208 73AD
                  .DB     (13<<3)|2, 0            ;5B
C:001209 6A00
                  .DB     0        , 0            ;5C
C:00120A 0000
                  .DB     (14<<3)|2, 0            ;5D
C:00120B 7200
                  .DB     0        , 0            ;5E
C:00120C 0000
                  .DB     0        , 0            ;5F
C:00120D 0000
                  .DB     0        , 0            ;60
C:00120E 0000
                  .DB     0        , 0            ;61
C:00120F 0000
                  .DB     0        , 0            ;62
C:001210 0000
                  .DB     0        , 0            ;63
C:001211 0000
                  .DB     0        , 0            ;64
C:001212 0000
                  .DB     0        , 0            ;65
C:001213 0000
                  .DB     (14<<3)|1, 0            ;66
C:001214 7100
                  .DB     0        , 0            ;67
C:001215 0000
                  .DB     0        , 0            ;68
C:001216 0000
                  .DB     (18<<3)|4, (16<<3)|2    ;69
C:001217 9482
                  .DB     0        , 0            ;6A
C:001218 0000
                  .DB     (18<<3)|3, (15<<3)|5    ;6B
C:001219 937D
                  .DB     (18<<3)|2, (16<<3)|1    ;6C
C:00121A 9281
                  .DB     0        , 0            ;6D
C:00121B 0000
                  .DB     0        , 0            ;6E
C:00121C 0000
                  .DB     0        , 0            ;6F
C:00121D 0000
                  .DB     (18<<3)|5, (15<<3)|1    ;70
C:00121E 9579
                  .DB     (20<<3)|5, (15<<3)|2    ;71
C:00121F A57A
                  .DB     (19<<3)|4, (16<<3)|5    ;72
C:001220 9C85
                  .DB     (19<<3)|3, 0            ;73
C:001221 9B00
                  .DB     (20<<3)|3, (17<<3)|5    ;74
C:001222 A38D
                  .DB     (19<<3)|2, (16<<3)|4    ;75
C:001223 9A84
                  .DB     ( 1<<3)|0, 0            ;76
C:001224 0800
                  .DB     (18<<3)|1, 0            ;77
C:001225 9100
                  .DB     (13<<3)|0, 0            ;78
C:001226 6800
                  .DB     (21<<3)|3, 0            ;79
C:001227 AB00
                  .DB     (20<<3)|4, (17<<3)|2    ;7A
C:001228 A48A
                  .DB     (21<<3)|1, 0            ;7B
C:001229 A900
                  .DB     (20<<3)|1, (15<<3)|0    ;7C
C:00122A A178
                  .DB     (20<<3)|2, (17<<3)|1    ;7D
C:00122B A289
                  .DB     (16<<3)|0, (17<<3)|0    ;7E
C:00122C 8088
                  .DB     0        , 0            ;7F
C:00122D 0000
         ;
         ;--------------------------------------
         ;
          ;
          .INCLUDE "_t_ps2m.asm"
         ;  4                              5678901234567
         ; ┌─────────────────────────────────────────────┐
         ; │Detecting mouse...                           │03
         ; │FF FA AA 00                                  │
         ; │Customization...                             │
         ; │F3 FA C8 FA F3 FA 64 FA F3 FA 50 FA          │
         ; │F2 FA 03                                     │
         ; │E8 FA 02 FA E6 FA F3 FA 64 FA F4 FA          │
         ; │Let's go!                                    │
         ; │08 00 00 00                    ┌───────────┐ │10
         ; │                               │███        │ │11
         ; │                               │█L█  M   R │ │12
         ; │                               │███        │ │13
         ; │                               │           │ │14
         ; │                               │ Wheel = 1 │ │15
         ; │                               │           │ │16
         ; │                               │ X  =  123 │ │17
         ; │                               │ Y  =   58 │ │18
         ; │                               └───────────┘ │
         ; └─────────────────────────────────────────────┘
         ;  4                              5678901234567
         ;
         ;--------------------------------------
         ;
          .EQU    TPSM_BYTE1      =0
          .EQU    TPSM_BYTE2      =1
          .EQU    TPSM_BYTE3      =2
          .EQU    TPSM_BYTE4      =3
          .EQU    TPSM_X0         =4
          .EQU    TPSM_X1         =5
          .EQU    TPSM_Y          =6
          .EQU    TPSM_Z          =7
          .EQU    TPSM_BTN        =8
          .EQU    TPSM_ID         =9
         ;
         ;--------------------------------------
         ;
          .EQU    PS2M_BIT_PARITY =0
          .EQU    PS2M_BIT_ACKBIT =1      ; принят ACK-бит
          .EQU    PS2M_BIT_TX     =7      ; передача
          .EQU    PS2M_BIT_READY  =7
         
          .MACRO  PS2M_DATALINE_UP
                  CBI     DDRD,7
                  SBI     PORTD,7
          .ENDMACRO
         
          .MACRO  PS2M_DATALINE_DOWN
                  CBI     PORTD,7
                  SBI     DDRD,7
          .ENDMACRO
         
          .MACRO  PS2M_CLOCKLINE_UP
                  CBI     DDRE,5
                  SBI     PORTE,5
          .ENDMACRO
         
          .MACRO  PS2M_CLOCKLINE_DOWN
                  CBI     PORTE,5
                  SBI     DDRE,5
          .ENDMACRO
         ;
         ;--------------------------------------
         ;
          .DSEG
D:00011b    PS2M_BIT_COUNT: .BYTE   1
D:00011c    PS2M_DATA:      .BYTE   1
D:00011d    PS2M_RAW_READY: .BYTE   1
D:00011e    PS2M_RAW_CODE:  .BYTE   1
D:00011f    PS2M_FLAGS:     .BYTE   1
D:000120    PS2M_TIMEOUT:   .BYTE   2
          .CSEG
         ;
         ;--------------------------------------
         ;
          MSG_TPSM_1:
                  .DB     $16,37,15,"Wheel ="
C:00122E 16250F576865656C203D
          MSG_TPSM_2:
                  .DB     $16,37,12,"L   M   R"
C:001233 16250C4C2020204D20202052
                  .DB     $16,37,17,"X  =",$16,37,18,"Y  =",0,0
C:001239 1625115820203D1625125920203D0000
          MSG_TPSM_3:
                  .DB     $16, 4,10,$15,$DF,0
C:001241 16040A15DF00
         ;
         ;--------------------------------------
         ;
          WIND_T_PS2M_1:
                  .DB     3,2,47,19,$DF,$01
C:001244 03022F13DF01
          WIND_T_PS2M_2:
                  .DB     9,10,34,4,$AF,$01
C:001247 090A2204AF01
          WIND_T_PS2M_3:
                  .DB     35,10,13,10,$DF,$00
C:00124A 230A0D0ADF00
         ;
         ;--------------------------------------
         ;
          EXT_INT5:
C:00124d 931f              PUSH    TEMP
C:00124e b71f              IN      TEMP,SREG
C:00124f 931f              PUSH    TEMP
C:001250 932f              PUSH    COUNT
C:001251 930f              PUSH    DATA
C:001252 9100 011c         LDS     DATA,PS2M_DATA
C:001254 9120 011b         LDS     COUNT,PS2M_BIT_COUNT
C:001256 9110 011f         LDS     TEMP,PS2M_FLAGS
C:001258 fd17              SBRC    TEMP,PS2M_BIT_TX
C:001259 c022              RJMP    INT5TX_0
         
C:00125a 3029              CPI     COUNT,9
C:00125b f081              BREQ    INT5RX9
C:00125c 302a              CPI     COUNT,10
C:00125d f4a0              BRCC    INT5RXS
C:00125e 2322              TST     COUNT
C:00125f f429              BRNE    INT5RX1
         ;start bit
C:001260 9987              SBIC    PIND,7   ; data line
C:001261 c017              RJMP    INT5RX_CLR_D
C:001262 7f1e              CBR     TEMP,(1<<PS2M_BIT_PARITY)
C:001263 9523              INC     COUNT
C:001264 c040              RJMP    INT5_EXIT
         ;data bits
C:001265 9506      INT5RX1:LSR     DATA
C:001266 9b87              SBIS    PIND,7   ; data line
C:001267 c002              RJMP    INT5RX2
C:001268 6800              ORI     DATA,0B10000000
C:001269 251e              EOR     TEMP,ONE
C:00126a 9523      INT5RX2:INC     COUNT
C:00126b c039              RJMP    INT5_EXIT
         ;parity bit
C:00126c 9987      INT5RX9:SBIC    PIND,7   ; data line
C:00126d 251e              EOR     TEMP,ONE
C:00126e ff10              SBRS    TEMP,PS2M_BIT_PARITY
C:00126f c009              RJMP    INT5RX_CLR_D
C:001270 9523              INC     COUNT
C:001271 c033              RJMP    INT5_EXIT
         ;stop bit
C:001272 9b87      INT5RXS:SBIS    PIND,7   ; data line
C:001273 c005              RJMP    INT5RX_CLR_D
         
C:001274 9320 011d         STS     PS2M_RAW_READY,COUNT
C:001276 9300 011e         STS     PS2M_RAW_CODE,DATA
         
          INT5RX_CLR_F:
C:001278 2711              CLR     TEMP
          INT5RX_CLR_D:
C:001279 2700              CLR     DATA
C:00127a 2722              CLR     COUNT
C:00127b c029              RJMP    INT5_EXIT
         ;-------
          INT5TX_0:
C:00127c 3029              CPI     COUNT,9
C:00127d f0a1              BREQ    INT5TX9
C:00127e 302a              CPI     COUNT,10
C:00127f f0e1              BREQ    INT5TXS
C:001280 302b              CPI     COUNT,11
C:001281 f4f0              BRCC    INT5TXA
C:001282 2322              TST     COUNT
C:001283 f419              BRNE    INT5TX1
         ;start bit
C:001284 6011              SBR     TEMP,(1<<PS2M_BIT_PARITY)
C:001285 9523              INC     COUNT
C:001286 c01e              RJMP    INT5_EXIT
         ;data bits
C:001287 9507      INT5TX1:ROR     DATA
C:001288 f428              BRCC    INT5TX2
C:001289   +          PS2M_DATALINE_UP
C:001289 988f      CBI     DDRD,7
C:00128a 9a97      SBI     PORTD,7
C:00128b 251e              EOR     TEMP,ONE
C:00128c 9523              INC     COUNT
C:00128d c017              RJMP    INT5_EXIT
C:00128e   +  INT5TX2:PS2M_DATALINE_DOWN
C:00128e 9897      CBI     PORTD,7
C:00128f 9a8f      SBI     DDRD,7
C:001290 9523              INC     COUNT
C:001291 c013              RJMP    INT5_EXIT
         ;parity bit
C:001292 fd10      INT5TX9:SBRC    TEMP,PS2M_BIT_PARITY
C:001293 c004              RJMP    INT5TXP
C:001294   +          PS2M_DATALINE_DOWN
C:001294 9897      CBI     PORTD,7
C:001295 9a8f      SBI     DDRD,7
C:001296 9523              INC     COUNT
C:001297 c00d              RJMP    INT5_EXIT
C:001298   +  INT5TXP:PS2M_DATALINE_UP
C:001298 988f      CBI     DDRD,7
C:001299 9a97      SBI     PORTD,7
C:00129a 9523              INC     COUNT
C:00129b c009              RJMP    INT5_EXIT
         ;stop bit
C:00129c   +  INT5TXS:PS2M_DATALINE_UP
C:00129c 988f      CBI     DDRD,7
C:00129d 9a97      SBI     PORTD,7
C:00129e 9523              INC     COUNT
C:00129f c005              RJMP    INT5_EXIT
         ;ack-bit
C:0012a0 2711      INT5TXA:CLR     TEMP
C:0012a1 9b87              SBIS    PIND,7   ; data line
C:0012a2 e012              LDI     TEMP,(1<<PS2M_BIT_ACKBIT)
C:0012a3 2700              CLR     DATA
C:0012a4 2722              CLR     COUNT
         
          INT5_EXIT:
C:0012a5 9320 011b         STS     PS2M_BIT_COUNT,COUNT
C:0012a7 9300 011c         STS     PS2M_DATA,DATA
C:0012a9 9310 011f         STS     PS2M_FLAGS,TEMP
C:0012ab 910f              POP     DATA
C:0012ac 912f              POP     COUNT
C:0012ad 911f              POP     TEMP
C:0012ae bf1f              OUT     SREG,TEMP
C:0012af 911f              POP     TEMP
C:0012b0 9518              RETI
         ;
         ;--------------------------------------
         ;
          TESTMOUSE:
C:0012b1 7f4b              ANDI    FLAGS1,0B11111011
C:0012b2 6042              ORI     FLAGS1,0B00000010
C:0012b3   +          LDIZ    MLMSG_MOUSE_TEST*2
C:0012b3 e4e0      LDI     ZL,LOW(MLMSG_MOUSE_TEST*2)
C:0012b4 e0fa      LDI     ZH,HIGH(MLMSG_MOUSE_TEST*2)
C:0012b5 940e 14f8         CALL    PRINTMLSTR
C:0012b7 6044              ORI     FLAGS1,0B00000100
         
C:0012b8   +          GETMEM  10
C:0012b8 972a      SBIW    YL,10
         
          T_PSM_RESTART:
C:0012b9 94f8              CLI
C:0012ba   +          PS2M_DATALINE_UP
C:0012ba 988f      CBI     DDRD,7
C:0012bb 9a97      SBI     PORTD,7
C:0012bc   +          PS2M_CLOCKLINE_UP
C:0012bc 9815      CBI     DDRE,5
C:0012bd 9a1d      SBI     PORTE,5
C:0012be b71a              IN      TEMP,EICRB
C:0012bf 6018              ORI     TEMP,(1<<ISC51)|(0<<ISC50)
C:0012c0 bf1a              OUT     EICRB,TEMP
C:0012c1 b719              IN      TEMP,EIMSK
C:0012c2 6210              ORI     TEMP,(1<<INT5)
C:0012c3 bf19              OUT     EIMSK,TEMP
C:0012c4 92f0 011f         STS     PS2M_FLAGS,NULL
C:0012c6 92f0 011b         STS     PS2M_BIT_COUNT,NULL
C:0012c8 92f0 011d         STS     PS2M_RAW_READY,NULL
C:0012ca 9478              SEI
         
C:0012cb   +          LDIZ    WIND_T_PS2M_1*2
C:0012cb e8e8      LDI     ZL,LOW(WIND_T_PS2M_1*2)
C:0012cc e2f4      LDI     ZH,HIGH(WIND_T_PS2M_1*2)
C:0012cd 940e 157b         CALL    WINDOW
C:0012cf e0a4              LDI     XL,4
C:0012d0 e0b3              LDI     XH,3
C:0012d1 d436              RCALL   SCR_SET_CURSOR
C:0012d2 dac8              RCALL   UART_CRLF
C:0012d3   +          LDIZ    MLMSG_MOUSE_DETECT*2
C:0012d3 e6ee      LDI     ZL,LOW(MLMSG_MOUSE_DETECT*2)
C:0012d4 e0fa      LDI     ZH,HIGH(MLMSG_MOUSE_DETECT*2)
C:0012d5 940e 14f8         CALL    PRINTMLSTR
C:0012d7 e0a4              LDI     XL,4
C:0012d8 e0b4              LDI     XH,4
C:0012d9 d42e              RCALL   SCR_SET_CURSOR
C:0012da dac0              RCALL   UART_CRLF
         ;
         ;
          T_PSM_DETECT_2:
C:0012db 92f0 011d         STS     PS2M_RAW_READY,NULL
C:0012dd   +          LDIZ    PS2M_TIMEOUT
C:0012dd e2e0      LDI     ZL,LOW(PS2M_TIMEOUT)
C:0012de e0f1      LDI     ZH,HIGH(PS2M_TIMEOUT)
C:0012df   +          LDIW    2
C:0012df e082      LDI     WL,LOW(2)
C:0012e0 e090      LDI     WH,HIGH(2)
C:0012e1 940e 0e19         CALL    SET_TIMEOUT_MS
          T_PSM_DETECT_1:
C:0012e3 9110 011d         LDS     TEMP,PS2M_RAW_READY
C:0012e5 2311              TST     TEMP
C:0012e6 f7a1              BRNE    T_PSM_DETECT_2
C:0012e7   +          LDIZ    PS2M_TIMEOUT
C:0012e7 e2e0      LDI     ZL,LOW(PS2M_TIMEOUT)
C:0012e8 e0f1      LDI     ZH,HIGH(PS2M_TIMEOUT)
C:0012e9 940e 0e29         CALL    CHECK_TIMEOUT_MS
C:0012eb f7b8              BRCC    T_PSM_DETECT_1
         
C:0012ec ef0f              LDI     DATA,$FF
C:0012ed d25f              RCALL   HEXBYTE_FOR_DUMP
C:0012ee d19f              RCALL   PS2M_SEND_BYTE
C:0012ef f0b9              BREQ    T_PSM_DETECT_FAIL0_A
C:0012f0 d1cb              RCALL   PS2M_RECEIVE_BYTE
C:0012f1 f0a9              BREQ    T_PSM_DETECT_FAIL0_A
C:0012f2 d25a              RCALL   HEXBYTE_FOR_DUMP
C:0012f3 3f0a              CPI     DATA,$FA
C:0012f4 f491              BRNE    T_PSM_DETECT_FAIL0_A
         
C:0012f5 92f0 011d         STS     PS2M_RAW_READY,NULL
C:0012f7   +          LDIZ    PS2M_TIMEOUT
C:0012f7 e2e0      LDI     ZL,LOW(PS2M_TIMEOUT)
C:0012f8 e0f1      LDI     ZH,HIGH(PS2M_TIMEOUT)
C:0012f9   +          LDIW    1000
C:0012f9 ee88      LDI     WL,LOW(1000)
C:0012fa e093      LDI     WH,HIGH(1000)
C:0012fb 940e 0e19         CALL    SET_TIMEOUT_MS
          T_PSM_DETECT_4:
C:0012fd 9110 011d         LDS     TEMP,PS2M_RAW_READY
C:0012ff 2311              TST     TEMP
C:001300 f439              BRNE    T_PSM_DETECT_5
C:001301   +          LDIZ    PS2M_TIMEOUT
C:001301 e2e0      LDI     ZL,LOW(PS2M_TIMEOUT)
C:001302 e0f1      LDI     ZH,HIGH(PS2M_TIMEOUT)
C:001303 940e 0e29         CALL    CHECK_TIMEOUT_MS
C:001305 f7b8              BRCC    T_PSM_DETECT_4
          T_PSM_DETECT_FAIL2_A:
C:001306 c06e              RJMP    T_PSM_DETECT_FAIL2
         ;
          T_PSM_DETECT_FAIL0_A:
C:001307 c070              RJMP    T_PSM_DETECT_FAIL0
         ;
          T_PSM_DETECT_5:
C:001308 9100 011e         LDS     DATA,PS2M_RAW_CODE
C:00130a d242              RCALL   HEXBYTE_FOR_DUMP
C:00130b 3a0a              CPI     DATA,$AA
C:00130c f7c9              BRNE    T_PSM_DETECT_FAIL2_A
C:00130d e000              LDI     DATA,$00
C:00130e d05c              RCALL   T_PSM_DETECT_RECEIVE
         ; - - - - - - - - - - - - - - - - - - -
C:00130f e0a4              LDI     XL,4
C:001310 e0b5              LDI     XH,5
C:001311 d3f6              RCALL   SCR_SET_CURSOR
C:001312 da88              RCALL   UART_CRLF
C:001313   +          LDIZ    MLMSG_MOUSE_SETUP*2
C:001313 e9ee      LDI     ZL,LOW(MLMSG_MOUSE_SETUP*2)
C:001314 e0fa      LDI     ZH,HIGH(MLMSG_MOUSE_SETUP*2)
C:001315 940e 14f8         CALL    PRINTMLSTR
C:001317 e0a4              LDI     XL,4
C:001318 e0b6              LDI     XH,6
C:001319 d3ee              RCALL   SCR_SET_CURSOR
C:00131a da80              RCALL   UART_CRLF
         
C:00131b ef03              LDI     DATA,$F3
C:00131c d045              RCALL   T_PSM_DETECT_SEND
C:00131d ec08              LDI     DATA,200
C:00131e d043              RCALL   T_PSM_DETECT_SEND
         
C:00131f ef03              LDI     DATA,$F3
C:001320 d041              RCALL   T_PSM_DETECT_SEND
C:001321 e604              LDI     DATA,100
C:001322 d03f              RCALL   T_PSM_DETECT_SEND
         
C:001323 ef03              LDI     DATA,$F3
C:001324 d03d              RCALL   T_PSM_DETECT_SEND
C:001325 e500              LDI     DATA,80
C:001326 d03b              RCALL   T_PSM_DETECT_SEND
         
C:001327 e0a4              LDI     XL,4
C:001328 e0b7              LDI     XH,7
C:001329 d3de              RCALL   SCR_SET_CURSOR
C:00132a da70              RCALL   UART_CRLF
         
C:00132b ef02              LDI     DATA,$F2
C:00132c d035              RCALL   T_PSM_DETECT_SEND
         
C:00132d 92f0 011d         STS     PS2M_RAW_READY,NULL
C:00132f   +          LDIZ    PS2M_TIMEOUT
C:00132f e2e0      LDI     ZL,LOW(PS2M_TIMEOUT)
C:001330 e0f1      LDI     ZH,HIGH(PS2M_TIMEOUT)
C:001331   +          LDIW    20
C:001331 e184      LDI     WL,LOW(20)
C:001332 e090      LDI     WH,HIGH(20)
C:001333 940e 0e19         CALL    SET_TIMEOUT_MS
          T_PSM_DETECT_6:
C:001335 9110 011d         LDS     TEMP,PS2M_RAW_READY
C:001337 2311              TST     TEMP
C:001338 f431              BRNE    T_PSM_DETECT_7
C:001339   +          LDIZ    PS2M_TIMEOUT
C:001339 e2e0      LDI     ZL,LOW(PS2M_TIMEOUT)
C:00133a e0f1      LDI     ZH,HIGH(PS2M_TIMEOUT)
C:00133b 940e 0e29         CALL    CHECK_TIMEOUT_MS
C:00133d f7b8              BRCC    T_PSM_DETECT_6
C:00133e c036              RJMP    T_PSM_DETECT_FAIL2
          T_PSM_DETECT_7:
C:00133f 9100 011e         LDS     DATA,PS2M_RAW_CODE
C:001341   +          STH     TPSM_ID,DATA
C:001341 8709      STD     Y+TPSM_ID,DATA
C:001342 d20a              RCALL   HEXBYTE_FOR_DUMP
C:001343 2300              TST     DATA
C:001344 f019              BREQ    T_PSM_DETECT_8
C:001345 3003              CPI     DATA,3
C:001346 f009              BREQ    T_PSM_DETECT_8
C:001347 c02d              RJMP    T_PSM_DETECT_FAIL2
         
          T_PSM_DETECT_8:
C:001348 e0a4              LDI     XL,4
C:001349 e0b8              LDI     XH,8
C:00134a d3bd              RCALL   SCR_SET_CURSOR
C:00134b da4f              RCALL   UART_CRLF
         
C:00134c ee08              LDI     DATA,$E8
C:00134d d014              RCALL   T_PSM_DETECT_SEND
C:00134e e002              LDI     DATA,$02
C:00134f d012              RCALL   T_PSM_DETECT_SEND
         
C:001350 ee06              LDI     DATA,$E6
C:001351 d010              RCALL   T_PSM_DETECT_SEND
         
C:001352 ef03              LDI     DATA,$F3
C:001353 d00e              RCALL   T_PSM_DETECT_SEND
C:001354 e604              LDI     DATA,100
C:001355 d00c              RCALL   T_PSM_DETECT_SEND
         
C:001356 ef04              LDI     DATA,$F4
C:001357 d00a              RCALL   T_PSM_DETECT_SEND
         
C:001358 e0a4              LDI     XL,4
C:001359 e0b9              LDI     XH,9
C:00135a d3ad              RCALL   SCR_SET_CURSOR
C:00135b da3f              RCALL   UART_CRLF
C:00135c   +          LDIZ    MLMSG_MOUSE_LETSGO*2
C:00135c ece2      LDI     ZL,LOW(MLMSG_MOUSE_LETSGO*2)
C:00135d e0fa      LDI     ZH,HIGH(MLMSG_MOUSE_LETSGO*2)
C:00135e 940e 14f8         CALL    PRINTMLSTR
C:001360 da3a              RCALL   UART_CRLF
         
C:001361 c04e              RJMP    T_PSM_MAIN
         ;
         ;--------------------------------------
         ;
          T_PSM_DETECT_SEND:
C:001362 d1ea              RCALL   HEXBYTE_FOR_DUMP
C:001363 d12a              RCALL   PS2M_SEND_BYTE
C:001364 f071              BREQ    T_PSM_DETECT_FAIL1
C:001365 d156              RCALL   PS2M_RECEIVE_BYTE
C:001366 f061              BREQ    T_PSM_DETECT_FAIL1
C:001367 d1e5              RCALL   HEXBYTE_FOR_DUMP
C:001368 3f0a              CPI     DATA,$FA
C:001369 f449              BRNE    T_PSM_DETECT_FAIL1
C:00136a 9508              RET
         ;
         ;--------------------------------------
         ;
          T_PSM_DETECT_RECEIVE:
C:00136b   +          STH     TPSM_BYTE4,DATA         ; temporally
C:00136b 830b      STD     Y+TPSM_BYTE4,DATA
C:00136c d14f              RCALL   PS2M_RECEIVE_BYTE
C:00136d f029              BREQ    T_PSM_DETECT_FAIL1
C:00136e d1de              RCALL   HEXBYTE_FOR_DUMP
C:00136f   +          LDH     TEMP,TPSM_BYTE4         ; temporally
C:00136f 811b      LDD     TEMP,Y+TPSM_BYTE4
C:001370 1701              CP      DATA,TEMP
C:001371 f409              BRNE    T_PSM_DETECT_FAIL1
C:001372 9508              RET
         ;
         ;--------------------------------------
         ;
          T_PSM_DETECT_FAIL1:
C:001373   +          POPZ
C:001373 91ff      POP     ZH
C:001374 91ef      POP     ZL
          T_PSM_DETECT_FAIL2:
C:001375   +          LDIZ    MLMSG_MOUSE_FAIL1*2
C:001375 e1e2      LDI     ZL,LOW(MLMSG_MOUSE_FAIL1*2)
C:001376 e0fb      LDI     ZH,HIGH(MLMSG_MOUSE_FAIL1*2)
C:001377 c002              RJMP    T_PSM_DETECT_FAILZ
         
          T_PSM_DETECT_FAIL0:
C:001378   +          LDIZ    MLMSG_MOUSE_FAIL0*2
C:001378 edea      LDI     ZL,LOW(MLMSG_MOUSE_FAIL0*2)
C:001379 e0fa      LDI     ZH,HIGH(MLMSG_MOUSE_FAIL0*2)
          T_PSM_DETECT_FAILZ:
C:00137a   +          PUSHZ
C:00137a 93ef      PUSH    ZL
C:00137b 93ff      PUSH    ZH
C:00137c da1e              RCALL   UART_CRLF
C:00137d   +          LDIZ    WIND_T_PS2M_2*2
C:00137d e8ee      LDI     ZL,LOW(WIND_T_PS2M_2*2)
C:00137e e2f4      LDI     ZH,HIGH(WIND_T_PS2M_2*2)
C:00137f 940e 157b         CALL    WINDOW
C:001381 e0aa              LDI     XL,10
C:001382 e0bb              LDI     XH,11
C:001383 d384              RCALL   SCR_SET_CURSOR
C:001384   +          POPZ
C:001384 91ff      POP     ZH
C:001385 91ef      POP     ZL
C:001386 940e 14f8         CALL    PRINTMLSTR
C:001388 e0aa              LDI     XL,10
C:001389 e0bc              LDI     XH,12
C:00138a d37d              RCALL   SCR_SET_CURSOR
C:00138b   +          LDIZ    MLMSG_MOUSE_RESTART*2
C:00138b e5e4      LDI     ZL,LOW(MLMSG_MOUSE_RESTART*2)
C:00138c e0fb      LDI     ZH,HIGH(MLMSG_MOUSE_RESTART*2)
C:00138d 940e 14f8         CALL    PRINTMLSTR
         
          T_PSM_WAITKEY:
C:00138f 940e 0fef         CALL    WAITKEY
C:001391 3706              CPI     DATA,KEY_ESC
C:001392 f019              BREQ    T_PSM_ESCAPE
C:001393 350a              CPI     DATA,KEY_ENTER
C:001394 f7d1              BRNE    T_PSM_WAITKEY
C:001395 cf23              RJMP    T_PSM_RESTART
         
          T_PSM_ESCAPE:
C:001396 e000              LDI     DATA,0B00000000
C:001397 2ec0              MOV     INT6VECT,DATA
C:001398 e514              LDI     TEMP,INT_CONTROL
C:001399 940e 176f         CALL    FPGA_REG
C:00139b 2700              CLR     DATA
C:00139c ea10              LDI     TEMP,SCR_MOUSE_TEMP
C:00139d d3d1              RCALL   FPGA_REG
C:00139e 2700              CLR     DATA
C:00139f ea1d              LDI     TEMP,SCR_MOUSE_X
C:0013a0 d3ce              RCALL   FPGA_REG
C:0013a1 2700              CLR     DATA
C:0013a2 ea1e              LDI     TEMP,SCR_MOUSE_Y
C:0013a3 d3cb              RCALL   FPGA_REG
C:0013a4 94f8              CLI
C:0013a5   +          PS2M_DATALINE_UP
C:0013a5 988f      CBI     DDRD,7
C:0013a6 9a97      SBI     PORTD,7
C:0013a7   +          PS2M_CLOCKLINE_UP
C:0013a7 9815      CBI     DDRE,5
C:0013a8 9a1d      SBI     PORTE,5
C:0013a9 b719              IN      TEMP,EIMSK
C:0013aa 7d1f              CBR     TEMP,(1<<INT5)
C:0013ab bf19              OUT     EIMSK,TEMP
C:0013ac 9478              SEI
C:0013ad 6042              ORI     FLAGS1,0B00000010
C:0013ae   +          FREEMEM 10
C:0013ae 962a      ADIW    YL,10
C:0013af 9508              RET
         ;
         ;--------------------------------------
         ;
          T_PSM_MAIN:
C:0013b0 7f4c              ANDI    FLAGS1,0B11111100
C:0013b1 e002              LDI     DATA,0B00000010
C:0013b2 2ec0              MOV     INT6VECT,DATA
C:0013b3 e514              LDI     TEMP,INT_CONTROL
C:0013b4 940e 176f         CALL    FPGA_REG
         
C:0013b6   +          LDIZ    WIND_T_PS2M_3*2
C:0013b6 e9e4      LDI     ZL,LOW(WIND_T_PS2M_3*2)
C:0013b7 e2f4      LDI     ZH,HIGH(WIND_T_PS2M_3*2)
C:0013b8 940e 157b         CALL    WINDOW
C:0013ba   +          LDIZ    MSG_TPSM_2*2
C:0013ba e6e6      LDI     ZL,LOW(MSG_TPSM_2*2)
C:0013bb e2f4      LDI     ZH,HIGH(MSG_TPSM_2*2)
C:0013bc   +          LDH     TEMP,TPSM_ID
C:0013bc 8519      LDD     TEMP,Y+TPSM_ID
C:0013bd 2311              TST     TEMP
C:0013be f011              BREQ    T_PSM01
C:0013bf   +          LDIZ    MSG_TPSM_1*2
C:0013bf e5ec      LDI     ZL,LOW(MSG_TPSM_1*2)
C:0013c0 e2f4      LDI     ZH,HIGH(MSG_TPSM_1*2)
C:0013c1 d358      T_PSM01:RCALL   SCR_PRINTSTRZ
C:0013c2 e916              LDI     TEMP,150
C:0013c3   +          STH     TPSM_X0,TEMP
C:0013c3 831c      STD     Y+TPSM_X0,TEMP
C:0013c4   +          STH     TPSM_X1,NULL
C:0013c4 82fd      STD     Y+TPSM_X1,NULL
C:0013c5 e718              LDI     TEMP,120
C:0013c6   +          STH     TPSM_Y,TEMP
C:0013c6 831e      STD     Y+TPSM_Y,TEMP
C:0013c7   +          STH     TPSM_Z,NULL
C:0013c7 82ff      STD     Y+TPSM_Z,NULL
C:0013c8   +          STH     TPSM_BTN,NULL
C:0013c8 86f8      STD     Y+TPSM_BTN,NULL
         
C:0013c9 92f0 011d         STS     PS2M_RAW_READY,NULL
         
          T_PSM10:
C:0013cb   +          LDH     TEMP,TPSM_ID
C:0013cb 8519      LDD     TEMP,Y+TPSM_ID
C:0013cc 2311              TST     TEMP
C:0013cd f031              BREQ    T_PSM11
C:0013ce e2ad              LDI     XL,45
C:0013cf e0bf              LDI     XH,15
C:0013d0 d337              RCALL   SCR_SET_CURSOR
C:0013d1   +          LDH     DATA,TPSM_Z
C:0013d1 810f      LDD     DATA,Y+TPSM_Z
C:0013d2 940e 1513         CALL    HEXHALF
          T_PSM11:
C:0013d4 e2a9              LDI     XL,41
C:0013d5 e1b1              LDI     XH,17
C:0013d6 d331              RCALL   SCR_SET_CURSOR
C:0013d7   +          LDH     XL,TPSM_X0
C:0013d7 81ac      LDD     XL,Y+TPSM_X0
C:0013d8   +          LDH     XH,TPSM_X1
C:0013d8 81bd      LDD     XH,Y+TPSM_X1
C:0013d9 940e 1522         CALL    DECWORD
         
C:0013db e2a9              LDI     XL,41
C:0013dc e1b2              LDI     XH,18
C:0013dd d32a              RCALL   SCR_SET_CURSOR
C:0013de   +          LDH     XL,TPSM_Y
C:0013de 81ae      LDD     XL,Y+TPSM_Y
C:0013df 27bb              CLR     XH
C:0013e0 940e 1522         CALL    DECWORD
         
C:0013e2 e0bb              LDI     XH,11
C:0013e3 93bf      T_PSM12:PUSH    XH
C:0013e4 e2a4              LDI     XL,36
C:0013e5 d322              RCALL   SCR_SET_CURSOR
C:0013e6 ed1f              LDI     TEMP,$DF
C:0013e7   +          LDH     DATA,TPSM_BTN
C:0013e7 8508      LDD     DATA,Y+TPSM_BTN
C:0013e8 fd00              SBRC    DATA,0
C:0013e9 ea1e              LDI     TEMP,$AE
C:0013ea e023              LDI     COUNT,3
C:0013eb d365              RCALL   SCR_FILL_ATTR
C:0013ec ed1f              LDI     TEMP,$DF
C:0013ed e021              LDI     COUNT,1
C:0013ee d362              RCALL   SCR_FILL_ATTR
C:0013ef ed1f              LDI     TEMP,$DF
C:0013f0   +          LDH     DATA,TPSM_BTN
C:0013f0 8508      LDD     DATA,Y+TPSM_BTN
C:0013f1 fd02              SBRC    DATA,2
C:0013f2 ea1e              LDI     TEMP,$AE
C:0013f3 e023              LDI     COUNT,3
C:0013f4 d35c              RCALL   SCR_FILL_ATTR
C:0013f5 ed1f              LDI     TEMP,$DF
C:0013f6 e021              LDI     COUNT,1
C:0013f7 d359              RCALL   SCR_FILL_ATTR
C:0013f8 ed1f              LDI     TEMP,$DF
C:0013f9   +          LDH     DATA,TPSM_BTN
C:0013f9 8508      LDD     DATA,Y+TPSM_BTN
C:0013fa fd01              SBRC    DATA,1
C:0013fb ea1e              LDI     TEMP,$AE
C:0013fc e023              LDI     COUNT,3
C:0013fd d353              RCALL   SCR_FILL_ATTR
C:0013fe 91bf              POP     XH
C:0013ff 95b3              INC     XH
C:001400 30be              CPI     XH,14
C:001401 f308              BRCS    T_PSM12
          T_PSM20:
C:001402 9100 0104         LDS     DATA,NEWFRAME
C:001404 2300              TST     DATA
C:001405 f0b9              BREQ    T_PSM21
C:001406 92f0 0104         STS     NEWFRAME,NULL
C:001408   +          LDH     XL,TPSM_X0
C:001408 81ac      LDD     XL,Y+TPSM_X0
C:001409   +          LDH     XH,TPSM_X1
C:001409 81bd      LDD     XH,Y+TPSM_X1
C:00140a 96d1              ADIW    XL,49
C:00140b 96d1              ADIW    XL,49 ; +98
C:00140c 93af              PUSH    XL
C:00140d 2f0b              MOV     DATA,XH
C:00140e ea10              LDI     TEMP,SCR_MOUSE_TEMP
C:00140f d35f              RCALL   FPGA_REG
C:001410 910f              POP     DATA
C:001411 ea1d              LDI     TEMP,SCR_MOUSE_X
C:001412 d35c              RCALL   FPGA_REG
C:001413   +          LDH     XL,TPSM_Y
C:001413 81ae      LDD     XL,Y+TPSM_Y
C:001414 27bb              CLR     XH
C:001415 969b              ADIW    XL,43
C:001416 93af              PUSH    XL
C:001417 2f0b              MOV     DATA,XH
C:001418 ea10              LDI     TEMP,SCR_MOUSE_TEMP
C:001419 d355              RCALL   FPGA_REG
C:00141a 910f              POP     DATA
C:00141b ea1e              LDI     TEMP,SCR_MOUSE_Y
C:00141c d352              RCALL   FPGA_REG
          T_PSM21:
C:00141d 940e 0ffc         CALL    INKEY
C:00141f f019              BREQ    T_PSM22
C:001420 3706              CPI     DATA,KEY_ESC
C:001421 f409              BRNE    T_PSM22
C:001422 cf73              RJMP    T_PSM_ESCAPE
          T_PSM22:
C:001423 9100 011d         LDS     DATA,PS2M_RAW_READY
C:001425 2300              TST     DATA
C:001426 f2d9              BREQ    T_PSM20
C:001427 92f0 011d         STS     PS2M_RAW_READY,NULL
C:001429 9100 011e         LDS     DATA,PS2M_RAW_CODE
C:00142b ff03              SBRS    DATA,3
C:00142c cfd5              RJMP    T_PSM20
C:00142d   +          STH     TPSM_BYTE1,DATA
C:00142d 8308      STD     Y+TPSM_BYTE1,DATA
         
C:00142e d08d              RCALL   PS2M_RECEIVE_BYTE
C:00142f f291              BREQ    T_PSM20
C:001430   +          STH     TPSM_BYTE2,DATA
C:001430 8309      STD     Y+TPSM_BYTE2,DATA
         
C:001431 d08a              RCALL   PS2M_RECEIVE_BYTE
C:001432 f279              BREQ    T_PSM20
C:001433   +          STH     TPSM_BYTE3,DATA
C:001433 830a      STD     Y+TPSM_BYTE3,DATA
         
C:001434   +          LDH     TEMP,TPSM_ID
C:001434 8519      LDD     TEMP,Y+TPSM_ID
C:001435 2311              TST     TEMP
C:001436 f019              BREQ    T_PSM30
         
C:001437 d084              RCALL   PS2M_RECEIVE_BYTE
C:001438 f249              BREQ    T_PSM20
C:001439   +          STH     TPSM_BYTE4,DATA
C:001439 830b      STD     Y+TPSM_BYTE4,DATA
         ;
          T_PSM30:
C:00143a   +          LDH     DATA,TPSM_BYTE1
C:00143a 8108      LDD     DATA,Y+TPSM_BYTE1
C:00143b 7007              ANDI    DATA,$07
C:00143c   +          STH     TPSM_BTN,DATA
C:00143c 8708      STD     Y+TPSM_BTN,DATA
         
C:00143d   +          LDH     XL,TPSM_X0
C:00143d 81ac      LDD     XL,Y+TPSM_X0
C:00143e   +          LDH     XH,TPSM_X1
C:00143e 81bd      LDD     XH,Y+TPSM_X1
C:00143f   +          LDH     WL,TPSM_BYTE2
C:00143f 8189      LDD     WL,Y+TPSM_BYTE2
C:001440 2799              CLR     WH
C:001441   +          LDH     TEMP,TPSM_BYTE1
C:001441 8118      LDD     TEMP,Y+TPSM_BYTE1
C:001442 fd14              SBRC    TEMP,4
C:001443 c008              RJMP    T_PSM31
C:001444 0fa8              ADD     XL,WL
C:001445 1dbf              ADC     XH,NULL
C:001446 33ae              CPI     XL,LOW(318)
C:001447 05be              CPC     XH,ONE ;HIGH(318)
C:001448 f050              BRCS    T_PSM32
C:001449 e3ad              LDI     XL,LOW(317)
C:00144a e0b1              LDI     XH,HIGH(317)
C:00144b c007              RJMP    T_PSM32
C:00144c 9580      T_PSM31:COM     WL
C:00144d 9601              ADIW    WL,1
C:00144e 1ba8              SUB     XL,WL
C:00144f 0bb9              SBC     XH,WH
C:001450 f410              BRCC    T_PSM32
C:001451 27aa              CLR     XL
C:001452 27bb              CLR     XH
C:001453   +  T_PSM32:STH     TPSM_X0,XL
C:001453 83ac      STD     Y+TPSM_X0,XL
C:001454   +          STH     TPSM_X1,XH
C:001454 83bd      STD     Y+TPSM_X1,XH
         
C:001455   +          LDH     XL,TPSM_Y
C:001455 81ae      LDD     XL,Y+TPSM_Y
C:001456 27bb              CLR     XH
C:001457   +          LDH     WL,TPSM_BYTE3
C:001457 818a      LDD     WL,Y+TPSM_BYTE3
C:001458 2799              CLR     WH
C:001459   +          LDH     TEMP,TPSM_BYTE1
C:001459 8118      LDD     TEMP,Y+TPSM_BYTE1
C:00145a ff15              SBRS    TEMP,5
C:00145b c00a              RJMP    T_PSM33
C:00145c 9580              COM     WL
C:00145d 9601              ADIW    WL,1
C:00145e 0fa8              ADD     XL,WL
C:00145f 1fb9              ADC     XH,WH
C:001460 23bb              TST     XH
C:001461 f411              BRNE    T_PSM34
C:001462 3faa              CPI     XL,250
C:001463 f030              BRCS    T_PSM35
C:001464 efa9      T_PSM34:LDI     XL,249
C:001465 c004              RJMP    T_PSM35
C:001466 1ba8      T_PSM33:SUB     XL,WL
C:001467 09bf              SBC     XH,NULL
C:001468 f408              BRCC    T_PSM35
C:001469 27aa              CLR     XL
C:00146a   +  T_PSM35:STH     TPSM_Y,XL
C:00146a 83ae      STD     Y+TPSM_Y,XL
         
C:00146b   +          LDH     TEMP,TPSM_ID
C:00146b 8519      LDD     TEMP,Y+TPSM_ID
C:00146c 2311              TST     TEMP
C:00146d f029              BREQ    T_PSM40
         
C:00146e   +          LDH     DATA,TPSM_BYTE4
C:00146e 810b      LDD     DATA,Y+TPSM_BYTE4
C:00146f   +          LDH     XL,TPSM_Z
C:00146f 81af      LDD     XL,Y+TPSM_Z
C:001470 0fa0              ADD     XL,DATA
C:001471 70af              ANDI    XL,$0F
C:001472   +          STH     TPSM_Z,XL
C:001472 83af      STD     Y+TPSM_Z,XL
         
          T_PSM40:
C:001473   +          LDIZ    MSG_TPSM_3*2
C:001473 e8e2      LDI     ZL,LOW(MSG_TPSM_3*2)
C:001474 e2f4      LDI     ZH,HIGH(MSG_TPSM_3*2)
C:001475 d2a4              RCALL   SCR_PRINTSTRZ
         
C:001476 6042              ORI     FLAGS1,0B00000010
C:001477   +          LDH     DATA,TPSM_BYTE1
C:001477 8108      LDD     DATA,Y+TPSM_BYTE1
C:001478 d096              RCALL   HEXBYTE
C:001479 e200              LDI     DATA,$20
C:00147a d09d              RCALL   PUTCHAR
C:00147b   +          LDH     DATA,TPSM_BYTE2
C:00147b 8109      LDD     DATA,Y+TPSM_BYTE2
C:00147c d092              RCALL   HEXBYTE
C:00147d e200              LDI     DATA,$20
C:00147e d099              RCALL   PUTCHAR
C:00147f   +          LDH     DATA,TPSM_BYTE3
C:00147f 810a      LDD     DATA,Y+TPSM_BYTE3
C:001480 d08e              RCALL   HEXBYTE
C:001481 e200              LDI     DATA,$20
C:001482 d095              RCALL   PUTCHAR
C:001483   +          LDH     TEMP,TPSM_ID
C:001483 8519      LDD     TEMP,Y+TPSM_ID
C:001484 2311              TST     TEMP
C:001485 f021              BREQ    T_PSM41
C:001486   +          LDH     DATA,TPSM_BYTE4
C:001486 810b      LDD     DATA,Y+TPSM_BYTE4
C:001487 d087              RCALL   HEXBYTE
C:001488 e200              LDI     DATA,$20
C:001489 d08e              RCALL   PUTCHAR
C:00148a e200      T_PSM41:LDI     DATA,$20
C:00148b d08c              RCALL   PUTCHAR
C:00148c 7f4c              ANDI    FLAGS1,0B11111100
         
C:00148d cf3d              RJMP    T_PSM10
         ;
         ;--------------------------------------
         ;in:    DATA
         ;out:   sreg.Z - CLR == ok; SET == timeout
          PS2M_SEND_BYTE:
C:00148e 2711              CLR     TEMP
          PS2M_SEND0:
C:00148f 9b0d              SBIS    PINE,5   ; clock line
C:001490 cffd              RJMP    PS2M_SEND_BYTE
C:001491 951a              DEC     TEMP
C:001492 f7e1              BRNE    PS2M_SEND0
         
C:001493 94f8              CLI
C:001494 9300 011c         STS     PS2M_DATA,DATA
C:001496 e810              LDI     TEMP,(1<<PS2M_BIT_TX)
C:001497 9310 011f         STS     PS2M_FLAGS,TEMP
C:001499 92f0 011b         STS     PS2M_BIT_COUNT,NULL
C:00149b 92f0 011d         STS     PS2M_RAW_READY,NULL
C:00149d   +          PS2M_CLOCKLINE_DOWN
C:00149d 981d      CBI     PORTE,5
C:00149e 9a15      SBI     DDRE,5
C:00149f 9478              SEI
C:0014a0   +          DELAY_US 130
          .IF (130<70)
C:0014a0 e687      LDI     WL,LOW(130*27648/10000)
C:0014a1 e091      LDI     WH,HIGH(130*27648/10000)
C:0014a2 9701      DLY_US2:SBIW    WL,1    

C:0014a3 f7f1      BRNE    DLY_US2 

          .ENDIF
C:0014a4   +          PS2M_DATALINE_DOWN
C:0014a4 9897      CBI     PORTD,7
C:0014a5 9a8f      SBI     DDRD,7
C:0014a6   +          DELAY_US 20
          .IF (20<70)
C:0014a6 e489      LDI     WL,LOW(20*36864/10000)
C:0014a7 958a      DLY_US1:DEC     WL      

C:0014a8 f7f1      BRNE    DLY_US1 

          .ELSE
C:0014a9   +          LDIZ    PS2M_TIMEOUT
C:0014a9 e2e0      LDI     ZL,LOW(PS2M_TIMEOUT)
C:0014aa e0f1      LDI     ZH,HIGH(PS2M_TIMEOUT)
C:0014ab   +          LDIW    15
C:0014ab e08f      LDI     WL,LOW(15)
C:0014ac e090      LDI     WH,HIGH(15)
C:0014ad 940e 0e19         CALL    SET_TIMEOUT_MS
C:0014af   +          PS2M_CLOCKLINE_UP
C:0014af 9815      CBI     DDRE,5
C:0014b0 9a1d      SBI     PORTE,5
          PS2M_SEND1:
C:0014b1 9110 011f         LDS     TEMP,PS2M_FLAGS
C:0014b3 7012              ANDI    TEMP,(1<<PS2M_BIT_ACKBIT)
C:0014b4 f431              BRNE    PS2M_SEND2
C:0014b5   +          LDIZ    PS2M_TIMEOUT
C:0014b5 e2e0      LDI     ZL,LOW(PS2M_TIMEOUT)
C:0014b6 e0f1      LDI     ZH,HIGH(PS2M_TIMEOUT)
C:0014b7 940e 0e29         CALL    CHECK_TIMEOUT_MS
C:0014b9 f7b8              BRCC    PS2M_SEND1
C:0014ba 9418              SEZ
          PS2M_SEND2:
C:0014bb 9508              RET
         ;
         ;--------------------------------------
         ;out:   sreg.Z - CLR == ok; SET == timeout
         ;       DATA == byte
          PS2M_RECEIVE_BYTE:
C:0014bc 92f0 011d         STS     PS2M_RAW_READY,NULL
C:0014be   +          LDIZ    PS2M_TIMEOUT
C:0014be e2e0      LDI     ZL,LOW(PS2M_TIMEOUT)
C:0014bf e0f1      LDI     ZH,HIGH(PS2M_TIMEOUT)
C:0014c0   +          LDIW    7
C:0014c0 e087      LDI     WL,LOW(7)
C:0014c1 e090      LDI     WH,HIGH(7)
C:0014c2 940e 0e19         CALL    SET_TIMEOUT_MS
         
          PS2M_RXBYTE1:
C:0014c4 9110 011d         LDS     TEMP,PS2M_RAW_READY
C:0014c6 2311              TST     TEMP
C:0014c7 f439              BRNE    PS2M_RXBYTE2
C:0014c8   +          LDIZ    PS2M_TIMEOUT
C:0014c8 e2e0      LDI     ZL,LOW(PS2M_TIMEOUT)
C:0014c9 e0f1      LDI     ZH,HIGH(PS2M_TIMEOUT)
C:0014ca 940e 0e29         CALL    CHECK_TIMEOUT_MS
C:0014cc f7b8              BRCC    PS2M_RXBYTE1
C:0014cd 9418              SEZ
C:0014ce 9508              RET
         
          PS2M_RXBYTE2:
C:0014cf 9100 011e         LDS     DATA,PS2M_RAW_CODE
C:0014d1 92f0 011d         STS     PS2M_RAW_READY,NULL
C:0014d3 9508              RET
         ;
         ;--------------------------------------
         ;
          ;
          .INCLUDE "_output.asm"
         ;
         ;--------------------------------------
         ;
          PRINT_SHORT_VERS:
C:0014d4   +          LDIZ    $DFFC
C:0014d4 efec      LDI     ZL,LOW($DFFC)
C:0014d5 edff      LDI     ZH,HIGH($DFFC)
C:0014d6 beeb              OUT     RAMPZ,ONE
C:0014d7 91a7              ELPM    XL,Z+
C:0014d8 91b6              ELPM    XH,Z
C:0014d9 2f0a              MOV     DATA,XL
C:0014da 710f              ANDI    DATA,$1F
C:0014db f0d9              BREQ    PRVERS9
C:0014dc 2f1b              MOV     TEMP,XH
C:0014dd 0faa              LSL     XL
C:0014de 1f11              ROL     TEMP
C:0014df 0faa              LSL     XL
C:0014e0 1f11              ROL     TEMP
C:0014e1 0faa              LSL     XL
C:0014e2 1f11              ROL     TEMP
C:0014e3 701f              ANDI    TEMP,$0F
C:0014e4 f091              BREQ    PRVERS9
C:0014e5 301d              CPI     TEMP,13
C:0014e6 f480              BRCC    PRVERS9
C:0014e7 2f2b              MOV     COUNT,XH
C:0014e8 9526              LSR     COUNT
C:0014e9 732f              ANDI    COUNT,$3F
C:0014ea 3029              CPI     COUNT,9
C:0014eb f058              BRCS    PRVERS9
C:0014ec 930f              PUSH    DATA
C:0014ed e208              LDI     DATA,$28 ;"("
C:0014ee d029              RCALL   PUTCHAR
C:0014ef 2f02              MOV     DATA,COUNT
C:0014f0 d012              RCALL   DECBYTE
C:0014f1 2f01              MOV     DATA,TEMP
C:0014f2 d010              RCALL   DECBYTE
C:0014f3 910f              POP     DATA
C:0014f4 d00e              RCALL   DECBYTE
C:0014f5 e209              LDI     DATA,$29 ;")"
C:0014f6 d021              RCALL   PUTCHAR
C:0014f7 9508      PRVERS9:RET
         ;
         ;--------------------------------------
         ;in:    Z == указатель на структуру строк (в младших 64K)
          PRINTMLSTR:
C:0014f8 0deb              ADD     ZL,LANG
C:0014f9 1dff              ADC     ZH,NULL
C:0014fa 9185              LPM     WL,Z+
C:0014fb 9195              LPM     WH,Z+
C:0014fc 01fc              MOVW    ZL,WL
         ;
         ; - - - - - - - - - - - - - - - - - - -
         ;in:    Z == указатель на строку (в младших 64K)
          PRINTSTRZ:
C:0014fd 9105      PRSTRZ1:LPM     DATA,Z+
C:0014fe 2300              TST     DATA
C:0014ff f011              BREQ    PRSTRZ2
C:001500 d017              RCALL   PUTCHAR
C:001501 cffb              RJMP    PRSTRZ1
C:001502 9508      PRSTRZ2:RET
         ;
         ;--------------------------------------
         ;out byte in dec
         ;in:    DATA == byte (00..99)
C:001503 5d00      DECBYTE:SUBI    DATA,208
C:001504 ff07              SBRS    DATA,7
C:001505 5300              SUBI    DATA,48
C:001506 5e08              SUBI    DATA,232
C:001507 ff06              SBRS    DATA,6
C:001508 5108              SUBI    DATA,24
C:001509 5f04              SUBI    DATA,244
C:00150a ff05              SBRS    DATA,5
C:00150b 500c              SUBI    DATA,12
C:00150c 5f0a              SUBI    DATA,250
C:00150d ff04              SBRS    DATA,4
C:00150e 5006              SUBI    DATA,6
         ;
         ; - - - - - - - - - - - - - - - - - - -
         ;out byte in hex
         ;in:    DATA == byte
C:00150f 930f      HEXBYTE:PUSH    DATA
C:001510 9502              SWAP    DATA
C:001511 d001              RCALL   HEXHALF
C:001512 910f              POP     DATA
C:001513 700f      HEXHALF:ANDI    DATA,$0F
C:001514 300a              CPI     DATA,$0A
C:001515 f008              BRCS    HEXBYT1
C:001516   +          ADDI    DATA,$07
C:001516 5f09      SUBI    DATA,(-($07)&$FF)
C:001517   +  HEXBYT1:ADDI    DATA,$30
C:001517 5d00      SUBI    DATA,(-($30)&$FF)
         ;
         ; - - - - - - - - - - - - - - - - - - -
         ;
C:001518 fd40      PUTCHAR:SBRC    FLAGS1,0
C:001519 940e 0ce4         CALL    UARTDIRECT_PUTCHAR
C:00151b fd41              SBRC    FLAGS1,1
C:00151c 940e 0d58         CALL    UART_PUTCHAR
C:00151e fd42              SBRC    FLAGS1,2
C:00151f 940e 1742         CALL    SCR_PUTCHAR
C:001521 9508              RET
         ;
         ;--------------------------------------
         ;out word in dec (right justify)
         ;in:    X == word
C:001522   +  DECWORD:LDIZ    DECWTAB*2
C:001522 e9e2      LDI     ZL,LOW(DECWTAB*2)
C:001523 e2fa      LDI     ZH,HIGH(DECWTAB*2)
C:001524 e024              LDI     COUNT,4
C:001525 2700              CLR     DATA
C:001526 9185      DECW5:  LPM     WL,Z+
C:001527 9195              LPM     WH,Z+
C:001528 1ba8      DECW2:  SUB     XL,WL
C:001529 0bb9              SBC     XH,WH
C:00152a f010              BRCS    DECW1
C:00152b 9503              INC     DATA
C:00152c cffb              RJMP    DECW2
C:00152d 0fa8      DECW1:  ADD     XL,WL
C:00152e 1fb9              ADC     XH,WH
C:00152f 2300              TST     DATA
C:001530 f421              BRNE    DECW3
C:001531 e200              LDI     DATA,$20
C:001532 d00a              RCALL   DECWPC
C:001533 2700              CLR     DATA
C:001534 c003              RJMP    DECW4
C:001535 6300      DECW3:  ORI     DATA,$30
C:001536 d006              RCALL   DECWPC
C:001537 e300              LDI     DATA,$30
C:001538 952a      DECW4:  DEC     COUNT
C:001539 f761              BRNE    DECW5
C:00153a 2f0a              MOV     DATA,XL
C:00153b 6300              ORI     DATA,$30
C:00153c cfdb              RJMP    PUTCHAR
C:00153d   +  DECWPC: PUSHZ
C:00153d 93ef      PUSH    ZL
C:00153e 93ff      PUSH    ZH
C:00153f   +          PUSHX
C:00153f 93af      PUSH    XL
C:001540 93bf      PUSH    XH
C:001541 932f              PUSH    COUNT
C:001542 dfd5              RCALL   PUTCHAR
C:001543 912f              POP     COUNT
C:001544   +          POPX
C:001544 91bf      POP     XH
C:001545 91af      POP     XL
C:001546   +          POPZ
C:001546 91ff      POP     ZH
C:001547 91ef      POP     ZL
C:001548 9508              RET
          DECWTAB:.DW     10000,1000,100,10
C:001549 2710
         ;
         ;--------------------------------------
         ;in:    DATA
          HEXBYTE_FOR_DUMP:
C:00154d 930f              PUSH    DATA
C:00154e dfc0              RCALL   HEXBYTE
C:00154f e200              LDI     DATA,$20
C:001550 dfc7              RCALL   PUTCHAR
C:001551 910f              POP     DATA
C:001552 9508              RET
         ;
         ;--------------------------------------
         ;
          PUTCHAR_FOR_DUMP:
C:001553 3200              CPI     DATA,$20
C:001554 f408              BRCC    PCHAR4D
C:001555 e20e              LDI     DATA,$2E
C:001556 cfc1      PCHAR4D:RJMP    PUTCHAR
         ;
         ;--------------------------------------
         ;
          ;
          .INCLUDE "_screen.asm"
          .EQU    WIN_SHADOW_ATTR=$01
         ;
         ;--------------------------------------
         ;
          SCR_FADE:
C:001557 e0a0              LDI     XL,0
C:001558 e0b1              LDI     XH,1
C:001559 d1ae              RCALL   SCR_SET_CURSOR
C:00155a e717              LDI     TEMP,$77
C:00155b   +          LDIW    53*23
C:00155b ec83      LDI     WL,LOW(53*23)
C:00155c e094      LDI     WH,HIGH(53*23)
C:00155d c207              RJMP    SCR_FILLLONG_ATTR
         ;
         ;--------------------------------------
         ;
          SCR_BACKGND:
C:00155e e0a0              LDI     XL,0
C:00155f e0b0              LDI     XH,0
C:001560 d1a7              RCALL   SCR_SET_CURSOR
C:001561 e200              LDI     DATA,$20        ;" "
C:001562 ef10              LDI     TEMP,$F0
C:001563 e325              LDI     COUNT,53
C:001564 d1e2              RCALL   SCR_FILL_CHAR_ATTR
C:001565 eb00              LDI     DATA,$B0        ;"░"
C:001566 e717              LDI     TEMP,$77
C:001567   +          LDIW    53*23
C:001567 ec83      LDI     WL,LOW(53*23)
C:001568 e094      LDI     WH,HIGH(53*23)
C:001569 d1f1              RCALL   SCR_FILLLONG_CHAR_ATTR
C:00156a e200              LDI     DATA,$20        ;" "
C:00156b ef10              LDI     TEMP,$F0
C:00156c e325              LDI     COUNT,53
C:00156d d1d9              RCALL   SCR_FILL_CHAR_ATTR
C:00156e 7f4c              CBR     FLAGS1,0B00000011
C:00156f 6044              SBR     FLAGS1,0B00000100
C:001570 e0a0              LDI     XL,0
C:001571 e0b0              LDI     XH,0
C:001572 d195              RCALL   SCR_SET_CURSOR
C:001573   +          LDIZ    MSG_TITLE1*2
C:001573 ece0      LDI     ZL,LOW(MSG_TITLE1*2)
C:001574 e0f0      LDI     ZH,HIGH(MSG_TITLE1*2)
C:001575 d1a4              RCALL   SCR_PRINTSTRZ
C:001576 940e 14d4         CALL    PRINT_SHORT_VERS
C:001578   +          LDIZ    MSG_TITLE2*2
C:001578 eee6      LDI     ZL,LOW(MSG_TITLE2*2)
C:001579 e0f0      LDI     ZH,HIGH(MSG_TITLE2*2)
C:00157a c19f              RJMP    SCR_PRINTSTRZ
         ;
         ;--------------------------------------
         ;                        ┌──┬────────────────────── коорд.лев.верхн угола окна
         ;                        │  │   ┌────────────────── ширина (без учёта тени)
         ;                        │  │   │   ┌────────────── высота (без учёта тени)
         ;                        │  │   │   │    ┌───────── атрибут окна
         ;WINDOW_DESCRIPTOR:      │  │   │   │    │    ┌──── флаги: .0 - "с тенью/без тени"
         ;               .DB     15, 3, 25, 13, $1F, $01
         ;
         ;in:    Z == указатель на описатель окна (в младших 64K)
         ;const: WIN_SHADOW_ATTR == атрибут тени
          .EQU    WIN_X   =0
          .EQU    WIN_Y   =1
          .EQU    WIN_W   =2
          .EQU    WIN_W2  =3
          .EQU    WIN_H   =4
          .EQU    WIN_H2  =5
          .EQU    WIN_ATTR=6
          .EQU    WIN_FLGS=7
         ;
C:00157b   +  WINDOW: GETMEM  8
C:00157b 9728      SBIW    YL,8
         
C:00157c 91a5              LPM     XL,Z+
C:00157d   +          STH     WIN_X,XL
C:00157d 83a8      STD     Y+WIN_X,XL
C:00157e 91b5              LPM     XH,Z+
C:00157f   +          STH     WIN_Y,XH
C:00157f 83b9      STD     Y+WIN_Y,XH
C:001580 9115              LPM     TEMP,Z+
C:001581   +          STH     WIN_W,TEMP
C:001581 831a      STD     Y+WIN_W,TEMP
C:001582 5012              SUBI    TEMP,2
C:001583   +          STH     WIN_W2,TEMP
C:001583 831b      STD     Y+WIN_W2,TEMP
C:001584 9115              LPM     TEMP,Z+
C:001585   +          STH     WIN_H,TEMP
C:001585 831c      STD     Y+WIN_H,TEMP
C:001586 5012              SUBI    TEMP,2
C:001587   +          STH     WIN_H2,TEMP
C:001587 831d      STD     Y+WIN_H2,TEMP
C:001588 9115              LPM     TEMP,Z+
C:001589   +          STH     WIN_ATTR,TEMP
C:001589 831e      STD     Y+WIN_ATTR,TEMP
C:00158a 9115              LPM     TEMP,Z+
C:00158b   +          STH     WIN_FLGS,TEMP
C:00158b 831f      STD     Y+WIN_FLGS,TEMP
         
C:00158c d17b              RCALL   SCR_SET_CURSOR
C:00158d   +          LDH     TEMP,WIN_ATTR
C:00158d 811e      LDD     TEMP,Y+WIN_ATTR
C:00158e d176              RCALL   SCR_SET_ATTR
C:00158f ed0a              LDI     DATA,$DA ;"┌"
C:001590 d1b1              RCALL   SCR_PUTCHAR
C:001591 ec04              LDI     DATA,$C4 ;"─"
C:001592   +          LDH     COUNT,WIN_W2
C:001592 812b      LDD     COUNT,Y+WIN_W2
C:001593 d1b8              RCALL   SCR_FILL_CHAR
C:001594 eb0f              LDI     DATA,$BF ;"┐"
C:001595 d1ac              RCALL   SCR_PUTCHAR
          WIND_1:
C:001596   +          LDH     XL,WIN_X
C:001596 81a8      LDD     XL,Y+WIN_X
C:001597   +          LDH     XH,WIN_Y
C:001597 81b9      LDD     XH,Y+WIN_Y
C:001598 95b3              INC     XH
C:001599   +          STH     WIN_Y,XH
C:001599 83b9      STD     Y+WIN_Y,XH
C:00159a d16d              RCALL   SCR_SET_CURSOR
C:00159b   +          LDH     TEMP,WIN_ATTR
C:00159b 811e      LDD     TEMP,Y+WIN_ATTR
C:00159c d168              RCALL   SCR_SET_ATTR
C:00159d eb03              LDI     DATA,$B3 ;"│"
C:00159e d1a3              RCALL   SCR_PUTCHAR
C:00159f e200              LDI     DATA,$20 ;" "
C:0015a0   +          LDH     COUNT,WIN_W2
C:0015a0 812b      LDD     COUNT,Y+WIN_W2
C:0015a1 d1aa              RCALL   SCR_FILL_CHAR
C:0015a2 eb03              LDI     DATA,$B3 ;"│"
C:0015a3 d19e              RCALL   SCR_PUTCHAR
C:0015a4   +          LDH     COUNT,WIN_FLGS
C:0015a4 812f      LDD     COUNT,Y+WIN_FLGS
C:0015a5 ff20              SBRS    COUNT,0
C:0015a6 c003              RJMP    WIND_2
C:0015a7 e011              LDI     TEMP,WIN_SHADOW_ATTR
C:0015a8 e021              LDI     COUNT,1
C:0015a9 d1a7              RCALL   SCR_FILL_ATTR
C:0015aa   +  WIND_2: LDH     COUNT,WIN_H2
C:0015aa 812d      LDD     COUNT,Y+WIN_H2
C:0015ab 952a              DEC     COUNT
C:0015ac   +          STH     WIN_H2,COUNT
C:0015ac 832d      STD     Y+WIN_H2,COUNT
C:0015ad f741              BRNE    WIND_1
         
C:0015ae   +          LDH     XL,WIN_X
C:0015ae 81a8      LDD     XL,Y+WIN_X
C:0015af   +          LDH     XH,WIN_Y
C:0015af 81b9      LDD     XH,Y+WIN_Y
C:0015b0 95b3              INC     XH
C:0015b1   +          STH     WIN_Y,XH
C:0015b1 83b9      STD     Y+WIN_Y,XH
C:0015b2 d155              RCALL   SCR_SET_CURSOR
C:0015b3   +          LDH     TEMP,WIN_ATTR
C:0015b3 811e      LDD     TEMP,Y+WIN_ATTR
C:0015b4 d150              RCALL   SCR_SET_ATTR
C:0015b5 ec00              LDI     DATA,$C0 ;"└"
C:0015b6 d18b              RCALL   SCR_PUTCHAR
C:0015b7 ec04              LDI     DATA,$C4 ;"─"
C:0015b8   +          LDH     COUNT,WIN_W2
C:0015b8 812b      LDD     COUNT,Y+WIN_W2
C:0015b9 d192              RCALL   SCR_FILL_CHAR
C:0015ba ed09              LDI     DATA,$D9 ;"┘"
C:0015bb d186              RCALL   SCR_PUTCHAR
C:0015bc   +          LDH     COUNT,WIN_FLGS
C:0015bc 812f      LDD     COUNT,Y+WIN_FLGS
C:0015bd ff20              SBRS    COUNT,0
C:0015be c003              RJMP    WIND_3
C:0015bf e011              LDI     TEMP,WIN_SHADOW_ATTR
C:0015c0 e021              LDI     COUNT,1
C:0015c1 d18f              RCALL   SCR_FILL_ATTR
          WIND_3:
C:0015c2   +          LDH     COUNT,WIN_FLGS
C:0015c2 812f      LDD     COUNT,Y+WIN_FLGS
C:0015c3 ff20              SBRS    COUNT,0
C:0015c4 c008              RJMP    WIND_4
C:0015c5   +          LDH     XL,WIN_X
C:0015c5 81a8      LDD     XL,Y+WIN_X
C:0015c6 95a3              INC     XL
C:0015c7   +          LDH     XH,WIN_Y
C:0015c7 81b9      LDD     XH,Y+WIN_Y
C:0015c8 95b3              INC     XH
C:0015c9 d13e              RCALL   SCR_SET_CURSOR
C:0015ca e011              LDI     TEMP,WIN_SHADOW_ATTR
C:0015cb   +          LDH     COUNT,WIN_W
C:0015cb 812a      LDD     COUNT,Y+WIN_W
C:0015cc d184              RCALL   SCR_FILL_ATTR
          WIND_4:
C:0015cd   +          LDH     TEMP,WIN_ATTR
C:0015cd 811e      LDD     TEMP,Y+WIN_ATTR
C:0015ce d136              RCALL   SCR_SET_ATTR
         
C:0015cf   +          FREEMEM 8
C:0015cf 9628      ADIW    YL,8
C:0015d0 9508              RET
         ;
         ;--------------------------------------
         ;                        ┌──┬────────────────────── коорд.лев.верхн угола окна
         ;                        │  │   ┌────────────────── длина_строки + 2 =
         ;                        │  │   │                   = ширина без учёта рамки и тени
         ;                        │  │   │    ┌───────────── количество пунктов меню
         ;                        │  │   │    │    ┌──────── атрибут для окна
         ;MENU_DESCRIPTOR:        │  │   │    │    │    ┌─── атрибут для курсора
         ;               .DB     15, 3, 18+2, 2, $1F, $F0
         ;               .DW     BKGND_TASK ──────────────── ссылка на фоновую задачу
         ;               .DW     PERIOD ──────────────────── период вызова фоновой задачи, мс (1..16383)
         ;
         ;               .DW     HANDLER1 ────────────────── указатель на обработчик для 1-го пункта меню
         ;               .DW     HANDLER2 ────────────────── указатель на обработчик для 2-го пункта меню
         ;
         ;               .DB     "─ Заголовок окна ─"        \
         ;               .DB     "Первый пункт меню "         > язык 0
         ;               .DB     "Второй пункт меню "        /
         ;
         ;               .DB     " Header of window "        \
         ;               .DB     "It's first item   "         > язык 1
         ;               .DB     "It's second item  "        /
         ;                       ;123456789012345678 (длина_строки=18)
         ;
         ; ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒   ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
         ; ▒▒▒▒┌── Заголовок окна ──┐▒▒▒▒▒   ▒▒▒▒┌─ Header of window ─┐▒▒▒▒▒
         ; ▒▒▒▒│ Первый пункт меню  │░▒▒▒▒   ▒▒▒▒│ It's first item    │░▒▒▒▒
         ; ▒▒▒▒│ Второй пункт меню  │░▒▒▒▒   ▒▒▒▒│ It's second item   │░▒▒▒▒
         ; ▒▒▒▒└────────────────────┘░▒▒▒▒   ▒▒▒▒└────────────────────┘░▒▒▒▒
         ; ▒▒▒▒▒░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒   ▒▒▒▒▒░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒
         ; ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒   ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
         ;--------------------------------------
         ;Меню (выбор функции - выполнение - возврат в меню)
         ;in:    Z == указатель на описатель меню (в младших 64K)
         ;const: WIN_SHADOW_ATTR == атрибут тени
          .EQU    MENU_TIMEOUT_0  =0
          .EQU    MENU_TIMEOUT_1  =1
          .EQU    MENU_DESC_L     =2
          .EQU    MENU_DESC_H     =3
          .EQU    MENU_SELECT     =4
          .EQU    MENU_X          =5
          .EQU    MENU_Y          =6
          .EQU    MENU_Y_TEMP     =7
          .EQU    MENU_WIDTH2     =8
          .EQU    MENU_HEIGHT2    =9
          .EQU    MENU_H2_TEMP    =10
          .EQU    MENU_WIN_ATTR   =11
          .EQU    MENU_CUR_ATTR   =12
          .EQU    MENU_BTASK_L    =13
          .EQU    MENU_BTASK_H    =14
          .EQU    MENU_BPERIOD_L  =15
          .EQU    MENU_BPERIOD_H  =16
         ;
C:0015d1   +  MENU:   GETMEM  17
C:0015d1 9761      SBIW    YL,17
C:0015d2   +          STH     MENU_DESC_L,ZL
C:0015d2 83ea      STD     Y+MENU_DESC_L,ZL
C:0015d3   +          STH     MENU_DESC_H,ZH
C:0015d3 83fb      STD     Y+MENU_DESC_H,ZH
C:0015d4   +          STH     MENU_SELECT,NULL
C:0015d4 82fc      STD     Y+MENU_SELECT,NULL
          MENU_AGAIN:
C:0015d5   +          STH     MENU_TIMEOUT_1,NULL
C:0015d5 82f9      STD     Y+MENU_TIMEOUT_1,NULL
C:0015d6 df87              RCALL   SCR_BACKGND
C:0015d7   +          LDH     ZL,MENU_DESC_L
C:0015d7 81ea      LDD     ZL,Y+MENU_DESC_L
C:0015d8   +          LDH     ZH,MENU_DESC_H
C:0015d8 81fb      LDD     ZH,Y+MENU_DESC_H
C:0015d9 91a5              LPM     XL,Z+
C:0015da   +          STH     MENU_X,XL
C:0015da 83ad      STD     Y+MENU_X,XL
C:0015db 91b5              LPM     XH,Z+
C:0015dc   +          STH     MENU_Y,XH
C:0015dc 83be      STD     Y+MENU_Y,XH
C:0015dd   +          STH     MENU_Y_TEMP,XH
C:0015dd 83bf      STD     Y+MENU_Y_TEMP,XH
C:0015de 9115              LPM     TEMP,Z+
C:0015df   +          STH     MENU_WIDTH2,TEMP
C:0015df 8718      STD     Y+MENU_WIDTH2,TEMP
C:0015e0 9115              LPM     TEMP,Z+
C:0015e1   +          STH     MENU_HEIGHT2,TEMP
C:0015e1 8719      STD     Y+MENU_HEIGHT2,TEMP
C:0015e2   +          STH     MENU_H2_TEMP,TEMP
C:0015e2 871a      STD     Y+MENU_H2_TEMP,TEMP
C:0015e3 9115              LPM     TEMP,Z+
C:0015e4   +          STH     MENU_WIN_ATTR,TEMP
C:0015e4 871b      STD     Y+MENU_WIN_ATTR,TEMP
C:0015e5 9115              LPM     TEMP,Z+
C:0015e6   +          STH     MENU_CUR_ATTR,TEMP
C:0015e6 871c      STD     Y+MENU_CUR_ATTR,TEMP
         
C:0015e7 9115              LPM     TEMP,Z+
C:0015e8   +          STH     MENU_BTASK_L,TEMP
C:0015e8 871d      STD     Y+MENU_BTASK_L,TEMP
C:0015e9 9115              LPM     TEMP,Z+
C:0015ea   +          STH     MENU_BTASK_H,TEMP
C:0015ea 871e      STD     Y+MENU_BTASK_H,TEMP
C:0015eb 9115              LPM     TEMP,Z+
C:0015ec   +          STH     MENU_BPERIOD_L,TEMP
C:0015ec 871f      STD     Y+MENU_BPERIOD_L,TEMP
C:0015ed 9115              LPM     TEMP,Z+
C:0015ee   +          STH     MENU_BPERIOD_H,TEMP
C:0015ee 8b18      STD     Y+MENU_BPERIOD_H,TEMP
         
C:0015ef   +          LDH     TEMP,MENU_HEIGHT2
C:0015ef 8519      LDD     TEMP,Y+MENU_HEIGHT2
C:0015f0 0f11              LSL     TEMP
C:0015f1 0fe1              ADD     ZL,TEMP
C:0015f2 1dff              ADC     ZH,NULL
C:0015f3   +          LDH     DATA,MENU_WIDTH2
C:0015f3 8508      LDD     DATA,Y+MENU_WIDTH2
C:0015f4 5002              SUBI    DATA,2
C:0015f5   +          LDH     TEMP,MENU_HEIGHT2
C:0015f5 8519      LDD     TEMP,Y+MENU_HEIGHT2
C:0015f6 9513              INC     TEMP
C:0015f7 9f01              MUL     DATA,TEMP
C:0015f8 2d1b              MOV     TEMP,LANG
C:0015f9 9516              LSR     TEMP
C:0015fa f021              BREQ    MENU_5
C:0015fb 0de0      MENU_6: ADD     ZL,R0
C:0015fc 1df1              ADC     ZH,R1
C:0015fd 951a              DEC     TEMP
C:0015fe f7e1              BRNE    MENU_6
          MENU_5:
C:0015ff d108              RCALL   SCR_SET_CURSOR
C:001600   +          LDH     TEMP,MENU_WIN_ATTR
C:001600 851b      LDD     TEMP,Y+MENU_WIN_ATTR
C:001601 d103              RCALL   SCR_SET_ATTR
C:001602 ed0a              LDI     DATA,$DA ;"┌"
C:001603 d13e              RCALL   SCR_PUTCHAR
C:001604 ec04              LDI     DATA,$C4 ;"─"
C:001605 d13c              RCALL   SCR_PUTCHAR
C:001606   +          LDH     COUNT,MENU_WIDTH2
C:001606 8528      LDD     COUNT,Y+MENU_WIDTH2
C:001607 5022              SUBI    COUNT,2
C:001608 d130              RCALL   SCR_PRINTSTRN
C:001609 ec04              LDI     DATA,$C4 ;"─"
C:00160a d137              RCALL   SCR_PUTCHAR
C:00160b eb0f              LDI     DATA,$BF ;"┐"
C:00160c d135              RCALL   SCR_PUTCHAR
          MENU_1:
C:00160d   +          LDH     XL,MENU_X
C:00160d 81ad      LDD     XL,Y+MENU_X
C:00160e   +          LDH     XH,MENU_Y_TEMP
C:00160e 81bf      LDD     XH,Y+MENU_Y_TEMP
C:00160f 95b3              INC     XH
C:001610   +          STH     MENU_Y_TEMP,XH
C:001610 83bf      STD     Y+MENU_Y_TEMP,XH
C:001611 d0f6              RCALL   SCR_SET_CURSOR
C:001612   +          LDH     TEMP,MENU_WIN_ATTR
C:001612 851b      LDD     TEMP,Y+MENU_WIN_ATTR
C:001613 d0f1              RCALL   SCR_SET_ATTR
C:001614 eb03              LDI     DATA,$B3 ;"│"
C:001615 d12c              RCALL   SCR_PUTCHAR
C:001616 e200              LDI     DATA,$20 ;" "
C:001617 d12a              RCALL   SCR_PUTCHAR
C:001618   +          LDH     COUNT,MENU_WIDTH2
C:001618 8528      LDD     COUNT,Y+MENU_WIDTH2
C:001619 5022              SUBI    COUNT,2
C:00161a d11e              RCALL   SCR_PRINTSTRN
C:00161b e200              LDI     DATA,$20 ;" "
C:00161c d125              RCALL   SCR_PUTCHAR
C:00161d eb03              LDI     DATA,$B3 ;"│"
C:00161e d123              RCALL   SCR_PUTCHAR
C:00161f e011              LDI     TEMP,WIN_SHADOW_ATTR
C:001620 e021              LDI     COUNT,1
C:001621 d12f              RCALL   SCR_FILL_ATTR
C:001622   +  MENU_2: LDH     COUNT,MENU_H2_TEMP
C:001622 852a      LDD     COUNT,Y+MENU_H2_TEMP
C:001623 952a              DEC     COUNT
C:001624   +          STH     MENU_H2_TEMP,COUNT
C:001624 872a      STD     Y+MENU_H2_TEMP,COUNT
C:001625 f739              BRNE    MENU_1
         
C:001626   +          LDH     XL,MENU_X
C:001626 81ad      LDD     XL,Y+MENU_X
C:001627   +          LDH     XH,MENU_Y_TEMP
C:001627 81bf      LDD     XH,Y+MENU_Y_TEMP
C:001628 95b3              INC     XH
C:001629   +          STH     MENU_Y_TEMP,XH
C:001629 83bf      STD     Y+MENU_Y_TEMP,XH
C:00162a d0dd              RCALL   SCR_SET_CURSOR
C:00162b   +          LDH     TEMP,MENU_WIN_ATTR
C:00162b 851b      LDD     TEMP,Y+MENU_WIN_ATTR
C:00162c d0d8              RCALL   SCR_SET_ATTR
C:00162d ec00              LDI     DATA,$C0 ;"└"
C:00162e d113              RCALL   SCR_PUTCHAR
C:00162f ec04              LDI     DATA,$C4 ;"─"
C:001630   +          LDH     COUNT,MENU_WIDTH2
C:001630 8528      LDD     COUNT,Y+MENU_WIDTH2
C:001631 d11a              RCALL   SCR_FILL_CHAR
C:001632 ed09              LDI     DATA,$D9 ;"┘"
C:001633 d10e              RCALL   SCR_PUTCHAR
C:001634 e011              LDI     TEMP,WIN_SHADOW_ATTR
C:001635 e021              LDI     COUNT,1
C:001636 d11a              RCALL   SCR_FILL_ATTR
          MENU_3:
C:001637   +          LDH     XL,MENU_X
C:001637 81ad      LDD     XL,Y+MENU_X
C:001638 95a3              INC     XL
C:001639   +          LDH     XH,MENU_Y_TEMP
C:001639 81bf      LDD     XH,Y+MENU_Y_TEMP
C:00163a 95b3              INC     XH
C:00163b d0cc              RCALL   SCR_SET_CURSOR
C:00163c e011              LDI     TEMP,WIN_SHADOW_ATTR
C:00163d   +          LDH     COUNT,MENU_WIDTH2
C:00163d 8528      LDD     COUNT,Y+MENU_WIDTH2
C:00163e   +          ADDI    COUNT,2
C:00163e 5f2e      SUBI    COUNT,(-(2)&$FF)
C:00163f d111              RCALL   SCR_FILL_ATTR
         
C:001640   +          LDH     ZL,MENU_BTASK_L
C:001640 85ed      LDD     ZL,Y+MENU_BTASK_L
C:001641   +          LDH     ZH,MENU_BTASK_H
C:001641 85fe      LDD     ZH,Y+MENU_BTASK_H
C:001642 e000              LDI     DATA,0
C:001643 9509              ICALL
         
          MENU_DRAWCURSOR:
C:001644   +          LDH     XL,MENU_X
C:001644 81ad      LDD     XL,Y+MENU_X
C:001645 95a3              INC     XL
C:001646   +          LDH     XH,MENU_Y
C:001646 81be      LDD     XH,Y+MENU_Y
C:001647 95b3              INC     XH
C:001648   +          LDH     TEMP,MENU_SELECT
C:001648 811c      LDD     TEMP,Y+MENU_SELECT
C:001649 0fb1              ADD     XH,TEMP
C:00164a d0bd              RCALL   SCR_SET_CURSOR
C:00164b   +          LDH     TEMP,MENU_CUR_ATTR
C:00164b 851c      LDD     TEMP,Y+MENU_CUR_ATTR
C:00164c   +          LDH     COUNT,MENU_WIDTH2
C:00164c 8528      LDD     COUNT,Y+MENU_WIDTH2
C:00164d d103              RCALL   SCR_FILL_ATTR
         
          MENU_WAITKEY:
C:00164e 940e 0ffc         CALL    INKEY
C:001650 f0c1              BREQ    MENU_NOKEY
C:001651 350a              CPI     DATA,KEY_ENTER
C:001652 f159              BREQ    MENU_ENTER
C:001653 3705              CPI     DATA,KEY_UP
C:001654 f1b1              BREQ    MENU_UP
C:001655 3702              CPI     DATA,KEY_DOWN
C:001656 f1e9              BREQ    MENU_DOWN
C:001657 370d              CPI     DATA,KEY_PAGEUP
C:001658 f0f1              BREQ    MENU_TOP
C:001659 360c              CPI     DATA,KEY_HOME
C:00165a f0e1              BREQ    MENU_TOP
C:00165b 370a              CPI     DATA,KEY_PAGEDOWN
C:00165c f0d9              BREQ    MENU_BOTTOM
C:00165d 3609              CPI     DATA,KEY_END
C:00165e f0c9              BREQ    MENU_BOTTOM
C:00165f fd11              SBRC    TEMP,PS2K_BIT_EXTKEY
C:001660 c008              RJMP    MENU_NOKEY
C:001661 3706              CPI     DATA,KEY_ESC
C:001662 f0c9              BREQ    MENU_ESCAPE
C:001663 3508              CPI     DATA,KEY_CAPSLOCK
C:001664 f0a1              BREQ    MENU_SWITCH_LANG
C:001665 370e              CPI     DATA,KEY_SCROLLLOCK
C:001666 f099              BREQ    MENU_SWITCH_VGA
C:001667 3005              CPI     DATA,KEY_F1
C:001668 f091              BREQ    MENU_HELP
          MENU_NOKEY:
C:001669 01fe              MOVW    ZL,YL
C:00166a 940e 0e29         CALL    CHECK_TIMEOUT_MS
C:00166c f708              BRCC    MENU_WAITKEY
C:00166d   +          LDH     ZL,MENU_BTASK_L
C:00166d 85ed      LDD     ZL,Y+MENU_BTASK_L
C:00166e   +          LDH     ZH,MENU_BTASK_H
C:00166e 85fe      LDD     ZH,Y+MENU_BTASK_H
C:00166f e001              LDI     DATA,1
C:001670 9509              ICALL
C:001671 01fe              MOVW    ZL,YL
C:001672   +          LDH     WL,MENU_BPERIOD_L
C:001672 858f      LDD     WL,Y+MENU_BPERIOD_L
C:001673   +          LDH     WH,MENU_BPERIOD_H
C:001673 8998      LDD     WH,Y+MENU_BPERIOD_H
C:001674 940e 0e19         CALL    SET_TIMEOUT_MS
C:001676 cfd7              RJMP    MENU_WAITKEY
         ;
          MENU_TOP:
C:001677 c027              RJMP    MENU_TOP0
          MENU_BOTTOM:
C:001678 c02b              RJMP    MENU_BOTTOM0
          MENU_SWITCH_LANG:
C:001679 c03e              RJMP    MENU_SWLNG0
          MENU_SWITCH_VGA:
C:00167a c067              RJMP    MENU_SWVGA0
          MENU_HELP:
C:00167b c02e              RJMP    MENU_HELP0
         ;
          MENU_ESCAPE:
C:00167c   +          FREEMEM 17
C:00167c 9661      ADIW    YL,17
C:00167d 9508              RET
         ;
          MENU_ENTER:
C:00167e ded8              RCALL   SCR_FADE
C:00167f   +          LDH     ZL,MENU_DESC_L
C:00167f 81ea      LDD     ZL,Y+MENU_DESC_L
C:001680   +          LDH     ZH,MENU_DESC_H
C:001680 81fb      LDD     ZH,Y+MENU_DESC_H
C:001681 963a              ADIW    ZL,10
C:001682   +          LDH     TEMP,MENU_SELECT
C:001682 811c      LDD     TEMP,Y+MENU_SELECT
C:001683 0f11              LSL     TEMP
C:001684 0fe1              ADD     ZL,TEMP
C:001685 1dff              ADC     ZH,NULL
C:001686 91a5              LPM     XL,Z+
C:001687 91b5              LPM     XH,Z+
C:001688 01fd              MOVW    ZL,XL
C:001689 9509              ICALL
C:00168a cf4a              RJMP    MENU_AGAIN
         ;
          MENU_UP:
C:00168b   +          LDH     TEMP,MENU_SELECT
C:00168b 811c      LDD     TEMP,Y+MENU_SELECT
C:00168c 2311              TST     TEMP
C:00168d f409              BRNE    MENU_UP_1
C:00168e cfbf              RJMP    MENU_WAITKEY
          MENU_UP_1:
C:00168f d060              RCALL   MENU_CLR_CURSOR
C:001690   +          LDH     TEMP,MENU_SELECT
C:001690 811c      LDD     TEMP,Y+MENU_SELECT
C:001691 951a              DEC     TEMP
C:001692   +          STH     MENU_SELECT,TEMP
C:001692 831c      STD     Y+MENU_SELECT,TEMP
C:001693 cfb0              RJMP    MENU_DRAWCURSOR
         ;
          MENU_DOWN:
C:001694   +          LDH     TEMP,MENU_SELECT
C:001694 811c      LDD     TEMP,Y+MENU_SELECT
C:001695   +          LDH     DATA,MENU_HEIGHT2
C:001695 8509      LDD     DATA,Y+MENU_HEIGHT2
C:001696 950a              DEC     DATA
C:001697 1710              CP      TEMP,DATA
C:001698 f008              BRCS    MENU_DOWN_1
C:001699 cfb4              RJMP    MENU_WAITKEY
          MENU_DOWN_1:
C:00169a d055              RCALL   MENU_CLR_CURSOR
C:00169b   +          LDH     TEMP,MENU_SELECT
C:00169b 811c      LDD     TEMP,Y+MENU_SELECT
C:00169c 9513              INC     TEMP
C:00169d   +          STH     MENU_SELECT,TEMP
C:00169d 831c      STD     Y+MENU_SELECT,TEMP
C:00169e cfa5              RJMP    MENU_DRAWCURSOR
         ;
          MENU_TOP0:
C:00169f   +          LDH     TEMP,MENU_SELECT
C:00169f 811c      LDD     TEMP,Y+MENU_SELECT
C:0016a0 d04f              RCALL   MENU_CLR_CURSOR
C:0016a1 2711              CLR     TEMP
C:0016a2   +          STH     MENU_SELECT,TEMP
C:0016a2 831c      STD     Y+MENU_SELECT,TEMP
C:0016a3 cfa0              RJMP    MENU_DRAWCURSOR
         ;
          MENU_BOTTOM0:
C:0016a4   +          LDH     TEMP,MENU_SELECT
C:0016a4 811c      LDD     TEMP,Y+MENU_SELECT
C:0016a5 d04a              RCALL   MENU_CLR_CURSOR
C:0016a6   +          LDH     TEMP,MENU_HEIGHT2
C:0016a6 8519      LDD     TEMP,Y+MENU_HEIGHT2
C:0016a7 951a              DEC     TEMP
C:0016a8   +          STH     MENU_SELECT,TEMP
C:0016a8 831c      STD     Y+MENU_SELECT,TEMP
C:0016a9 cf9a              RJMP    MENU_DRAWCURSOR
         ;
          MENU_HELP0:
C:0016aa deac              RCALL   SCR_FADE
C:0016ab   +          LDIZ    WIND_MENU_HELP*2
C:0016ab e6e8      LDI     ZL,LOW(WIND_MENU_HELP*2)
C:0016ac e2fd      LDI     ZH,HIGH(WIND_MENU_HELP*2)
C:0016ad decd              RCALL   WINDOW
C:0016ae   +          LDIZ    MLMSG_MENU_HELP*2
C:0016ae e5e0      LDI     ZL,LOW(MLMSG_MENU_HELP*2)
C:0016af e0f6      LDI     ZH,HIGH(MLMSG_MENU_HELP*2)
C:0016b0 d064              RCALL   SCR_PRINTMLSTR
C:0016b1 940e 0fef         CALL    WAITKEY
C:0016b3 cf21              RJMP    MENU_AGAIN
          WIND_MENU_HELP:
                  .DB     3,13,37,9,$CF,$01
C:0016B4 030D2509CF01
         ;
          MENU_SWLNG3:
C:0016b7   +          FREEMEM 2
C:0016b7 9622      ADIW    YL,2
          MENU_SWLNG0:
C:0016b8 2d0b              MOV     DATA,LANG
C:0016b9   +          ADDI    DATA,2
C:0016b9 5f0e      SUBI    DATA,(-(2)&$FF)
C:0016ba 3004              CPI     DATA,MAX_LANG*2
C:0016bb f008              BRCS    MENU_SWLNG1
C:0016bc 2700              CLR     DATA
          MENU_SWLNG1:
C:0016bd 2eb0              MOV     LANG,DATA
C:0016be 9506              LSR     DATA
C:0016bf   +          LDIW    EE_LANG
C:0016bf e083      LDI     WL,LOW(EE_LANG)
C:0016c0 e09f      LDI     WH,HIGH(EE_LANG)
C:0016c1 940e 2675         CALL    EEPROM_WRITE
C:0016c3 de93              RCALL   SCR_FADE
C:0016c4   +          LDIZ    WIND_MENU_SWLNG*2
C:0016c4 ebee      LDI     ZL,LOW(WIND_MENU_SWLNG*2)
C:0016c5 e2fd      LDI     ZH,HIGH(WIND_MENU_SWLNG*2)
C:0016c6 deb4              RCALL   WINDOW
C:0016c7 e91e              LDI     TEMP,$9E
C:0016c8 d03c              RCALL   SCR_SET_ATTR
C:0016c9   +          LDIZ    MLMSG_MENU_SWLNG*2
C:0016c9 efec      LDI     ZL,LOW(MLMSG_MENU_SWLNG*2)
C:0016ca e0fb      LDI     ZH,HIGH(MLMSG_MENU_SWLNG*2)
C:0016cb d049              RCALL   SCR_PRINTMLSTR
C:0016cc   +          GETMEM  2
C:0016cc 9722      SBIW    YL,2
C:0016cd 01fe              MOVW    ZL,YL
C:0016ce   +          LDIW    2000
C:0016ce ed80      LDI     WL,LOW(2000)
C:0016cf e097      LDI     WH,HIGH(2000)
C:0016d0 940e 0e19         CALL    SET_TIMEOUT_MS
          MENU_SWLNG2:
C:0016d2 01fe              MOVW    ZL,YL
C:0016d3 940e 0e29         CALL    CHECK_TIMEOUT_MS
C:0016d5 f038              BRCS    MENU_SWLNG9
C:0016d6 940e 0ffc         CALL    INKEY
C:0016d8 f3c9              BREQ    MENU_SWLNG2
C:0016d9 fd11              SBRC    TEMP,PS2K_BIT_EXTKEY
C:0016da c002              RJMP    MENU_SWLNG9
C:0016db 3508              CPI     DATA,KEY_CAPSLOCK
C:0016dc f2d1              BREQ    MENU_SWLNG3
          MENU_SWLNG9:
C:0016dd   +          FREEMEM 2
C:0016dd 9622      ADIW    YL,2
C:0016de cef6              RJMP    MENU_AGAIN
          WIND_MENU_SWLNG:
                  .DB     13,11,27,3,$9F,$01
C:0016DF 0D0B1B039F01
         ;
          MENU_SWVGA0:
C:0016e2 e810              LDI     TEMP,0B10000000
C:0016e3 26a1              EOR     MODE1,TEMP
C:0016e4 2d0a              MOV     DATA,MODE1
C:0016e5 7800              ANDI    DATA,0B10000000
C:0016e6 ea1f              LDI     TEMP,SCR_MODE
C:0016e7 940e 176f         CALL    FPGA_REG
C:0016e9 2d0a              MOV     DATA,MODE1
C:0016ea   +          LDIW    EE_MODE1
C:0016ea e082      LDI     WL,LOW(EE_MODE1)
C:0016eb e09f      LDI     WH,HIGH(EE_MODE1)
C:0016ec 940e 2675         CALL    EEPROM_WRITE
C:0016ee d00a              RCALL   SCR_KBDSETLED
C:0016ef cee5              RJMP    MENU_AGAIN
         ;
          MENU_CLR_CURSOR:
C:0016f0   +          LDH     XL,MENU_X
C:0016f0 81ad      LDD     XL,Y+MENU_X
C:0016f1 95a3              INC     XL
C:0016f2   +          LDH     XH,MENU_Y
C:0016f2 81be      LDD     XH,Y+MENU_Y
C:0016f3 95b3              INC     XH
C:0016f4 0fb1              ADD     XH,TEMP
C:0016f5 d012              RCALL   SCR_SET_CURSOR
C:0016f6   +          LDH     TEMP,MENU_WIN_ATTR
C:0016f6 851b      LDD     TEMP,Y+MENU_WIN_ATTR
C:0016f7   +          LDH     COUNT,MENU_WIDTH2
C:0016f7 8528      LDD     COUNT,Y+MENU_WIDTH2
C:0016f8 c058              RJMP    SCR_FILL_ATTR
         ;
          SCR_KBDSETLED:
C:0016f9 ee0d              LDI     DATA,$ED
C:0016fa d911              RCALL   PS2K_SEND_BYTE
C:0016fb f041              BREQ    SCR_SETLED_FAIL
C:0016fc d94d              RCALL   PS2K_RECEIVE_BYTE
C:0016fd f031              BREQ    SCR_SETLED_FAIL
C:0016fe 3f0a              CPI     DATA,$FA
C:0016ff f421              BRNE    SCR_SETLED_FAIL
C:001700 e000              LDI     DATA,0B00000000
C:001701 fea7              SBRS    MODE1,7
C:001702 e001              LDI     DATA,0B00000001
C:001703 d908              RCALL   PS2K_SEND_BYTE
          SCR_SETLED_FAIL:
C:001704 9508              RET
         ;
         ;--------------------------------------
         ;Установка текущего атрибута
         ;in:    TEMP - attr
          SCR_SET_ATTR:
C:001705 2f01              MOV     DATA,TEMP
C:001706 ea1a              LDI     TEMP,SCR_ATTR
C:001707 c067              RJMP    FPGA_REG
         ;
         ;--------------------------------------
         ;Установка позиции печати на экране
         ;       XL - x (0..52)
         ;       XH - y (0..24)
          SCR_SET_CURSOR:
C:001708 e315              LDI     TEMP,53
C:001709 9fb1              MUL     XH,TEMP
C:00170a 27bb              CLR     XH
C:00170b 0da0              ADD     XL,R0
C:00170c 1db1              ADC     XH,R1
C:00170d 9711              SBIW    XL,1
C:00170e 70b7              ANDI    XH,$07
C:00170f ea18              LDI     TEMP,SCR_LOADDR
C:001710 2f0a              MOV     DATA,XL
C:001711 d05d              RCALL   FPGA_REG
C:001712 ea19              LDI     TEMP,SCR_HIADDR
C:001713 2f0b              MOV     DATA,XH
C:001714 c05a              RJMP    FPGA_REG
         ;
         ;--------------------------------------
         ;in:    Z == указатель на структуру строк (в младших 64K)
          SCR_PRINTMLSTR:
C:001715 0deb              ADD     ZL,LANG
C:001716 1dff              ADC     ZH,NULL
C:001717 9185              LPM     WL,Z+
C:001718 9195              LPM     WH,Z+
C:001719 01fc              MOVW    ZL,WL
         ;
         ; - - - - - - - - - - - - - - - - - - -
         ;in:    Z == указатель на строку (в младших 64K)
          SCR_PRINTSTRZ:
C:00171a   +          SPICS_SET
C:00171a 9ac0      SBI     PORTB,0
C:00171b ea1c              LDI     TEMP,SCR_CHAR
          .ENDIF
C:00171c b91f              OUT     SPDR,TEMP
C:00171d d058              RCALL   FPGA_RDY_RD
          SCR_PRSTRZ1:
C:00171e 9105              LPM     DATA,Z+
C:00171f 2300              TST     DATA
C:001720 f071              BREQ    SCR_PRSTRZ9
C:001721 3105              CPI     DATA,$15
C:001722 f021              BREQ    SCR_PRSTRZ2
C:001723 3106              CPI     DATA,$16
C:001724 f031              BREQ    SCR_PRSTRZ3
C:001725 d04e              RCALL   FPGA_SAME_REG
C:001726 cff7              RJMP    SCR_PRSTRZ1
          SCR_PRSTRZ2:
C:001727 9105              LPM     DATA,Z+
C:001728 ea1a              LDI     TEMP,SCR_ATTR
C:001729 d045              RCALL   FPGA_REG
C:00172a cfef              RJMP    SCR_PRINTSTRZ ;SCR_PRSTRZ1
          SCR_PRSTRZ3:
C:00172b 91a5              LPM     XL,Z+
C:00172c 91b5              LPM     XH,Z+
C:00172d dfda              RCALL   SCR_SET_CURSOR
C:00172e cfeb              RJMP    SCR_PRINTSTRZ ;SCR_PRSTRZ1
          SCR_PRSTRZ9:
C:00172f 9508              RET
         ;
         ;--------------------------------------
         ;in:    Z == указатель на строку (в RAM)
         ;       COUNT == длина строки
          SCR_PRNRAMSTRN:
C:001730   +          SPICS_SET
C:001730 9ac0      SBI     PORTB,0
C:001731 ea1c              LDI     TEMP,SCR_CHAR
          .ENDIF
C:001732 b91f              OUT     SPDR,TEMP
C:001733 d042              RCALL   FPGA_RDY_RD
          SCR_PRSN1:
C:001734 9101              LD      DATA,Z+
C:001735 d03e              RCALL   FPGA_SAME_REG
C:001736 952a              DEC     COUNT
C:001737 f7e1              BRNE    SCR_PRSN1
C:001738 9508              RET
         ;
         ;--------------------------------------
         ;in:    Z == указатель на строку (в младших 64K)
         ;       COUNT == длина строки
          SCR_PRINTSTRN:
C:001739   +          SPICS_SET
C:001739 9ac0      SBI     PORTB,0
C:00173a ea1c              LDI     TEMP,SCR_CHAR
          .ENDIF
C:00173b b91f              OUT     SPDR,TEMP
C:00173c d039              RCALL   FPGA_RDY_RD
          SCR_PRSTRN1:
C:00173d 9105              LPM     DATA,Z+
C:00173e d035              RCALL   FPGA_SAME_REG
C:00173f 952a              DEC     COUNT
C:001740 f7e1              BRNE    SCR_PRSTRN1
C:001741 9508              RET
         ;
         ;--------------------------------------
         ;in:    DATA
          SCR_PUTCHAR:
C:001742 931f              PUSH    TEMP
C:001743 ea1c              LDI     TEMP,SCR_CHAR
C:001744 d02a              RCALL   FPGA_REG
C:001745 911f              POP     TEMP
C:001746 9508              RET
         ;
         ;--------------------------------------
         ;Заполнение символом и атрибутом
         ;in:    DATA == символ
         ;       TEMP == атрибут
         ;       COUNT == количество
          SCR_FILL_CHAR_ATTR:
C:001747 930f              PUSH    DATA
C:001748 2f01              MOV     DATA,TEMP
C:001749 ea1a              LDI     TEMP,SCR_ATTR
C:00174a d024              RCALL   FPGA_REG
C:00174b 910f              POP     DATA
         ;Заполнение символом и текущим атрибутом
         ;in:    DATA == символ
         ;       COUNT == количество
          SCR_FILL_CHAR:
C:00174c ea1c              LDI     TEMP,SCR_CHAR
C:00174d d021              RCALL   FPGA_REG
C:00174e 952a              DEC     COUNT
C:00174f f431              BRNE    SCR_FA1
C:001750 9508              RET
         ;
         ;--------------------------------------
         ;Заполнение атрибутом
         ;in:    TEMP == атрибут
         ;       COUNT == количество
          SCR_FILL_ATTR:
C:001751 2f01              MOV     DATA,TEMP
C:001752 ea1b              LDI     TEMP,SCR_FILL
C:001753 d01b              RCALL   FPGA_REG
C:001754 952a              DEC     COUNT
C:001755 f021              BREQ    SCR_FA9
C:001756   +  SCR_FA1:SPICS_CLR
C:001756 98c0      CBI     PORTB,0
C:001757   +          SPICS_SET
C:001757 9ac0      SBI     PORTB,0
          .ENDIF
C:001758 952a              DEC     COUNT
C:001759 f7e1              BRNE    SCR_FA1
C:00175a 9508      SCR_FA9:RET
         ;
         ;--------------------------------------
         ;Заполнение символом и атрибутом (LONG)
         ;in:    DATA == символ
         ;       TEMP == атрибут
         ;       W == количество
          SCR_FILLLONG_CHAR_ATTR:
C:00175b 930f              PUSH    DATA
C:00175c 2f01              MOV     DATA,TEMP
C:00175d ea1a              LDI     TEMP,SCR_ATTR
C:00175e d010              RCALL   FPGA_REG
C:00175f 910f              POP     DATA
         ;Заполнение символом и текущим атрибутом (LONG)
         ;in:    DATA == символ
         ;       W == количество
          SCR_FILLLONG_CHAR:
C:001760 ea1c              LDI     TEMP,SCR_CHAR
C:001761 d00d              RCALL   FPGA_REG
C:001762 9701              SBIW    WL,1
C:001763 f431              BRNE    SCR_FL1
C:001764 9508              RET
         ;
         ;--------------------------------------
         ;Заполнение атрибутом (LONG)
         ;in:    TEMP == атрибут
         ;       W == количество
          SCR_FILLLONG_ATTR:
C:001765 2f01              MOV     DATA,TEMP
C:001766 ea1b              LDI     TEMP,SCR_FILL
C:001767 d007              RCALL   FPGA_REG
C:001768 9701              SBIW    WL,1
C:001769 f021              BREQ    SCR_FL9
C:00176a   +  SCR_FL1:SPICS_CLR
C:00176a 98c0      CBI     PORTB,0
C:00176b   +          SPICS_SET
C:00176b 9ac0      SBI     PORTB,0
          .ENDIF
C:00176c 9701              SBIW    WL,1
C:00176d f7e1              BRNE    SCR_FL1
C:00176e 9508      SCR_FL9:RET
         ;
         ;
         ;--------------------------------------
         ;
          ;
         ;
         ;--------------------------------------
         ;обмен с регистрами в FPGA
         ;in:    TEMP == номер регистра
         ;       DATA == данные
         ;out:   DATA == данные
          FPGA_REG:
C:00176f 930f              PUSH    DATA
          .ENDIF
C:001770   +          SPICS_SET
C:001770 9ac0      SBI     PORTB,0
C:001771 b91f              OUT     SPDR,TEMP
C:001772 d003              RCALL   FPGA_RDY_RD
C:001773 910f              POP     DATA
         ;обмен без установки регистра
         ;in:    DATA == данные
         ;out:   DATA == данные
          FPGA_SAME_REG:
          .ENDIF
C:001774   +          SPICS_CLR
C:001774 98c0      CBI     PORTB,0
C:001775 b90f              OUT     SPDR,DATA
         ;ожидание окончания обмена с FPGA по SPI
         ;и чтение пришедших данных
         ;out:   DATA == данные
          FPGA_RDY_RD:
         ;        SBIC    SPSR,WCOL
         ;        JMP     CHAOS00
C:001776 9b77              SBIS    SPSR,SPIF
C:001777 cffe              RJMP    FPGA_RDY_RD
C:001778 b10f              IN      DATA,SPDR
C:001779   +          SPICS_SET
C:001779 9ac0      SBI     PORTB,0
C:00177a 9508              RET
         ;
         ;--------------------------------------
         ;
          EXT_INT6:
C:00177b 933f              PUSH    BITS
C:00177c b73f              IN      BITS,SREG
C:00177d fcc0              SBRC    INT6VECT,0
C:00177e 940e 1936         CALL    T_BEEP_INT
C:001780 fcc1              SBRC    INT6VECT,1
C:001781 92e0 0104         STS     NEWFRAME,ONE
C:001783 bf3f              OUT     SREG,BITS
C:001784 913f              POP     BITS
C:001785 9518              RETI
         ;
         ;--------------------------------------
         ;
          .INCLUDE "_sd_lowl.asm"
         ;
         ;--------------------------------------
         ;in;    TEMP - n
          SD_RD_DUMMY:
C:001786 ef0f              SER     DATA
C:001787 d05b              RCALL   SD_EXCHANGE
C:001788 951a              DEC     TEMP
C:001789 f7e1              BRNE    SD_RD_DUMMY
C:00178a 9508              RET
         ;
         ;--------------------------------------
         ;in:    DATA
          SD_WR_CMD:
C:00178b 930f              PUSH    DATA
C:00178c e012              LDI     TEMP,2
C:00178d dff8              RCALL   SD_RD_DUMMY
C:00178e 910f              POP     DATA
C:00178f d053              RCALL   SD_EXCHANGE
C:001790 2700              CLR     DATA
C:001791 d051              RCALL   SD_EXCHANGE
          SD_WR_CMX4:
C:001792 2700              CLR     DATA
C:001793 d04f              RCALL   SD_EXCHANGE
C:001794 2700              CLR     DATA
C:001795 d04d              RCALL   SD_EXCHANGE
C:001796 2700              CLR     DATA
C:001797 d04b              RCALL   SD_EXCHANGE
C:001798 ef0f              SER     DATA
C:001799 d049              RCALL   SD_EXCHANGE
C:00179a c007              RJMP    SD_WAIT_NOTFF
         ;
         ;--------------------------------------
         ;in:    Z
          SD_WR_PGM_6:
C:00179b e012              LDI     TEMP,2
C:00179c dfe9              RCALL   SD_RD_DUMMY
C:00179d e016              LDI     TEMP,6
          SD_WR_PGX:
C:00179e 9105      SDWRP61:LPM     DATA,Z+
C:00179f d043              RCALL   SD_EXCHANGE
C:0017a0 951a              DEC     TEMP
C:0017a1 f7e1              BRNE    SDWRP61
         ; - - - - - - - - - - - - - - - - - - -
         ;out:   DATA
          SD_WAIT_NOTFF:
C:0017a2 ef1f              LDI     TEMP,255
C:0017a3 ef0f      SDWNFF2:SER     DATA
C:0017a4 d03e              RCALL   SD_EXCHANGE
C:0017a5 3f0f              CPI     DATA,$FF
C:0017a6 f411              BRNE    SDWNFF1
C:0017a7 951a              DEC     TEMP
C:0017a8 f7d1              BRNE    SDWNFF2
C:0017a9 9508      SDWNFF1:RET
         ;
         ;--------------------------------------
         ;in:    Z - куда
         ;       X,W - №сектора
         ;out:   sreg.Z - SET==error
          SD_READ_SECTOR:
C:0017aa 9100 0126         LDS     DATA,SD_CARDTYPE
C:0017ac fd02              SBRC    DATA,2
C:0017ad c007              RJMP    SDRDSE1
C:0017ae 0f88              LSL     WL
C:0017af 1f99              ROL     WH
C:0017b0 1faa              ROL     XL
C:0017b1 2fba              MOV     XH,XL
C:0017b2 2fa9              MOV     XL,WH
C:0017b3 2f98              MOV     WH,WL
C:0017b4 2788              CLR     WL
          SDRDSE1:
C:0017b5 ef0f              SER     DATA
C:0017b6 d02c              RCALL   SD_EXCHANGE
C:0017b7 e501              LDI     DATA,$40|17 ;CMD17 (read_single_block)
C:0017b8 d02a              RCALL   SD_EXCHANGE
C:0017b9 2f0b              MOV     DATA,XH
C:0017ba d028              RCALL   SD_EXCHANGE
C:0017bb 2f0a              MOV     DATA,XL
C:0017bc d026              RCALL   SD_EXCHANGE
C:0017bd 2f09              MOV     DATA,WH
C:0017be d024              RCALL   SD_EXCHANGE
C:0017bf 2f08              MOV     DATA,WL
C:0017c0 d022              RCALL   SD_EXCHANGE
C:0017c1 ef0f              SER     DATA
C:0017c2 d020              RCALL   SD_EXCHANGE
         
C:0017c3 ef8f              SER     WL
C:0017c4 dfdd      SDRDSE2:RCALL   SD_WAIT_NOTFF
C:0017c5 958a              DEC     WL
C:0017c6 f0d1              BREQ    SDRDSE8
C:0017c7 3f0e              CPI     DATA,$FE
C:0017c8 f7d9              BRNE    SDRDSE2
         
C:0017c9 934f              PUSH    FLAGS1
C:0017ca ff43              SBRS    FLAGS1,3
C:0017cb c00a              RJMP    SDRDSE5
C:0017cc 7f42              CBR     FLAGS1,0B00001101
C:0017cd 6042              SBR     FLAGS1,0B00000010
C:0017ce   +          PUSHZ
C:0017ce 93ef      PUSH    ZL
C:0017cf 93ff      PUSH    ZH
C:0017d0   +          LDIZ    MSG_TSD_SKIP*2
C:0017d0 e0e6      LDI     ZL,LOW(MSG_TSD_SKIP*2)
C:0017d1 e1f3      LDI     ZH,HIGH(MSG_TSD_SKIP*2)
C:0017d2 940e 14fd         CALL    PRINTSTRZ
C:0017d4   +          POPZ
C:0017d4 91ff      POP     ZH
C:0017d5 91ef      POP     ZL
C:0017d6   +  SDRDSE5:LDIW    512
C:0017d6 e080      LDI     WL,LOW(512)
C:0017d7 e092      LDI     WH,HIGH(512)
C:0017d8 d009      SDRDSE3:RCALL   SD_RECEIVE
C:0017d9 9301              ST      Z+,DATA
C:0017da 9701              SBIW    WL,1
C:0017db f7e1              BRNE    SDRDSE3
C:0017dc 914f              POP     FLAGS1
         
C:0017dd e013              LDI     TEMP,2+1
C:0017de dfa7              RCALL   SD_RD_DUMMY
C:0017df 9498              CLZ
C:0017e0 9508              RET
         ;ошибка при чтении сектора
C:0017e1 9508      SDRDSE8:RET
         ;
         ;--------------------------------------
         ;out:   DATA
          SD_RECEIVE:
C:0017e2 ef0f              SER     DATA
         ; - - - - - - - - - - - - - - - - - - -
         ;in:    DATA
         ;out:   DATA
          SD_EXCHANGE:
C:0017e3 ff43              SBRS    FLAGS1,3
C:0017e4 cf8f              RJMP    FPGA_SAME_REG
         ;То же, что и FPGA_SAME_REG, но с логом в RS-232
         ;in:    DATA == данные
         ;out:   DATA == данные
C:0017e5 934f              PUSH    FLAGS1
C:0017e6 7f4a              CBR     FLAGS1,0B00000101
C:0017e7 6042              SBR     FLAGS1,0B00000010
C:0017e8   +          PUSHZ
C:0017e8 93ef      PUSH    ZL
C:0017e9 93ff      PUSH    ZH
C:0017ea 930f              PUSH    DATA
C:0017eb   +          LDIZ    MSG_TSD_OUT*2
C:0017eb efe2      LDI     ZL,LOW(MSG_TSD_OUT*2)
C:0017ec e1f1      LDI     ZH,HIGH(MSG_TSD_OUT*2)
C:0017ed dd0f              RCALL   PRINTSTRZ
C:0017ee 910f              POP     DATA
C:0017ef 930f              PUSH    DATA
C:0017f0 dd1e              RCALL   HEXBYTE
C:0017f1 910f              POP     DATA
C:0017f2   +          SPICS_CLR
C:0017f2 98c0      CBI     PORTB,0
C:0017f3 b90f              OUT     SPDR,DATA
         ;ожидание окончания обмена с FPGA по SPI
         ;и чтение пришедших данных
         ;out:   DATA == данные
          SD_RDY_RD:
         ;        SBIC    SPSR,WCOL
         ;        JMP     CHAOS00
C:0017f4 9b77              SBIS    SPSR,SPIF
C:0017f5 cffe              RJMP    SD_RDY_RD
C:0017f6 b10f              IN      DATA,SPDR
C:0017f7   +          SPICS_SET
C:0017f7 9ac0      SBI     PORTB,0
C:0017f8 930f              PUSH    DATA
C:0017f9   +          LDIZ    MSG_TSD_IN*2
C:0017f9 efea      LDI     ZL,LOW(MSG_TSD_IN*2)
C:0017fa e1f1      LDI     ZH,HIGH(MSG_TSD_IN*2)
C:0017fb dd01              RCALL   PRINTSTRZ
C:0017fc 910f              POP     DATA
C:0017fd 930f              PUSH    DATA
C:0017fe dd10              RCALL   HEXBYTE
C:0017ff 910f              POP     DATA
C:001800   +          POPZ
C:001800 91ff      POP     ZH
C:001801 91ef      POP     ZL
C:001802 914f              POP     FLAGS1
C:001803 9508              RET
         ;
         ;--------------------------------------
         ;
          ;
          .INCLUDE "_t_zxkbd.asm"
         ;
         ;
         ;
         ;
         ;
         ;     ┌────────────────────────────────────┐
         ;     │      Клавиатура ZX        Джойстик │
         ;     │ ┌─────────────────────┐            │
         ;     │ │ 1 2 3 4 5 6 7 8 9 0 │  ┌───────┐ │
         ;     │ │ Q W E R T Y U I O P │  │      │ │
         ;     │ │ A S D F G H J K L e │  │ < F > │ │
         ;     │ │ c Z X C V B N M s s │  │      │ │
         ;     │ └─────────────────────┘  └───────┘ │
         ;     │    ┌───────────┐   ┌──────────┐    │
         ;     │    │ SoftReset │   │ TurboKey │    │
         ;     │    └───────────┘   └──────────┘    │
         ;     └────────────────────────────────────┘
         ;
         ;
         ;
         ;    03 11 19 27 35 36 28 20 12 04
         ;    02 10 18 26 34 37 29 21 13 05      43
         ;    01 09 17 25 33 38 30 22 14 06   41 44 40
         ;    00 08 16 24 32 39 31 23 15 07      42
         ;
         ;               46               45
         ;
         ;--------------------------------------
         ;
          TESTZXKEYB:
         
C:001804   +          LDIZ    WIND_T_ZXKBD_1*2
C:001804 ebec      LDI     ZL,LOW(WIND_T_ZXKBD_1*2)
C:001805 e3f1      LDI     ZH,HIGH(WIND_T_ZXKBD_1*2)
C:001806 dd74              RCALL   WINDOW
C:001807   +          LDIZ    WIND_T_ZXKBD_2*2
C:001807 ece2      LDI     ZL,LOW(WIND_T_ZXKBD_2*2)
C:001808 e3f1      LDI     ZH,HIGH(WIND_T_ZXKBD_2*2)
C:001809 dd71              RCALL   WINDOW
C:00180a   +          LDIZ    WIND_T_ZXKBD_3*2
C:00180a ece8      LDI     ZL,LOW(WIND_T_ZXKBD_3*2)
C:00180b e3f1      LDI     ZH,HIGH(WIND_T_ZXKBD_3*2)
C:00180c dd6e              RCALL   WINDOW
C:00180d   +          LDIZ    WIND_T_ZXKBD_4*2
C:00180d ecee      LDI     ZL,LOW(WIND_T_ZXKBD_4*2)
C:00180e e3f1      LDI     ZH,HIGH(WIND_T_ZXKBD_4*2)
C:00180f dd6b              RCALL   WINDOW
C:001810   +          LDIZ    WIND_T_ZXKBD_5*2
C:001810 ede4      LDI     ZL,LOW(WIND_T_ZXKBD_5*2)
C:001811 e3f1      LDI     ZH,HIGH(WIND_T_ZXKBD_5*2)
C:001812 dd68              RCALL   WINDOW
         
C:001813   +          LDIZ    MLMSG_TZXK_1*2
C:001813 e1e0      LDI     ZL,LOW(MLMSG_TZXK_1*2)
C:001814 e0f8      LDI     ZH,HIGH(MLMSG_TZXK_1*2)
C:001815 deff              RCALL   SCR_PRINTMLSTR
C:001816   +          LDIZ    MSG_TZXK_2*2
C:001816 e4ea      LDI     ZL,LOW(MSG_TZXK_2*2)
C:001817 e0f8      LDI     ZH,HIGH(MSG_TZXK_2*2)
C:001818 df01              RCALL   SCR_PRINTSTRZ
         
C:001819   +          LDIZ    MEGABUFFER+48
C:001819 e3e0      LDI     ZL,LOW(MEGABUFFER+48)
C:00181a e0f8      LDI     ZH,HIGH(MEGABUFFER+48)
C:00181b 92f2      T_ZXK03:ST      -Z,NULL
C:00181c 23ee              TST     ZL
C:00181d f7e9              BRNE    T_ZXK03
         
C:00181e bafa              OUT     DDRA,NULL
C:00181f badb              OUT     PORTA,FF
C:001820 baf4              OUT     DDRC,NULL
C:001821 baf5              OUT     PORTC,NULL
         ;
C:001822   +  T_ZXK10:LDIZ    MEGABUFFER
C:001822 e0e0      LDI     ZL,LOW(MEGABUFFER)
C:001823 e0f8      LDI     ZH,HIGH(MEGABUFFER)
C:001824 9aa0              SBI     DDRC,0
C:001825 d0a9              RCALL   T_ZXK80
C:001826 98a0              CBI     DDRC,0
C:001827 9aa1              SBI     DDRC,1
C:001828 d0a6              RCALL   T_ZXK80
C:001829 98a1              CBI     DDRC,1
C:00182a 9aa2              SBI     DDRC,2
C:00182b d0a3              RCALL   T_ZXK80
C:00182c 98a2              CBI     DDRC,2
C:00182d 9aa3              SBI     DDRC,3
C:00182e d0a0              RCALL   T_ZXK80
C:00182f 98a3              CBI     DDRC,3
C:001830 9aa4              SBI     DDRC,4
C:001831 d09d              RCALL   T_ZXK80
C:001832 98a4              CBI     DDRC,4
         
C:001833   +          INPORT  DATA,PING
C:001833 9100 0063 LDS     DATA,PING+$20*(PING<$40)
C:001835 e025              LDI     COUNT,5
C:001836 d09d              RCALL   T_ZXK82
         
C:001837 b303              IN      DATA,PINC
C:001838 1f00              ROL     DATA
C:001839 1f00              ROL     DATA
C:00183a 1f00              ROL     DATA
C:00183b e022              LDI     COUNT,2
C:00183c d097              RCALL   T_ZXK82
         ;
C:00183d   +          LDIZ    MEGABUFFER
C:00183d e0e0      LDI     ZL,LOW(MEGABUFFER)
C:00183e e0f8      LDI     ZH,HIGH(MEGABUFFER)
C:00183f e0ab              LDI     XL,11
C:001840 e0b9              LDI     XH,9
C:001841 dec6              RCALL   SCR_SET_CURSOR
C:001842 8103              LDD     DATA,Z+3
C:001843 d07f              RCALL   T_ZXK70
C:001844 8503              LDD     DATA,Z+11
C:001845 d07d              RCALL   T_ZXK70
C:001846 8903              LDD     DATA,Z+19
C:001847 d07b              RCALL   T_ZXK70
C:001848 8d03              LDD     DATA,Z+27
C:001849 d079              RCALL   T_ZXK70
C:00184a a103              LDD     DATA,Z+35
C:00184b d077              RCALL   T_ZXK70
C:00184c a104              LDD     DATA,Z+36
C:00184d d075              RCALL   T_ZXK70
C:00184e 8d04              LDD     DATA,Z+28
C:00184f d073              RCALL   T_ZXK70
C:001850 8904              LDD     DATA,Z+20
C:001851 d071              RCALL   T_ZXK70
C:001852 8504              LDD     DATA,Z+12
C:001853 d06f              RCALL   T_ZXK70
C:001854 8104              LDD     DATA,Z+4
C:001855 d06d              RCALL   T_ZXK70
         
C:001856 e0ab              LDI     XL,11
C:001857 e0ba              LDI     XH,10
C:001858 deaf              RCALL   SCR_SET_CURSOR
C:001859 8102              LDD     DATA,Z+2
C:00185a d068              RCALL   T_ZXK70
C:00185b 8502              LDD     DATA,Z+10
C:00185c d066              RCALL   T_ZXK70
C:00185d 8902              LDD     DATA,Z+18
C:00185e d064              RCALL   T_ZXK70
C:00185f 8d02              LDD     DATA,Z+26
C:001860 d062              RCALL   T_ZXK70
C:001861 a102              LDD     DATA,Z+34
C:001862 d060              RCALL   T_ZXK70
C:001863 a105              LDD     DATA,Z+37
C:001864 d05e              RCALL   T_ZXK70
C:001865 8d05              LDD     DATA,Z+29
C:001866 d05c              RCALL   T_ZXK70
C:001867 8905              LDD     DATA,Z+21
C:001868 d05a              RCALL   T_ZXK70
C:001869 8505              LDD     DATA,Z+13
C:00186a d058              RCALL   T_ZXK70
C:00186b 8105              LDD     DATA,Z+5
C:00186c d056              RCALL   T_ZXK70
         
C:00186d e0ab              LDI     XL,11
C:00186e e0bb              LDI     XH,11
C:00186f de98              RCALL   SCR_SET_CURSOR
C:001870 8101              LDD     DATA,Z+1
C:001871 d051              RCALL   T_ZXK70
C:001872 8501              LDD     DATA,Z+9
C:001873 d04f              RCALL   T_ZXK70
C:001874 8901              LDD     DATA,Z+17
C:001875 d04d              RCALL   T_ZXK70
C:001876 8d01              LDD     DATA,Z+25
C:001877 d04b              RCALL   T_ZXK70
C:001878 a101              LDD     DATA,Z+33
C:001879 d049              RCALL   T_ZXK70
C:00187a a106              LDD     DATA,Z+38
C:00187b d047              RCALL   T_ZXK70
C:00187c 8d06              LDD     DATA,Z+30
C:00187d d045              RCALL   T_ZXK70
C:00187e 8906              LDD     DATA,Z+22
C:00187f d043              RCALL   T_ZXK70
C:001880 8506              LDD     DATA,Z+14
C:001881 d041              RCALL   T_ZXK70
C:001882 8106              LDD     DATA,Z+6
C:001883 d03f              RCALL   T_ZXK70
         
C:001884 e0ab              LDI     XL,11
C:001885 e0bc              LDI     XH,12
C:001886 de81              RCALL   SCR_SET_CURSOR
C:001887 8100              LDD     DATA,Z+0
C:001888 d03a              RCALL   T_ZXK70
C:001889 8500              LDD     DATA,Z+8
C:00188a d038              RCALL   T_ZXK70
C:00188b 8900              LDD     DATA,Z+16
C:00188c d036              RCALL   T_ZXK70
C:00188d 8d00              LDD     DATA,Z+24
C:00188e d034              RCALL   T_ZXK70
C:00188f a100              LDD     DATA,Z+32
C:001890 d032              RCALL   T_ZXK70
C:001891 a107              LDD     DATA,Z+39
C:001892 d030              RCALL   T_ZXK70
C:001893 8d07              LDD     DATA,Z+31
C:001894 d02e              RCALL   T_ZXK70
C:001895 8907              LDD     DATA,Z+23
C:001896 d02c              RCALL   T_ZXK70
C:001897 8507              LDD     DATA,Z+15
C:001898 d02a              RCALL   T_ZXK70
C:001899 8107              LDD     DATA,Z+7
C:00189a d028              RCALL   T_ZXK70
         
C:00189b e2a6              LDI     XL,38
C:00189c e0ba              LDI     XH,10
C:00189d de6a              RCALL   SCR_SET_CURSOR
C:00189e a503              LDD     DATA,Z+43
C:00189f d023              RCALL   T_ZXK70
C:0018a0 e2a4              LDI     XL,36
C:0018a1 e0bb              LDI     XH,11
C:0018a2 de65              RCALL   SCR_SET_CURSOR
C:0018a3 a501              LDD     DATA,Z+41
C:0018a4 d01e              RCALL   T_ZXK70
C:0018a5 a504              LDD     DATA,Z+44
C:0018a6 d01c              RCALL   T_ZXK70
C:0018a7 a500              LDD     DATA,Z+40
C:0018a8 d01a              RCALL   T_ZXK70
C:0018a9 e2a6              LDI     XL,38
C:0018aa e0bc              LDI     XH,12
C:0018ab de5c              RCALL   SCR_SET_CURSOR
C:0018ac a502              LDD     DATA,Z+42
C:0018ad d015              RCALL   T_ZXK70
         
C:0018ae e0ae              LDI     XL,14
C:0018af e0bf              LDI     XH,15
C:0018b0 de57              RCALL   SCR_SET_CURSOR
C:0018b1 a506              LDD     DATA,Z+46
C:0018b2 e029              LDI     COUNT,9
C:0018b3 d010              RCALL   T_ZXK72
         
C:0018b4 e1ae              LDI     XL,30
C:0018b5 e0bf              LDI     XH,15
C:0018b6 de51              RCALL   SCR_SET_CURSOR
C:0018b7 a505              LDD     DATA,Z+45
C:0018b8 e028              LDI     COUNT,8
C:0018b9 d00a              RCALL   T_ZXK72
         
C:0018ba 940e 0ffc         CALL    INKEY
C:0018bc f011              BREQ    T_ZXK11
C:0018bd 3706              CPI     DATA,KEY_ESC
C:0018be f009              BREQ    T_ZXK99
C:0018bf cf62      T_ZXK11:RJMP    T_ZXK10
         
C:0018c0 baf4      T_ZXK99:OUT     DDRC,NULL
C:0018c1 baf5              OUT     PORTC,NULL
C:0018c2 9508              RET
         ;
         ;
C:0018c3 e021      T_ZXK70:LDI     COUNT,1
C:0018c4 ed1f      T_ZXK72:LDI     TEMP,$DF
C:0018c5 7003              ANDI    DATA,$03
C:0018c6 f021              BREQ    T_ZXK71
C:0018c7 ea1e              LDI     TEMP,$AE
C:0018c8 3003              CPI     DATA,$03
C:0018c9 f009              BREQ    T_ZXK71
C:0018ca ed11              LDI     TEMP,$D1
C:0018cb de85      T_ZXK71:RCALL   SCR_FILL_ATTR
C:0018cc ed1f              LDI     TEMP,$DF
C:0018cd e021              LDI     COUNT,1
C:0018ce ce82              RJMP    SCR_FILL_ATTR
         ;
         ;
C:0018cf 2700      T_ZXK80:CLR     DATA
C:0018d0 950a      T_ZXK83:DEC     DATA
C:0018d1 f7f1              BRNE    T_ZXK83
C:0018d2 b309              IN      DATA,PINA
C:0018d3 e028              LDI     COUNT,8
C:0018d4 8110      T_ZXK82:LD      TEMP,Z
C:0018d5 7f1e              ANDI    TEMP,$FE
C:0018d6 9507              ROR     DATA
C:0018d7 f008              BRCS    T_ZXK81
C:0018d8 6013              ORI     TEMP,$03
C:0018d9 9311      T_ZXK81:ST      Z+,TEMP
C:0018da 952a              DEC     COUNT
C:0018db f7c1              BRNE    T_ZXK82
C:0018dc 9498              CLZ
C:0018dd 9508      T_ZXK89:RET
         ;
         ;--------------------------------------
         ;
          WIND_T_ZXKBD_1:
                  .DB      7, 6,38,12,$DF,1
C:0018DE 0706260CDF01
          WIND_T_ZXKBD_2:
                  .DB      9, 8,23, 6,$DF,0
C:0018E1 09081706DF00
          WIND_T_ZXKBD_3:
                  .DB     34, 9, 9, 5,$DF,0
C:0018E4 22090905DF00
          WIND_T_ZXKBD_4:
                  .DB     12,14,13, 3,$DF,0
C:0018E7 0C0E0D03DF00
          WIND_T_ZXKBD_5:
                  .DB     28,14,12, 3,$DF,0
C:0018EA 1C0E0C03DF00
         ;
         ;--------------------------------------
         ;
          ;
          .INCLUDE "_t_beep.asm"
          .EQU    TBEEP_N =0
         ;
         ;--------------------------------------
         ;
          .DSEG
D:000122    T_BEEP_PTR:     .BYTE   2
D:000124    T_BEEP_DELTA:   .BYTE   2
          .CSEG
         ;
         ;┌──────────────────────────────┐
         ;│                              │
         ;│           12345 Гц           │
         ;│                              │
         ;│ <>, <> - изменение частоты │
         ;└──────────────────────────────┘
         ;
         ;--------------------------------------
         ;
          TESTBEEP:
C:0018ed   +          GETMEM  1
C:0018ed 9721      SBIW    YL,1
         
C:0018ee   +          LDIZ    WIND_T_BEEP*2
C:0018ee ebec      LDI     ZL,LOW(WIND_T_BEEP*2)
C:0018ef e3f2      LDI     ZH,HIGH(WIND_T_BEEP*2)
C:0018f0 940e 157b         CALL    WINDOW
C:0018f2   +          LDIZ    MLMSG_TBEEP*2
C:0018f2 ece4      LDI     ZL,LOW(MLMSG_TBEEP*2)
C:0018f3 e0f7      LDI     ZH,HIGH(MLMSG_TBEEP*2)
C:0018f4 940e 1715         CALL    SCR_PRINTMLSTR
         
C:0018f6 e001              LDI     DATA,0B00000001
C:0018f7 e514              LDI     TEMP,INT_CONTROL
C:0018f8 940e 176f         CALL    FPGA_REG
         
C:0018fa e007              LDI     DATA,7
          T_BEEP_NEWFREQ:
C:0018fb   +          STH     TBEEP_N,DATA
C:0018fb 8308      STD     Y+TBEEP_N,DATA
C:0018fc e1a4              LDI     XL,20
C:0018fd e0ba              LDI     XH,10
C:0018fe 940e 1708         CALL    SCR_SET_CURSOR
C:001900   +          LDH     DATA,TBEEP_N
C:001900 8108      LDD     DATA,Y+TBEEP_N
C:001901 0f00              LSL     DATA
C:001902 0f00              LSL     DATA
C:001903   +          LDIZ    T_BEEP_FREQTAB*2
C:001903 ece2      LDI     ZL,LOW(T_BEEP_FREQTAB*2)
C:001904 e3f2      LDI     ZH,HIGH(T_BEEP_FREQTAB*2)
C:001905 0fe0              ADD     ZL,DATA
C:001906 1dff              ADC     ZH,NULL
C:001907 91a5              LPM     XL,Z+
C:001908 91b5              LPM     XH,Z+
C:001909   +          PUSHZ
C:001909 93ef      PUSH    ZL
C:00190a 93ff      PUSH    ZH
C:00190b 940e 1522         CALL    DECWORD
C:00190d   +          POPZ
C:00190d 91ff      POP     ZH
C:00190e 91ef      POP     ZL
C:00190f 9105              LPM     DATA,Z+
C:001910 9300 0124         STS     T_BEEP_DELTA+0,DATA
C:001912 9105              LPM     DATA,Z+
C:001913 9300 0125         STS     T_BEEP_DELTA+1,DATA
C:001915 e513              LDI     TEMP,COVOX
          .ENDIF
C:001916   +          SPICS_SET
C:001916 9ac0      SBI     PORTB,0
C:001917 b91f              OUT     SPDR,TEMP
C:001918 940e 1776         CALL    FPGA_RDY_RD
                 ;теперь ничего не выводить в FPGA (не менять текущий регистр) !
          T_BEEP_WAITKEY:
C:00191a e001              LDI     DATA,0B00000001
C:00191b 2ec0              MOV     INT6VECT,DATA
C:00191c 940e 0fef         CALL    WAITKEY
C:00191e 24cc              CLR     INT6VECT
         
C:00191f 3706              CPI     DATA,KEY_ESC
C:001920 f079              BREQ    T_BEEP_ESCAPE
C:001921 3705              CPI     DATA,KEY_UP
C:001922 f019              BREQ    T_BEEP_UP
C:001923 3702              CPI     DATA,KEY_DOWN
C:001924 f031              BREQ    T_BEEP_DOWN
C:001925 cff4              RJMP    T_BEEP_WAITKEY
         
          T_BEEP_UP:
C:001926   +          LDH     DATA,TBEEP_N
C:001926 8108      LDD     DATA,Y+TBEEP_N
C:001927 300e              CPI     DATA,14
C:001928 f788              BRCC    T_BEEP_WAITKEY
C:001929 9503              INC     DATA
C:00192a cfd0              RJMP    T_BEEP_NEWFREQ
         
          T_BEEP_DOWN:
C:00192b   +          LDH     DATA,TBEEP_N
C:00192b 8108      LDD     DATA,Y+TBEEP_N
C:00192c 2300              TST     DATA
C:00192d f361              BREQ    T_BEEP_WAITKEY
C:00192e 950a              DEC     DATA
C:00192f cfcb              RJMP    T_BEEP_NEWFREQ
         
          T_BEEP_ESCAPE:
C:001930 e000              LDI     DATA,0B00000000
C:001931 e514              LDI     TEMP,INT_CONTROL
C:001932 940e 176f         CALL    FPGA_REG
         
C:001934   +          FREEMEM 1
C:001934 9621      ADIW    YL,1
C:001935 9508              RET
         ;
         ;--------------------------------------
         ;
          T_BEEP_INT:
C:001936 930f              PUSH    DATA
C:001937 93bf              PUSH    XH
C:001938   +          PUSHW
C:001938 938f      PUSH    WL
C:001939 939f      PUSH    WH
C:00193a   +          PUSHZ
C:00193a 93ef      PUSH    ZL
C:00193b 93ff      PUSH    ZH
C:00193c efff              LDI     ZH,HIGH(TABL_SINUS*2)
C:00193d 91b0 0122         LDS     XH,T_BEEP_PTR+0
C:00193f 91e0 0123         LDS     ZL,T_BEEP_PTR+1
C:001941   +          LDSW    T_BEEP_DELTA
C:001941 9180 0124 LDS     WL,T_BEEP_DELTA
C:001943 9190 0125 LDS     WH,T_BEEP_DELTA+1
         
          T_BEEP_IN1:
C:001945 0fb8              ADD     XH,WL
C:001946 1fe9              ADC     ZL,WH
C:001947 9104              LPM     DATA,Z
C:001948   +          SPICS_CLR
C:001948 98c0      CBI     PORTB,0
C:001949 b90f              OUT     SPDR,DATA
          T_BEEP_IN2:
C:00194a 9b77              SBIS    SPSR,SPIF
C:00194b cffe              RJMP    T_BEEP_IN2
C:00194c b10f              IN      DATA,SPDR
C:00194d   +          SPICS_SET
C:00194d 9ac0      SBI     PORTB,0
C:00194e 300c              CPI     DATA,12
C:00194f f3a8              BRCS    T_BEEP_IN1
         
C:001950 93b0 0122         STS     T_BEEP_PTR+0,XH
C:001952 93e0 0123         STS     T_BEEP_PTR+1,ZL
C:001954   +          POPZ
C:001954 91ff      POP     ZH
C:001955 91ef      POP     ZL
C:001956   +          POPW
C:001956 919f      POP     WH
C:001957 918f      POP     WL
C:001958 91bf              POP     XH
C:001959 e400              LDI     DATA,(1<<INT6)
C:00195a   +          OUTPORT EIFR,DATA
C:00195a 9300 0058 STS     EIFR+$20*(EIFR<$40),DATA
C:00195c 910f              POP     DATA
C:00195d 9508              RET
         ;
         ;--------------------------------------
         ;
          WIND_T_BEEP:
                  .DB     8,8,32,6,$DF,$01
C:00195E 08082006DF01
         ;
          T_BEEP_FREQTAB:
                  .DW        75,     45
C:001961 004b
                  .DW       107,     64
C:001963 006b
                  .DW       152,     91
C:001965 0098
                  .DW       214,    128
C:001967 00d6
                  .DW       302,    181
C:001969 012e
                  .DW       427,    256
C:00196b 01ab
                  .DW       604,    362
C:00196d 025c
                  .DW       854,    512
C:00196f 0356
                  .DW      1208,    724
C:001971 04b8
                  .DW      1709,   1024
C:001973 06ad
                  .DW      2417,   1448
C:001975 0971
                  .DW      3418,   2048
C:001977 0d5a
                  .DW      4833,   2896
C:001979 12e1
                  .DW      6836,   4096
C:00197b 1ab4
                  .DW      9668,   5793
C:00197d 25c4
         ;
         ;--------------------------------------
         ;
          ;
          .INCLUDE "_sd_fat.asm"
         ;
          .DSEG
D:000126    SD_CARDTYPE:    .BYTE   1       ;.0-SDv1; .1-SDv2; .2-SDv2HC; .4-MMC
         ;       на данный момент имеет значение только это ^^^^^^^^^
         ;
D:000127    FAT_CAL_FAT:    .BYTE   1       ;тип обнаруженной FAT
D:000128    FAT_MANYFAT:    .BYTE   1       ;количество FAT-таблиц
D:000129    FAT_BYTSSEC:    .BYTE   1       ;количество секторов в кластере
D:00012a    FAT_ROOTCLS:    .BYTE   4       ;КЛАСТЕР начала root директории
D:00012e    FAT_SEC_FAT:    .BYTE   4       ;количество секторов одной FAT
D:000132    FAT_RSVDSEC:    .BYTE   2       ;размер резервной области
D:000134    FAT_STARTRZ:    .BYTE   4       ;начало диска/раздела
D:000138    FAT_FRSTDAT:    .BYTE   4       ;адрес первого сектора данных от BPB
D:00013c    FAT_SEC_DSC:    .BYTE   4       ;количество секторов на диске/разделе
D:000140    FAT_CLS_DSC:    .BYTE   4       ;количество кластеров на диске/разделе
D:000144    FAT_FATSTR0:    .BYTE   4       ;начало первой FAT таблицы
D:000148    FAT_FATSTR1:    .BYTE   4       ;начало второй FAT таблицы
D:00014c    FAT_TEK_DIR:    .BYTE   4       ;кластер текущей директории
D:000150    FAT_KCLSDIR:    .BYTE   1       ;кол-во кластеров директории
D:000151    FAT_NUMSECK:    .BYTE   1       ;счетчик секторов в кластере
D:000152    FAT_TFILCLS:    .BYTE   4       ;текущий кластер
D:000156    FAT_MPHWOST:    .BYTE   1       ;кол-во секторов в последнем кластере
D:000157    FAT_KOL_CLS:    .BYTE   4       ;кол-во кластеров файла минус 1
D:00015b    FAT_LASTSECFLAG:.BYTE   1
D:00015c    FAT_ERRHANDLER: .BYTE   2
D:00015e    FAT_LST0ZAP:    .BYTE   4
          .CSEG
         ;
          CMD00:  .DB     $40,$00,$00,$00,$00,$95
C:00197F 400000000095
          CMD08:  .DB     $48,$00,$00,$01,$AA,$87
C:001982 48000001AA87
          CMD16:  .DB     $50,$00,$00,$02,$00,$FF
C:001985 5000000200FF
         ;
         ;инициализация SD карточки
         ;out:   XW == номер кластера root-директории
          SD_FAT_INIT:
C:001988   +          STSZ    FAT_ERRHANDLER
C:001988 93e0 015c STS     FAT_ERRHANDLER,ZL
C:00198a 93f0 015d STS     FAT_ERRHANDLER+1,ZH
         
C:00198c ea12              LDI     TEMP,SD_CS1
C:00198d ef0f              SER     DATA
C:00198e 940e 176f         CALL    FPGA_REG
C:001990 e210              LDI     TEMP,32
C:001991 ddf4              RCALL   SD_RD_DUMMY
         
C:001992 ea11              LDI     TEMP,SD_CS0
C:001993 ef0f              SER     DATA
C:001994 940e 176f         CALL    FPGA_REG
C:001996 ef2f              SER     COUNT
C:001997   +  SDINIT1:LDIZ    CMD00*2     ;CMD0 (go_idle_state)
C:001997 efee      LDI     ZL,LOW(CMD00*2)
C:001998 e3f2      LDI     ZH,HIGH(CMD00*2)
C:001999 de01              RCALL   SD_WR_PGM_6
C:00199a 952a              DEC     COUNT
C:00199b f411              BRNE    SDINIT2
C:00199c e001              LDI     DATA,1  ;нет карты
C:00199d c19a              RJMP    SD_ERROR
C:00199e 3001      SDINIT2:CPI     DATA,$01
C:00199f f7b9              BRNE    SDINIT1
         
C:0019a0   +          LDIZ    CMD08*2     ;CMD8 (send_if_cond)
C:0019a0 e0e4      LDI     ZL,LOW(CMD08*2)
C:0019a1 e3f3      LDI     ZH,HIGH(CMD08*2)
C:0019a2 ddf8              RCALL   SD_WR_PGM_6
C:0019a3 e080              LDI     WL,$00
C:0019a4 ff02              SBRS    DATA,2
C:0019a5 e480              LDI     WL,$40
C:0019a6 e014              LDI     TEMP,4
C:0019a7 ddde              RCALL   SD_RD_DUMMY
         
C:0019a8 e707      SDINIT3:LDI     DATA,$40+55 ;CMD55
C:0019a9 dde1              RCALL   SD_WR_CMD
C:0019aa e012              LDI     TEMP,2
C:0019ab ddda              RCALL   SD_RD_DUMMY
C:0019ac e609              LDI     DATA,$40+41 ;ACMD41 (sd_send_op_cond)
C:0019ad de35              RCALL   SD_EXCHANGE
C:0019ae 2f08              MOV     DATA,WL
C:0019af de33              RCALL   SD_EXCHANGE
C:0019b0 dde1              RCALL   SD_WR_CMX4
C:0019b1 2300              TST     DATA
C:0019b2 f051              BREQ    SDINIT5
C:0019b3 ff02              SBRS    DATA,2
C:0019b4 cff3              RJMP    SDINIT3
         
C:0019b5 e401      SDINIT4:LDI     DATA,$40+1  ;CMD1 (send_op_cond)
C:0019b6 ddd4              RCALL   SD_WR_CMD
C:0019b7 2300              TST     DATA
C:0019b8 f7e1              BRNE    SDINIT4
C:0019b9 d14f              RCALL   SD_CRC_OFF
C:0019ba d153              RCALL   SD_SETBLKLEN
C:0019bb e110              LDI     TEMP,0B00010000
C:0019bc c00f              RJMP    SDINIT9
         
C:0019bd d14b      SDINIT5:RCALL   SD_CRC_OFF
C:0019be d14f              RCALL   SD_SETBLKLEN
         
C:0019bf e011              LDI     TEMP,0B00000001
C:0019c0 2388              TST     WL
C:0019c1 f051              BREQ    SDINIT9
C:0019c2 e70a              LDI     DATA,$40+58 ;CMD58 (read_ocr)
C:0019c3 ddc7              RCALL   SD_WR_CMD
C:0019c4 de1d              RCALL   SD_RECEIVE
C:0019c5 930f              PUSH    DATA
C:0019c6 e015              LDI     TEMP,3+2
C:0019c7 ddbe              RCALL   SD_RD_DUMMY
C:0019c8 910f              POP     DATA
C:0019c9 e012              LDI     TEMP,0B00000010
C:0019ca fd06              SBRC    DATA,6
C:0019cb e016              LDI     TEMP,0B00000110
C:0019cc 9310 0126 SDINIT9:STS     SD_CARDTYPE,TEMP
         ;
         ; - - - - - - - - - - - - - - - - - - -
         ;поиск FAT, инициализация переменных
C:0019ce   +  WC_FAT: LDIZ    FAT_LST0ZAP
C:0019ce e5ee      LDI     ZL,LOW(FAT_LST0ZAP)
C:0019cf e0f1      LDI     ZH,HIGH(FAT_LST0ZAP)
C:0019d0 92d1              ST      Z+,FF
C:0019d1 92d1              ST      Z+,FF
C:0019d2 92d1              ST      Z+,FF
C:0019d3 82d0              ST      Z,FF
C:0019d4   +          LDIW    0
C:0019d4 e080      LDI     WL,LOW(0)
C:0019d5 e090      LDI     WH,HIGH(0)
C:0019d6   +          LDIX    0
C:0019d6 e0a0      LDI     XL,LOW(0)
C:0019d7 e0b0      LDI     XH,HIGH(0)
C:0019d8 d164              RCALL   LOADLST
C:0019d9 d13a              RCALL   FAT_CHKSIGN
C:0019da f011              BREQ    WC_FAT1
C:0019db e003      SDERR3: LDI     DATA,3  ;не найдена FAT
C:0019dc c15b              RJMP    SD_ERROR
C:0019dd ebee      WC_FAT1:LDI     ZL,$BE
C:0019de 8100              LD      DATA,Z
C:0019df 770f              ANDI    DATA,$7F
C:0019e0 f4a1              BRNE    RDFAT05
C:0019e1 ece2              LDI     ZL,$C2
C:0019e2 8100              LD      DATA,Z
C:0019e3 3001              CPI     DATA,$01
C:0019e4 f051              BREQ    RDFAT06
C:0019e5 3004              CPI     DATA,$04
C:0019e6 f041              BREQ    RDFAT06
C:0019e7 3006              CPI     DATA,$06
C:0019e8 f031              BREQ    RDFAT06
C:0019e9 300b              CPI     DATA,$0B
C:0019ea f021              BREQ    RDFAT06
C:0019eb 300c              CPI     DATA,$0C
C:0019ec f011              BREQ    RDFAT06
C:0019ed 300e              CPI     DATA,$0E
C:0019ee f431              BRNE    RDFAT05
C:0019ef ece6      RDFAT06:LDI     ZL,$C6
C:0019f0 9181              LD      WL,Z+
C:0019f1 9191              LD      WH,Z+
C:0019f2 91a1              LD      XL,Z+
C:0019f3 81b0              LD      XH,Z
C:0019f4 c02c              RJMP    RDFAT00
C:0019f5   +  RDFAT05:LDIZ    BUF4FAT
C:0019f5 e0e0      LDI     ZL,LOW(BUF4FAT)
C:0019f6 e0f6      LDI     ZH,HIGH(BUF4FAT)
C:0019f7 8535              LDD     BITS,Z+13       ;BPB_SecPerClus
C:0019f8 e000              LDI     DATA,0
C:0019f9 e010              LDI     TEMP,0
C:0019fa e028              LDI     COUNT,8
C:0019fb 9537      RDF051: ROR     BITS
C:0019fc 1d0f              ADC     DATA,NULL
C:0019fd 952a              DEC     COUNT
C:0019fe f7e1              BRNE    RDF051
C:0019ff 950a              DEC     DATA
C:001a00 f409              BRNE    RDF052
C:001a01 9513              INC     TEMP
C:001a02 8506      RDF052: LDD     DATA,Z+14       ;BPB_RsvdSecCnt
C:001a03 8407              LDD     R0,Z+15         ;BPB_RsvdSecCnt
C:001a04 2900              OR      DATA,R0
C:001a05 f009              BREQ    RDF053
C:001a06 9513              INC     TEMP
C:001a07 8903      RDF053: LDD     DATA,Z+19       ;BPB_TotSec16
C:001a08 8804              LDD     R0,Z+20         ;BPB_TotSec16
C:001a09 2900              OR      DATA,R0
C:001a0a f409              BRNE    RDF054
C:001a0b 9513              INC     TEMP
C:001a0c a100      RDF054: LDD     DATA,Z+32       ;BPB_TotSec32
C:001a0d a001              LDD     R0,Z+33         ;BPB_TotSec32
C:001a0e 2900              OR      DATA,R0
C:001a0f a002              LDD     R0,Z+34         ;BPB_TotSec32
C:001a10 2900              OR      DATA,R0
C:001a11 a003              LDD     R0,Z+35         ;BPB_TotSec32
C:001a12 2900              OR      DATA,R0
C:001a13 f409              BRNE    RDF055
C:001a14 9513              INC     TEMP
C:001a15 8905      RDF055: LDD     DATA,Z+21       ;BPB_Media
C:001a16 7f00              ANDI    DATA,$F0
C:001a17 3f00              CPI     DATA,$F0
C:001a18 f409              BRNE    RDF056
C:001a19 9513              INC     TEMP
C:001a1a 3014      RDF056: CPI     TEMP,4
C:001a1b f009              BREQ    RDF057
C:001a1c cfbe              RJMP    SDERR3
         ;
C:001a1d   +  RDF057: LDIW    0
C:001a1d e080      LDI     WL,LOW(0)
C:001a1e e090      LDI     WH,HIGH(0)
C:001a1f   +          LDIX    0
C:001a1f e0a0      LDI     XL,LOW(0)
C:001a20 e0b0      LDI     XH,HIGH(0)
C:001a21   +  RDFAT00:STSW    FAT_STARTRZ+0
C:001a21 9380 0134 STS     FAT_STARTRZ+0,WL
C:001a23 9390 0135 STS     FAT_STARTRZ+0+1,WH
C:001a25   +          STSX    FAT_STARTRZ+2
C:001a25 93a0 0136 STS     FAT_STARTRZ+2,XL
C:001a27 93b0 0137 STS     FAT_STARTRZ+2+1,XH
C:001a29 d113              RCALL   LOADLST
C:001a2a d0e9              RCALL   FAT_CHKSIGN
C:001a2b f009              BREQ    RDF011
C:001a2c cfae              RJMP    SDERR3
C:001a2d   +  RDF011: LDIZ    BUF4FAT
C:001a2d e0e0      LDI     ZL,LOW(BUF4FAT)
C:001a2e e0f6      LDI     ZH,HIGH(BUF4FAT)
C:001a2f 8503              LDD     DATA,Z+11       ;BPB_BytsPerSec
C:001a30 2300              TST     DATA
C:001a31 f419              BRNE    SDERR4
C:001a32 8504              LDD     DATA,Z+12       ;BPB_BytsPerSec
C:001a33 3002              CPI     DATA,$02
C:001a34 f011              BREQ    RDF012
C:001a35 e004      SDERR4: LDI     DATA,4  ;ошибка FAT (сектор не 512 байт)
C:001a36 c101              RJMP    SD_ERROR
C:001a37   +  RDF012: LDIX    0
C:001a37 e0a0      LDI     XL,LOW(0)
C:001a38 e0b0      LDI     XH,HIGH(0)
C:001a39 8986              LDD     WL,Z+22         ;BPB_FATSz16
C:001a3a 8997              LDD     WH,Z+23         ;BPB_FATSz16
C:001a3b 2f09              MOV     DATA,WH
C:001a3c 2b08              OR      DATA,WL
C:001a3d f421              BRNE    RDFAT01         ;если BPB_FATSz16==0 то берем BPB_FATSz32
C:001a3e a184              LDD     WL,Z+36         ;BPB_FATSz32
C:001a3f a195              LDD     WH,Z+37         ;BPB_FATSz32
C:001a40 a1a6              LDD     XL,Z+38         ;BPB_FATSz32
C:001a41 a1b7              LDD     XH,Z+39         ;BPB_FATSz32
C:001a42   +  RDFAT01:STSW    FAT_SEC_FAT+0
C:001a42 9380 012e STS     FAT_SEC_FAT+0,WL
C:001a44 9390 012f STS     FAT_SEC_FAT+0+1,WH
C:001a46   +          STSX    FAT_SEC_FAT+2   ;число секторов на FAT-таблицу
C:001a46 93a0 0130 STS     FAT_SEC_FAT+2,XL
C:001a48 93b0 0131 STS     FAT_SEC_FAT+2+1,XH
C:001a4a   +          LDIX    0
C:001a4a e0a0      LDI     XL,LOW(0)
C:001a4b e0b0      LDI     XH,HIGH(0)
C:001a4c 8983              LDD     WL,Z+19         ;BPB_TotSec16
C:001a4d 8994              LDD     WH,Z+20         ;BPB_TotSec16
C:001a4e 2f09              MOV     DATA,WH
C:001a4f 2b08              OR      DATA,WL
C:001a50 f421              BRNE    RDFAT02         ;если BPB_TotSec16==0 то берем из BPB_TotSec32
C:001a51 a180              LDD     WL,Z+32         ;BPB_TotSec32
C:001a52 a191              LDD     WH,Z+33         ;BPB_TotSec32
C:001a53 a1a2              LDD     XL,Z+34         ;BPB_TotSec32
C:001a54 a1b3              LDD     XH,Z+35         ;BPB_TotSec32
C:001a55   +  RDFAT02:STSW    FAT_SEC_DSC+0
C:001a55 9380 013c STS     FAT_SEC_DSC+0,WL
C:001a57 9390 013d STS     FAT_SEC_DSC+0+1,WH
C:001a59   +          STSX    FAT_SEC_DSC+2   ;к-во секторов на диске/разделе
C:001a59 93a0 013e STS     FAT_SEC_DSC+2,XL
C:001a5b 93b0 013f STS     FAT_SEC_DSC+2+1,XH
         ;вычисляем rootdirsectors
C:001a5d 8981              LDD     WL,Z+17         ;BPB_RootEntCnt
C:001a5e 8992              LDD     WH,Z+18         ;BPB_RootEntCnt
C:001a5f   +          LDIX    0
C:001a5f e0a0      LDI     XL,LOW(0)
C:001a60 e0b0      LDI     XH,HIGH(0)
C:001a61 2f09              MOV     DATA,WH
C:001a62 2b08              OR      DATA,WL         ;в FAT32 поле BPB_RootEntCnt всегда 0
C:001a63 f019              BREQ    RDFAT03         ;поэтому для FAT32 RootDirSectors всегда 0
C:001a64 e100              LDI     DATA,$10
C:001a65 d1ec              RCALL   BCDE_A
C:001a66 01dc              MOVW    XL,WL
C:001a67 93bf      RDFAT03:PUSH    XH              ;RootDirSectors в X
C:001a68 93af              PUSH    XL
C:001a69 8900              LDD     DATA,Z+16       ;BPB_NumFATs
C:001a6a 9300 0128         STS     FAT_MANYFAT,DATA
C:001a6c   +          LDSW    FAT_SEC_FAT+0
C:001a6c 9180 012e LDS     WL,FAT_SEC_FAT+0
C:001a6e 9190 012f LDS     WH,FAT_SEC_FAT+0+1
C:001a70   +          LDSX    FAT_SEC_FAT+2
C:001a70 91a0 0130 LDS     XL,FAT_SEC_FAT+2
C:001a72 91b0 0131 LDS     XH,FAT_SEC_FAT+2+1
C:001a74 950a              DEC     DATA
C:001a75 0f88      RDF031: LSL     WL
C:001a76 1f99              ROL     WH
C:001a77 1faa              ROL     XL
C:001a78 1fbb              ROL     XH
C:001a79 950a              DEC     DATA
C:001a7a f7d1              BRNE    RDF031
C:001a7b 916f              POP     TMP2
C:001a7c 917f              POP     TMP3
                                         ;полный размер FAT-области в секторах
C:001a7d d1ed              RCALL   HLDEPBC         ;прибавили RootDirSectors
C:001a7e 8566              LDD     TMP2,Z+14       ;BPB_RsvdSecCnt
C:001a7f 8577              LDD     TMP3,Z+15       ;BPB_RsvdSecCnt
C:001a80 9360 0132         STS     FAT_RSVDSEC+0,TMP2
C:001a82 9370 0133         STS     FAT_RSVDSEC+1,TMP3
C:001a84 d1e6              RCALL   HLDEPBC         ;прибавили BPB_RsvdSecCnt
C:001a85   +          STSW    FAT_FRSTDAT+0
C:001a85 9380 0138 STS     FAT_FRSTDAT+0,WL
C:001a87 9390 0139 STS     FAT_FRSTDAT+0+1,WH
C:001a89   +          STSX    FAT_FRSTDAT+2   ;положили номер первого сектора данных
C:001a89 93a0 013a STS     FAT_FRSTDAT+2,XL
C:001a8b 93b0 013b STS     FAT_FRSTDAT+2+1,XH
C:001a8d   +          LDIZ    FAT_SEC_DSC
C:001a8d e3ec      LDI     ZL,LOW(FAT_SEC_DSC)
C:001a8e e0f1      LDI     ZH,HIGH(FAT_SEC_DSC)
C:001a8f d1c5              RCALL   BCDEHLM         ;вычли из полного к-ва секторов раздела
C:001a90   +          LDIZ    BUF4FAT
C:001a90 e0e0      LDI     ZL,LOW(BUF4FAT)
C:001a91 e0f6      LDI     ZH,HIGH(BUF4FAT)
C:001a92 8505              LDD     DATA,Z+13       ;BPB_SecPerClus
C:001a93 3401              CPI     DATA,65
C:001a94 f008              BRCS    RDF032
C:001a95 cf9f              RJMP    SDERR4  ;ошибка FAT (кластер>32Kb, ограничения флешера)
C:001a96 9300 0129 RDF032: STS     FAT_BYTSSEC,DATA
C:001a98 d1b9              RCALL   BCDE_A          ;разделили на к-во секторов в кластере
C:001a99   +          STSW    FAT_CLS_DSC+0
C:001a99 9380 0140 STS     FAT_CLS_DSC+0,WL
C:001a9b 9390 0141 STS     FAT_CLS_DSC+0+1,WH
C:001a9d   +          STSX    FAT_CLS_DSC+2   ;положили кол-во кластеров на разделе
C:001a9d 93a0 0142 STS     FAT_CLS_DSC+2,XL
C:001a9f 93b0 0143 STS     FAT_CLS_DSC+2+1,XH
         
         ;microsoft-recommended FAT type determination (FAT12 <4085; FAT16 <65525; else FAT32)
C:001aa1 e002              LDI     DATA,2
C:001aa2 23bb              TST     XH
C:001aa3 f459              BRNE    RDFAT04
C:001aa4 23aa              TST     XL
C:001aa5 f449              BRNE    RDFAT04
C:001aa6 3f85              CPI     WL,$F5
C:001aa7 059d              CPC     WH,FF
C:001aa8 f430              BRCC    RDFAT04
C:001aa9 e001              LDI     DATA,1
C:001aaa e01f              LDI     TEMP,$0F
C:001aab 3f85              CPI     WL,$F5
C:001aac 0791              CPC     WH,TEMP
C:001aad f408              BRCC    RDFAT04
C:001aae e000              LDI     DATA,0
         ;alternative FAT type determination
         ;        PUSHX
         ;        PUSHW
         ;        LSL     WL
         ;        ROL     WH
         ;        ROL     XL
         ;        ROL     XH
         ;        RCALL   RASCHET
         ;        LDI     DATA,1
         ;        POPW
         ;        POPX
         ;        BREQ    RDFAT04
         ;        LSL     WL
         ;        ROL     WH
         ;        ROL     XL
         ;        ROL     XH
         ;        LSL     WL
         ;        ROL     WH
         ;        ROL     XL
         ;        ROL     XH
         ;        RCALL   RASCHET
         ;        LDI     DATA,2
         ;        BREQ    RDFAT04
         ;        CLR     DATA
C:001aaf 9300 0127 RDFAT04:STS     FAT_CAL_FAT,DATA
         
         ;для FAT12/16 вычисляем адрес первого сектора директории
         ;для FAT32 берем по смещемию +44
         ;на выходе XW == кластер rootdir
C:001ab1   +          LDIW    0
C:001ab1 e080      LDI     WL,LOW(0)
C:001ab2 e090      LDI     WH,HIGH(0)
C:001ab3   +          LDIX    0
C:001ab3 e0a0      LDI     XL,LOW(0)
C:001ab4 e0b0      LDI     XH,HIGH(0)
C:001ab5 2300              TST     DATA
C:001ab6 f031              BREQ    FSRROO2
C:001ab7 950a              DEC     DATA
C:001ab8 f021              BREQ    FSRROO2
C:001ab9 a584              LDD     WL,Z+44
C:001aba a595              LDD     WH,Z+45
C:001abb a5a6              LDD     XL,Z+46
C:001abc a5b7              LDD     XH,Z+47
C:001abd   +  FSRROO2:STSW    FAT_ROOTCLS+0
C:001abd 9380 012a STS     FAT_ROOTCLS+0,WL
C:001abf 9390 012b STS     FAT_ROOTCLS+0+1,WH
C:001ac1   +          STSX    FAT_ROOTCLS+2   ;КЛАСТЕР root директории
C:001ac1 93a0 012c STS     FAT_ROOTCLS+2,XL
C:001ac3 93b0 012d STS     FAT_ROOTCLS+2+1,XH
C:001ac5   +          STSW    FAT_TEK_DIR+0
C:001ac5 9380 014c STS     FAT_TEK_DIR+0,WL
C:001ac7 9390 014d STS     FAT_TEK_DIR+0+1,WH
C:001ac9   +          STSX    FAT_TEK_DIR+2
C:001ac9 93a0 014e STS     FAT_TEK_DIR+2,XL
C:001acb 93b0 014f STS     FAT_TEK_DIR+2+1,XH
         
C:001acd   +          LDSW    FAT_RSVDSEC
C:001acd 9180 0132 LDS     WL,FAT_RSVDSEC
C:001acf 9190 0133 LDS     WH,FAT_RSVDSEC+1
C:001ad1   +          LDIX    0
C:001ad1 e0a0      LDI     XL,LOW(0)
C:001ad2 e0b0      LDI     XH,HIGH(0)
C:001ad3   +          LDIZ    FAT_STARTRZ
C:001ad3 e3e4      LDI     ZL,LOW(FAT_STARTRZ)
C:001ad4 e0f1      LDI     ZH,HIGH(FAT_STARTRZ)
C:001ad5 d18c              RCALL   BCDEHLP
C:001ad6   +          STSW    FAT_FATSTR0+0
C:001ad6 9380 0144 STS     FAT_FATSTR0+0,WL
C:001ad8 9390 0145 STS     FAT_FATSTR0+0+1,WH
C:001ada   +          STSX    FAT_FATSTR0+2
C:001ada 93a0 0146 STS     FAT_FATSTR0+2,XL
C:001adc 93b0 0147 STS     FAT_FATSTR0+2+1,XH
C:001ade   +          LDIZ    FAT_SEC_FAT
C:001ade e2ee      LDI     ZL,LOW(FAT_SEC_FAT)
C:001adf e0f1      LDI     ZH,HIGH(FAT_SEC_FAT)
C:001ae0 d181              RCALL   BCDEHLP
C:001ae1   +          STSW    FAT_FATSTR1+0
C:001ae1 9380 0148 STS     FAT_FATSTR1+0,WL
C:001ae3 9390 0149 STS     FAT_FATSTR1+0+1,WH
C:001ae5   +          STSX    FAT_FATSTR1+2
C:001ae5 93a0 014a STS     FAT_FATSTR1+2,XL
C:001ae7 93b0 014b STS     FAT_FATSTR1+2+1,XH
         
C:001ae9   +          LDSW    FAT_ROOTCLS+0
C:001ae9 9180 012a LDS     WL,FAT_ROOTCLS+0
C:001aeb 9190 012b LDS     WH,FAT_ROOTCLS+0+1
C:001aed   +          LDSX    FAT_ROOTCLS+2
C:001aed 91a0 012c LDS     XL,FAT_ROOTCLS+2
C:001aef 91b0 012d LDS     XH,FAT_ROOTCLS+2+1
         ;
         ;--------------------------------------
         ;
          CALCKCLSDIR:
C:001af1   +          PUSHW
C:001af1 938f      PUSH    WL
C:001af2 939f      PUSH    WH
C:001af3   +          PUSHX
C:001af3 93af      PUSH    XL
C:001af4 93bf      PUSH    XH
C:001af5 e011              LDI     TEMP,1
C:001af6 2e08              MOV     R0,WL
C:001af7 2a09              OR      R0,WH
C:001af8 2a0a              OR      R0,XL
C:001af9 2a0b              OR      R0,XH
C:001afa f039              BREQ    LASTCLS
C:001afb 931f      NEXTCLS:PUSH    TEMP
C:001afc d0c4              RCALL   RDFATZP
C:001afd d0b1              RCALL   LST_CLS
C:001afe 911f              POP     TEMP
C:001aff f410              BRCC    LASTCLS
C:001b00 9513              INC     TEMP
C:001b01 cff9              RJMP    NEXTCLS
C:001b02 9310 0150 LASTCLS:STS     FAT_KCLSDIR,TEMP
C:001b04   +          POPX
C:001b04 91bf      POP     XH
C:001b05 91af      POP     XL
C:001b06   +          POPW
C:001b06 919f      POP     WH
C:001b07 918f      POP     WL
C:001b08 9508              RET
         ;
         ;--------------------------------------
         ;
          SD_CRC_OFF:
C:001b09 e70b              LDI     DATA,$40+59 ;CMD59 (crc_on_off)
C:001b0a dc80              RCALL   SD_WR_CMD
C:001b0b 2300              TST     DATA
C:001b0c f7e1              BRNE    SD_CRC_OFF
C:001b0d 9508              RET
         ;
         ;--------------------------------------
         ;
          SD_SETBLKLEN:
C:001b0e   +          LDIZ    CMD16*2     ;CMD16 (set_blocklen)
C:001b0e e0ea      LDI     ZL,LOW(CMD16*2)
C:001b0f e3f3      LDI     ZH,HIGH(CMD16*2)
C:001b10 dc8a              RCALL   SD_WR_PGM_6
C:001b11 2300              TST     DATA
C:001b12 f7d9              BRNE    SD_SETBLKLEN
C:001b13 9508              RET
         ;
         ;--------------------------------------
         ;out:   sreg.Z  SET==signature exist
         ;       Z==BUF4FAT+$01FF
          FAT_CHKSIGN:
C:001b14   +          LDIZ    BUF4FAT+$01FE
C:001b14 efee      LDI     ZL,LOW(BUF4FAT+$01FE)
C:001b15 e0f7      LDI     ZH,HIGH(BUF4FAT+$01FE)
C:001b16 9101              LD      DATA,Z+
C:001b17 3505              CPI     DATA,$55
C:001b18 8100              LD      DATA,Z
C:001b19 f409              BRNE    FAT_CHKSIG9
C:001b1a 3a0a              CPI     DATA,$AA
          FAT_CHKSIG9:
C:001b1b 9508              RET
         ;
         ;--------------------------------------
         ;чтение сектора данных
          LOAD_DATA:
C:001b1c ff43              SBRS    FLAGS1,3
C:001b1d c014              RJMP    LOAD_DAT1
C:001b1e 934f              PUSH    FLAGS1
C:001b1f 7f42              CBR     FLAGS1,0B00001101
C:001b20 6042              SBR     FLAGS1,0B00000010
C:001b21   +          LDIZ    MSG_TSD_READSECTOR*2
C:001b21 efe6      LDI     ZL,LOW(MSG_TSD_READSECTOR*2)
C:001b22 e1f2      LDI     ZH,HIGH(MSG_TSD_READSECTOR*2)
C:001b23 940e 14fd         CALL    PRINTSTRZ
C:001b25 2f0b              MOV     DATA,XH
C:001b26 940e 150f         CALL    HEXBYTE
C:001b28 2f0a              MOV     DATA,XL
C:001b29 940e 150f         CALL    HEXBYTE
C:001b2b 2f09              MOV     DATA,WH
C:001b2c 940e 150f         CALL    HEXBYTE
C:001b2e 2f08              MOV     DATA,WL
C:001b2f 940e 150f         CALL    HEXBYTE
C:001b31 914f              POP     FLAGS1
          LOAD_DAT1:
C:001b32   +          LDIZ    BUFSECT
C:001b32 e0e0      LDI     ZL,LOW(BUFSECT)
C:001b33 e0f4      LDI     ZH,HIGH(BUFSECT)
C:001b34 dc75              RCALL   SD_READ_SECTOR  ;читать один сектор
C:001b35 f009              BREQ    SDERR2
         ;        SBRS    FLAGS1,3
C:001b36 9508              RET
         ;        LDIZ    BUFSECT
         ;        CALL    UART_DUMP512
         ;        RET
         ;
         ;--------------------------------------
C:001b37 e002      SDERR2: LDI     DATA,2  ;ошибка при чтении сектора
          SD_ERROR:
C:001b38   +          LDSZ    FAT_ERRHANDLER
C:001b38 91e0 015c LDS     ZL,FAT_ERRHANDLER
C:001b3a 91f0 015d LDS     ZH,FAT_ERRHANDLER+1
C:001b3c 9409              IJMP
         ;
         ;--------------------------------------
         ;чтение сектора служ.инф. (FAT/DIR/...)
          LOADLST:
C:001b3d   +          LDIZ    FAT_LST0ZAP
C:001b3d e5ee      LDI     ZL,LOW(FAT_LST0ZAP)
C:001b3e e0f1      LDI     ZH,HIGH(FAT_LST0ZAP)
C:001b3f 9101              LD      DATA,Z+
C:001b40 1708              CP      DATA,WL
C:001b41 f449              BRNE    LOADLST2
C:001b42 9101              LD      DATA,Z+
C:001b43 1709              CP      DATA,WH
C:001b44 f431              BRNE    LOADLST2
C:001b45 9101              LD      DATA,Z+
C:001b46 170a              CP      DATA,XL
C:001b47 f419              BRNE    LOADLST2
C:001b48 9101              LD      DATA,Z+
C:001b49 170b              CP      DATA,XH
C:001b4a f141              BREQ    LOADLST9
          LOADLST2:
C:001b4b   +          STSW    FAT_LST0ZAP+0
C:001b4b 9380 015e STS     FAT_LST0ZAP+0,WL
C:001b4d 9390 015f STS     FAT_LST0ZAP+0+1,WH
C:001b4f   +          STSX    FAT_LST0ZAP+2
C:001b4f 93a0 0160 STS     FAT_LST0ZAP+2,XL
C:001b51 93b0 0161 STS     FAT_LST0ZAP+2+1,XH
C:001b53 ff43              SBRS    FLAGS1,3
C:001b54 c014              RJMP    LOADLST1
C:001b55 934f              PUSH    FLAGS1
C:001b56 7f42              CBR     FLAGS1,0B00001101
C:001b57 6042              SBR     FLAGS1,0B00000010
C:001b58   +          LDIZ    MSG_TSD_READSECTOR*2
C:001b58 efe6      LDI     ZL,LOW(MSG_TSD_READSECTOR*2)
C:001b59 e1f2      LDI     ZH,HIGH(MSG_TSD_READSECTOR*2)
C:001b5a 940e 14fd         CALL    PRINTSTRZ
C:001b5c 2f0b              MOV     DATA,XH
C:001b5d 940e 150f         CALL    HEXBYTE
C:001b5f 2f0a              MOV     DATA,XL
C:001b60 940e 150f         CALL    HEXBYTE
C:001b62 2f09              MOV     DATA,WH
C:001b63 940e 150f         CALL    HEXBYTE
C:001b65 2f08              MOV     DATA,WL
C:001b66 940e 150f         CALL    HEXBYTE
C:001b68 914f              POP     FLAGS1
          LOADLST1:
C:001b69   +          LDIZ    BUF4FAT
C:001b69 e0e0      LDI     ZL,LOW(BUF4FAT)
C:001b6a e0f6      LDI     ZH,HIGH(BUF4FAT)
C:001b6b dc3e              RCALL   SD_READ_SECTOR  ;читать один сектор
C:001b6c f251              BREQ    SDERR2
C:001b6d   +          LDIZ    BUF4FAT
C:001b6d e0e0      LDI     ZL,LOW(BUF4FAT)
C:001b6e e0f6      LDI     ZH,HIGH(BUF4FAT)
C:001b6f ff43              SBRS    FLAGS1,3
C:001b70 9508              RET
C:001b71 940e 0d9f         CALL    UART_DUMP512
          LOADLST9:
C:001b73   +          LDIZ    BUF4FAT
C:001b73 e0e0      LDI     ZL,LOW(BUF4FAT)
C:001b74 e0f6      LDI     ZH,HIGH(BUF4FAT)
C:001b75 9508              RET
         ;
         ;--------------------------------------
         ;чтение сектора dir по номеру описателя (W)
         ;на выходе: DATA=#ff (sreg.Z=0) выход за пределы dir
C:001b76   +  RDDIRSC:PUSHW
C:001b76 938f      PUSH    WL
C:001b77 939f      PUSH    WH
C:001b78 ea11              LDI     TEMP,SD_CS0
C:001b79 ef0f              SER     DATA
C:001b7a 940e 176f         CALL    FPGA_REG
         
C:001b7c   +          LDIX    0
C:001b7c e0a0      LDI     XL,LOW(0)
C:001b7d e0b0      LDI     XH,HIGH(0)
C:001b7e e100              LDI     DATA,$10
C:001b7f d0d2              RCALL   BCDE_A
C:001b80 938f              PUSH    WL
C:001b81 9100 0129         LDS     DATA,FAT_BYTSSEC
C:001b83 930f              PUSH    DATA
C:001b84 d0cd              RCALL   BCDE_A
C:001b85 9100 0150         LDS     DATA,FAT_KCLSDIR
C:001b87 950a              DEC     DATA
C:001b88 1708              CP      DATA,WL
C:001b89 f438              BRCC    RDDIRS3
C:001b8a 910f              POP     DATA
C:001b8b 910f              POP     DATA
C:001b8c   +          POPW
C:001b8c 919f      POP     WH
C:001b8d 918f      POP     WL
C:001b8e ef0f              SER     DATA
C:001b8f 2300              TST     DATA
C:001b90 9508              RET
C:001b91   +  RDDIRS3:LDSX    FAT_TEK_DIR+2
C:001b91 91a0 014e LDS     XL,FAT_TEK_DIR+2
C:001b93 91b0 014f LDS     XH,FAT_TEK_DIR+2+1
C:001b95 2f08              MOV     DATA,WL
C:001b96 2300              TST     DATA
C:001b97   +          LDSW    FAT_TEK_DIR+0
C:001b97 9180 014c LDS     WL,FAT_TEK_DIR+0
C:001b99 9190 014d LDS     WH,FAT_TEK_DIR+0+1
C:001b9b f029              BREQ    RDDIRS1
C:001b9c 930f      RDDIRS2:PUSH    DATA
C:001b9d d023              RCALL   RDFATZP
C:001b9e 910f              POP     DATA
C:001b9f 950a              DEC     DATA
C:001ba0 f7d9              BRNE    RDDIRS2
C:001ba1 d085      RDDIRS1:RCALL   REALSEC
C:001ba2 900f              POP     R0
C:001ba3 940a              DEC     R0
C:001ba4 910f              POP     DATA
C:001ba5 2100              AND     DATA,R0
C:001ba6 0f80              ADD     WL,DATA
C:001ba7 1d9f              ADC     WH,NULL
C:001ba8 1daf              ADC     XL,NULL
C:001ba9 1dbf              ADC     XH,NULL
C:001baa df92              RCALL   LOADLST
C:001bab   +          POPW
C:001bab 919f      POP     WH
C:001bac 918f      POP     WL
C:001bad 2700              CLR     DATA
C:001bae 9508              RET
         ;
         ;--------------------------------------
         ;out:   sreg.C == CLR - EOCmark
         ;(chng: TEMP)
C:001baf e01f      LST_CLS:LDI     TEMP,$0F
C:001bb0 9100 0127         LDS     DATA,FAT_CAL_FAT
C:001bb2 2300              TST     DATA
C:001bb3 f419              BRNE    LST_CL1
C:001bb4 3f87              CPI     WL,$F7
C:001bb5 0791              CPC     WH,TEMP
C:001bb6 9508              RET
C:001bb7 950a      LST_CL1:DEC     DATA
C:001bb8 f419              BRNE    LST_CL2
C:001bb9 3f87              CPI     WL,$F7
C:001bba 059d              CPC     WH,FF
C:001bbb 9508              RET
C:001bbc 3f87      LST_CL2:CPI     WL,$F7
C:001bbd 059d              CPC     WH,FF
C:001bbe 05ad              CPC     XL,FF
C:001bbf 07b1              CPC     XH,TEMP
C:001bc0 9508              RET
         ;
         ;--------------------------------------
         ;
          RDFATZP:
C:001bc1 ea11              LDI     TEMP,SD_CS0
C:001bc2 ef0f              SER     DATA
C:001bc3 940e 176f         CALL    FPGA_REG
         
C:001bc5 9100 0127         LDS     DATA,FAT_CAL_FAT
C:001bc7 2300              TST     DATA
C:001bc8 f139              BREQ    RDFATS0         ;FAT12
C:001bc9 950a              DEC     DATA
C:001bca f079              BREQ    RDFATS1         ;FAT16
         ;FAT32
C:001bcb 0f88              LSL     WL
C:001bcc 1f99              ROL     WH
C:001bcd 1faa              ROL     XL
C:001bce 1fbb              ROL     XH
C:001bcf 2f08              MOV     DATA,WL
C:001bd0 2f89              MOV     WL,WH
C:001bd1 2f9a              MOV     WH,XL
C:001bd2 2fab              MOV     XL,XH
C:001bd3 27bb              CLR     XH
C:001bd4 d00a              RCALL   RDFATS2
C:001bd5 9631              ADIW    ZL,1
C:001bd6 91a1              LD      XL,Z+
C:001bd7 81b0              LD      XH,Z
C:001bd8 70bf              ANDI    XH,$0F  ;
C:001bd9 9508              RET
         ;FAT16
C:001bda   +  RDFATS1:LDIX    0
C:001bda e0a0      LDI     XL,LOW(0)
C:001bdb e0b0      LDI     XH,HIGH(0)
C:001bdc 2f08              MOV     DATA,WL
C:001bdd 2f89              MOV     WL,WH
C:001bde 2799              CLR     WH
C:001bdf 930f      RDFATS2:PUSH    DATA
C:001be0   +          PUSHX
C:001be0 93af      PUSH    XL
C:001be1 93bf      PUSH    XH
C:001be2   +          LDIZ    FAT_FATSTR0
C:001be2 e4e4      LDI     ZL,LOW(FAT_FATSTR0)
C:001be3 e0f1      LDI     ZH,HIGH(FAT_FATSTR0)
C:001be4 d07d              RCALL   BCDEHLP
C:001be5 df57              RCALL   LOADLST
C:001be6   +          POPX
C:001be6 91bf      POP     XH
C:001be7 91af      POP     XL
C:001be8 910f              POP     DATA
C:001be9 0fe0              ADD     ZL,DATA
C:001bea 1dff              ADC     ZH,NULL
C:001beb 0fe0              ADD     ZL,DATA
C:001bec 1dff              ADC     ZH,NULL
C:001bed 9181              LD      WL,Z+
C:001bee 8190              LD      WH,Z
C:001bef 9508              RET
         ;FAT12
C:001bf0 01fc      RDFATS0:MOVW    ZL,WL
C:001bf1 0fee              LSL     ZL
C:001bf2 1fff              ROL     ZH
C:001bf3 0fe8              ADD     ZL,WL
C:001bf4 1ff9              ADC     ZH,WH
C:001bf5 95f6              LSR     ZH
C:001bf6 95e7              ROR     ZL
C:001bf7 2f08              MOV     DATA,WL
C:001bf8 2f8f              MOV     WL,ZH
C:001bf9 2799              CLR     WH
C:001bfa 27aa              CLR     XL
C:001bfb 27bb              CLR     XH
C:001bfc 9586              LSR     WL
C:001bfd 930f              PUSH    DATA
C:001bfe   +          PUSHZ
C:001bfe 93ef      PUSH    ZL
C:001bff 93ff      PUSH    ZH
C:001c00   +          LDIZ    FAT_FATSTR0
C:001c00 e4e4      LDI     ZL,LOW(FAT_FATSTR0)
C:001c01 e0f1      LDI     ZH,HIGH(FAT_FATSTR0)
C:001c02 d05f              RCALL   BCDEHLP
C:001c03   +          PUSHW
C:001c03 938f      PUSH    WL
C:001c04 939f      PUSH    WH
C:001c05 df37              RCALL   LOADLST
C:001c06   +          POPW
C:001c06 919f      POP     WH
C:001c07 918f      POP     WL
C:001c08   +          POPX
C:001c08 91bf      POP     XH
C:001c09 91af      POP     XL
C:001c0a 70b1              ANDI    XH,$01
C:001c0b 0fea              ADD     ZL,XL
C:001c0c 1ffb              ADC     ZH,XH
C:001c0d 91a1              LD      XL,Z+
C:001c0e 30f8              CPI     ZH,HIGH(BUF4FAT+512)
C:001c0f f431              BRNE    RDFATS4
C:001c10 93af              PUSH    XL
C:001c11   +          LDIX    0
C:001c11 e0a0      LDI     XL,LOW(0)
C:001c12 e0b0      LDI     XH,HIGH(0)
C:001c13 9601              ADIW    WL,1
C:001c14 df28              RCALL   LOADLST
C:001c15 91af              POP     XL
C:001c16 910f      RDFATS4:POP     DATA
C:001c17 8190              LD      WH,Z
C:001c18 2f8a              MOV     WL,XL
C:001c19   +          LDIX    0
C:001c19 e0a0      LDI     XL,LOW(0)
C:001c1a e0b0      LDI     XH,HIGH(0)
C:001c1b 9506              LSR     DATA
C:001c1c f440              BRCC    RDFATS3
C:001c1d 9596              LSR     WH
C:001c1e 9587              ROR     WL
C:001c1f 9596              LSR     WH
C:001c20 9587              ROR     WL
C:001c21 9596              LSR     WH
C:001c22 9587              ROR     WL
C:001c23 9596              LSR     WH
C:001c24 9587              ROR     WL
C:001c25 709f      RDFATS3:ANDI    WH,$0F
C:001c26 9508              RET
         ;
         ;--------------------------------------
         ;вычисление реального сектора
         ;на входе XW==номер FAT
         ;на выходе XW==адрес сектора
C:001c27 2f0b      REALSEC:MOV     DATA,XH
C:001c28 2b0a              OR      DATA,XL
C:001c29 2b09              OR      DATA,WH
C:001c2a 2b08              OR      DATA,WL
C:001c2b f459              BRNE    REALSE1
C:001c2c   +          LDIZ    FAT_FATSTR1
C:001c2c e4e8      LDI     ZL,LOW(FAT_FATSTR1)
C:001c2d e0f1      LDI     ZH,HIGH(FAT_FATSTR1)
C:001c2e   +          LDSW    FAT_SEC_FAT+0
C:001c2e 9180 012e LDS     WL,FAT_SEC_FAT+0
C:001c30 9190 012f LDS     WH,FAT_SEC_FAT+0+1
C:001c32   +          LDSX    FAT_SEC_FAT+2
C:001c32 91a0 0130 LDS     XL,FAT_SEC_FAT+2
C:001c34 91b0 0131 LDS     XH,FAT_SEC_FAT+2+1
C:001c36 c02b              RJMP    BCDEHLP
C:001c37 9702      REALSE1:SBIW    WL,2            ;номер кластера-2
C:001c38 09af              SBC     XL,NULL
C:001c39 09bf              SBC     XH,NULL
C:001c3a 9100 0129         LDS     DATA,FAT_BYTSSEC
C:001c3c c004              RJMP    REALSE2
C:001c3d 0f88      REALSE3:LSL     WL
C:001c3e 1f99              ROL     WH
C:001c3f 1faa              ROL     XL
C:001c40 1fbb              ROL     XH
C:001c41 9506      REALSE2:LSR     DATA
C:001c42 f7d0              BRCC    REALSE3
                                         ;умножили на размер кластера
C:001c43   +          LDIZ    FAT_STARTRZ
C:001c43 e3e4      LDI     ZL,LOW(FAT_STARTRZ)
C:001c44 e0f1      LDI     ZH,HIGH(FAT_STARTRZ)
C:001c45 d01c              RCALL   BCDEHLP         ;прибавили смещение от начала диска
C:001c46   +          LDIZ    FAT_FRSTDAT
C:001c46 e3e8      LDI     ZL,LOW(FAT_FRSTDAT)
C:001c47 e0f1      LDI     ZH,HIGH(FAT_FRSTDAT)
C:001c48 c019              RJMP    BCDEHLP         ;прибавили смещение от начала раздела
         ;
         ;--------------------------------------
         ;XW>>9 (деление на 512)
C:001c49 2f89      BCDE200:MOV     WL,WH
C:001c4a 2f9a              MOV     WH,XL
C:001c4b 2fab              MOV     XL,XH
C:001c4c e0b0              LDI     XH,0
C:001c4d e001              LDI     DATA,1
         ; - - - - - - - - - - - - - - - - - - -
         ;XWDATA>>до"переноса"
         ;если в DATA вкл.только один бит, то получается
         ;XW=XW/DATA
C:001c4e 95b6      BCDE_A1:LSR     XH
C:001c4f 95a7              ROR     XL
C:001c50 9597              ROR     WH
C:001c51 9587              ROR     WL
C:001c52 9507      BCDE_A: ROR     DATA
C:001c53 f7d0              BRCC    BCDE_A1
C:001c54 9508              RET
         ;
         ;--------------------------------------
         ;XW=[Z]-XW
C:001c55 9101      BCDEHLM:LD      DATA,Z+
C:001c56 1b08              SUB     DATA,WL
C:001c57 2f80              MOV     WL,DATA
C:001c58 9101              LD      DATA,Z+
C:001c59 0b09              SBC     DATA,WH
C:001c5a 2f90              MOV     WH,DATA
C:001c5b 9101              LD      DATA,Z+
C:001c5c 0b0a              SBC     DATA,XL
C:001c5d 2fa0              MOV     XL,DATA
C:001c5e 8100              LD      DATA,Z
C:001c5f 0b0b              SBC     DATA,XH
C:001c60 2fb0              MOV     XH,DATA
C:001c61 9508              RET
         ;
         ;--------------------------------------
         ;XW=XW+[Z]
C:001c62 9101      BCDEHLP:LD      DATA,Z+
C:001c63 0f80              ADD     WL,DATA
C:001c64 9101              LD      DATA,Z+
C:001c65 1f90              ADC     WH,DATA
C:001c66 9101              LD      DATA,Z+
C:001c67 1fa0              ADC     XL,DATA
C:001c68 8100              LD      DATA,Z
C:001c69 1fb0              ADC     XH,DATA
C:001c6a 9508              RET
         ;
         ;--------------------------------------
         ;XW=XW+TMP3TMP2
C:001c6b 0f86      HLDEPBC:ADD     WL,TMP2
C:001c6c 1f97              ADC     WH,TMP3
C:001c6d 1daf              ADC     XL,NULL
C:001c6e 1dbf              ADC     XH,NULL
C:001c6f 9508              RET
         ;
         ;--------------------------------------
         ;
C:001c70 dfd8      RASCHET:RCALL   BCDE200
C:001c71   +          LDIZ    FAT_SEC_FAT
C:001c71 e2ee      LDI     ZL,LOW(FAT_SEC_FAT)
C:001c72 e0f1      LDI     ZH,HIGH(FAT_SEC_FAT)
C:001c73 dfe1              RCALL   BCDEHLM
C:001c74 2f08              MOV     DATA,WL
C:001c75 7f00              ANDI    DATA,$F0
C:001c76 2b09              OR      DATA,WH
C:001c77 2b0a              OR      DATA,XL
C:001c78 2b0b              OR      DATA,XH
C:001c79 9508              RET
         ;
         ;--------------------------------------
         ;чтение очередного сектора файла в BUFFER
         ;out:   DATA == 0 - считан последний сектор файла
          NEXTSEC:
C:001c7a ea11              LDI     TEMP,SD_CS0
C:001c7b ef0f              SER     DATA
C:001c7c 940e 176f         CALL    FPGA_REG
         
C:001c7e   +          LDIZ    FAT_KOL_CLS
C:001c7e e5e7      LDI     ZL,LOW(FAT_KOL_CLS)
C:001c7f e0f1      LDI     ZH,HIGH(FAT_KOL_CLS)
C:001c80 9101              LD      DATA,Z+
C:001c81 9111              LD      TEMP,Z+
C:001c82 2b01              OR      DATA,TEMP
C:001c83 9111              LD      TEMP,Z+
C:001c84 2b01              OR      DATA,TEMP
C:001c85 9111              LD      TEMP,Z+
C:001c86 2b01              OR      DATA,TEMP
C:001c87 f1e1              BREQ    LSTCLSF
C:001c88   +          LDSW    FAT_TFILCLS+0
C:001c88 9180 0152 LDS     WL,FAT_TFILCLS+0
C:001c8a 9190 0153 LDS     WH,FAT_TFILCLS+0+1
C:001c8c   +          LDSX    FAT_TFILCLS+2
C:001c8c 91a0 0154 LDS     XL,FAT_TFILCLS+2
C:001c8e 91b0 0155 LDS     XH,FAT_TFILCLS+2+1
C:001c90 df96              RCALL   REALSEC
C:001c91 9100 0151         LDS     DATA,FAT_NUMSECK
C:001c93 0f80              ADD     WL,DATA
C:001c94 1d9f              ADC     WH,NULL
C:001c95 1daf              ADC     XL,NULL
C:001c96 1dbf              ADC     XH,NULL
C:001c97 de84              RCALL   LOAD_DATA
C:001c98   +          LDSW    FAT_TFILCLS+0
C:001c98 9180 0152 LDS     WL,FAT_TFILCLS+0
C:001c9a 9190 0153 LDS     WH,FAT_TFILCLS+0+1
C:001c9c   +          LDSX    FAT_TFILCLS+2
C:001c9c 91a0 0154 LDS     XL,FAT_TFILCLS+2
C:001c9e 91b0 0155 LDS     XH,FAT_TFILCLS+2+1
C:001ca0 9100 0151         LDS     DATA,FAT_NUMSECK
C:001ca2 9503              INC     DATA
C:001ca3 9300 0151         STS     FAT_NUMSECK,DATA
C:001ca5 9110 0129         LDS     TEMP,FAT_BYTSSEC
C:001ca7 1710              CP      TEMP,DATA
C:001ca8 f4c9              BRNE    NEXT_OK
         
C:001ca9 92f0 0151         STS     FAT_NUMSECK,NULL
C:001cab df15              RCALL   RDFATZP
C:001cac   +          STSW    FAT_TFILCLS+0
C:001cac 9380 0152 STS     FAT_TFILCLS+0,WL
C:001cae 9390 0153 STS     FAT_TFILCLS+0+1,WH
C:001cb0   +          STSX    FAT_TFILCLS+2
C:001cb0 93a0 0154 STS     FAT_TFILCLS+2,XL
C:001cb2 93b0 0155 STS     FAT_TFILCLS+2+1,XH
C:001cb4   +          LDIZ    FAT_KOL_CLS
C:001cb4 e5e7      LDI     ZL,LOW(FAT_KOL_CLS)
C:001cb5 e0f1      LDI     ZH,HIGH(FAT_KOL_CLS)
C:001cb6 8100              LD      DATA,Z
C:001cb7 5001              SUBI    DATA,1
C:001cb8 9301              ST      Z+,DATA
C:001cb9 8100              LD      DATA,Z
C:001cba 090f              SBC     DATA,NULL
C:001cbb 9301              ST      Z+,DATA
C:001cbc 8100              LD      DATA,Z
C:001cbd 090f              SBC     DATA,NULL
C:001cbe 9301              ST      Z+,DATA
C:001cbf 8100              LD      DATA,Z
C:001cc0 090f              SBC     DATA,NULL
C:001cc1 9301              ST      Z+,DATA
C:001cc2 ef0f      NEXT_OK:SER     DATA
C:001cc3 9508              RET
         
C:001cc4   +  LSTCLSF:LDSW    FAT_TFILCLS+0
C:001cc4 9180 0152 LDS     WL,FAT_TFILCLS+0
C:001cc6 9190 0153 LDS     WH,FAT_TFILCLS+0+1
C:001cc8   +          LDSX    FAT_TFILCLS+2
C:001cc8 91a0 0154 LDS     XL,FAT_TFILCLS+2
C:001cca 91b0 0155 LDS     XH,FAT_TFILCLS+2+1
C:001ccc df5a              RCALL   REALSEC
C:001ccd 9100 0151         LDS     DATA,FAT_NUMSECK
C:001ccf 0f80              ADD     WL,DATA
C:001cd0 1d9f              ADC     WH,NULL
C:001cd1 1daf              ADC     XL,NULL
C:001cd2 1dbf              ADC     XH,NULL
C:001cd3 de48              RCALL   LOAD_DATA
C:001cd4 9100 0151         LDS     DATA,FAT_NUMSECK
C:001cd6 9503              INC     DATA
C:001cd7 9300 0151         STS     FAT_NUMSECK,DATA
C:001cd9 9110 0156         LDS     TEMP,FAT_MPHWOST
C:001cdb 1b01              SUB     DATA,TEMP
C:001cdc 9508              RET
         ;
         ;--------------------------------------
         ;
          ;
          .INCLUDE "_depack.asm"
          .EQU    DMLZ_DATA       =0
          .EQU    DMLZ_TEMP       =1
          .EQU    DMLZ_TMP2       =2
          .EQU    DMLZ_TMP3       =3
          .EQU    DMLZ_XL         =4
          .EQU    DMLZ_XH         =5
          .EQU    DMLZ_JUMP       =6
         ;
         ;--------------------------------------
         ;
          .DSEG
D:000162    DMLZ_Z:         .BYTE   2
D:000164    DMLZ_REGS:      .BYTE   7
          .CSEG
         ;
         ;--------------------------------------
         ;in:    Z,RAMPZ == указатель на упакованные данные
          DMLZ_INIT:
C:001cdd   +          STSZ    DMLZ_Z
C:001cdd 93e0 0162 STS     DMLZ_Z,ZL
C:001cdf 93f0 0163 STS     DMLZ_Z+1,ZH
C:001ce1   +          LDIZ    DMLZ_REGS
C:001ce1 e6e4      LDI     ZL,LOW(DMLZ_REGS)
C:001ce2 e0f1      LDI     ZH,HIGH(DMLZ_REGS)
C:001ce3 e810              LDI     TEMP,$80
C:001ce4 8311              STD     Z+DMLZ_TEMP,TEMP
C:001ce5 e010              LDI     TEMP,LOW(MEGABUFFER)
C:001ce6 8312              STD     Z+DMLZ_TMP2,TEMP
C:001ce7 e018              LDI     TEMP,HIGH(MEGABUFFER)
C:001ce8 8313              STD     Z+DMLZ_TMP3,TEMP
C:001ce9 82d6              STD     Z+DMLZ_JUMP,FF
C:001cea 9508              RET
         ;(не менять RAMPZ между вызовами DMLZ_GETBYTE)
         ;--------------------------------------
         ;out:   sreg.Z == CLR - успешно, SET - конец данных
         ;       DATA == очередной байт
          DMLZ_GETBYTE:
C:001ceb   +          LDIZ    DMLZ_REGS
C:001ceb e6e4      LDI     ZL,LOW(DMLZ_REGS)
C:001cec e0f1      LDI     ZH,HIGH(DMLZ_REGS)
C:001ced 8100              LDD     DATA,Z+DMLZ_DATA
C:001cee 8111              LDD     TEMP,Z+DMLZ_TEMP
C:001cef 8162              LDD     TMP2,Z+DMLZ_TMP2
C:001cf0 8173              LDD     TMP3,Z+DMLZ_TMP3
C:001cf1 81a4              LDD     XL,Z+DMLZ_XL
C:001cf2 81b5              LDD     XH,Z+DMLZ_XH
C:001cf3 8006              LDD     R0,Z+DMLZ_JUMP
C:001cf4   +          LDSZ    DMLZ_Z
C:001cf4 91e0 0162 LDS     ZL,DMLZ_Z
C:001cf6 91f0 0163 LDS     ZH,DMLZ_Z+1
C:001cf8 2000              TST     R0
C:001cf9 f012              BRMI    DMLZ_MS
C:001cfa f0c1              BREQ    DMLZ_METKA0
C:001cfb c062              RJMP    DMLZ_METKA1
         ;
C:001cfc 9007      DMLZ_MS:ELPM    R0,Z+
C:001cfd   +          STSZ    DMLZ_Z
C:001cfd 93e0 0162 STS     DMLZ_Z,ZL
C:001cff 93f0 0163 STS     DMLZ_Z+1,ZH
C:001d01   +          LDIZ    DMLZ_REGS
C:001d01 e6e4      LDI     ZL,LOW(DMLZ_REGS)
C:001d02 e0f1      LDI     ZH,HIGH(DMLZ_REGS)
C:001d03 82f6              STD     Z+DMLZ_JUMP,NULL
          DMLZ_OUT:
C:001d04 8300              STD     Z+DMLZ_DATA,DATA
C:001d05 8311              STD     Z+DMLZ_TEMP,TEMP
C:001d06 83a4              STD     Z+DMLZ_XL,XL
C:001d07 83b5              STD     Z+DMLZ_XH,XH
C:001d08 2fa6              MOV     XL,TMP2
C:001d09 2fb7              MOV     XH,TMP3
C:001d0a 920d              ST      X+,R0
C:001d0b 50b8              SUBI    XH,HIGH(MEGABUFFER) ;
C:001d0c 70b7              ANDI    XH,DBMASK_HI        ;address warp
C:001d0d   +          ADDI    XH,HIGH(MEGABUFFER) ;
C:001d0d 5fb8      SUBI    XH,(-(HIGH(MEGABUFFER))&$FF)
C:001d0e 83a2              STD     Z+DMLZ_TMP2,XL
C:001d0f 83b3              STD     Z+DMLZ_TMP3,XH
C:001d10 2d00              MOV     DATA,R0
C:001d11 9498              CLZ
C:001d12 9508              RET
         
          DMLZ_METKA0:
C:001d13 e092      DMLZ_M0:LDI     WH,$02
C:001d14 ef8f              LDI     WL,$FF
C:001d15 0f11      DMLZ_M1:ADD     TEMP,TEMP
C:001d16 f411              BRNE    DMLZ_M2
C:001d17 9117              ELPM    TEMP,Z+
C:001d18 1f11              ROL     TEMP
C:001d19 1f88      DMLZ_M2:ROL     WL
C:001d1a f7d0              BRCC    DMLZ_M1
C:001d1b 959a              DEC     WH
C:001d1c f449              BRNE    DMLZ_X2
C:001d1d e002              LDI     DATA,2
C:001d1e 9585              ASR     WL
C:001d1f f080              BRCS    DMLZ_N1
C:001d20 9503              INC     DATA
C:001d21 9583              INC     WL
C:001d22 f051              BREQ    DMLZ_N2
C:001d23 e093              LDI     WH,$03
C:001d24 e38f              LDI     WL,$3F
C:001d25 cfef              RJMP    DMLZ_M1
         
C:001d26 959a      DMLZ_X2:DEC     WH
C:001d27 f4b1              BRNE    DMLZ_X3
C:001d28 9586              LSR     WL
C:001d29 f290              BRCS    DMLZ_MS
C:001d2a 9593              INC     WH
C:001d2b cfe9              RJMP    DMLZ_M1
         
C:001d2c 0f08      DMLZ_X6:ADD     DATA,WL
C:001d2d e094      DMLZ_N2:LDI     WH,$04
C:001d2e ef8f              LDI     WL,$FF
C:001d2f cfe5              RJMP    DMLZ_M1
         
C:001d30 9583      DMLZ_N1:INC     WL
C:001d31 f4d1              BRNE    DMLZ_M4
C:001d32 9593              INC     WH
C:001d33 9587      DMLZ_N5:ROR     WL
C:001d34 f160              BRCS    DMLZ_END
C:001d35 1f99              ROL     WH
C:001d36 0f11              ADD     TEMP,TEMP
C:001d37 f411              BRNE    DMLZ_N6
C:001d38 9117              ELPM    TEMP,Z+
C:001d39 1f11              ROL     TEMP
C:001d3a f7c0      DMLZ_N6:BRCC    DMLZ_N5
C:001d3b 0f09              ADD     DATA,WH
C:001d3c e096              LDI     WH,6
C:001d3d cfd7              RJMP    DMLZ_M1
C:001d3e 959a      DMLZ_X3:DEC     WH
C:001d3f f411              BRNE    DMLZ_X4
C:001d40 e001              LDI     DATA,1
C:001d41 c00b              RJMP    DMLZ_M3
C:001d42 959a      DMLZ_X4:DEC     WH
C:001d43 f429              BRNE    DMLZ_X5
C:001d44 9583              INC     WL
C:001d45 f431              BRNE    DMLZ_M4
C:001d46 e095              LDI     WH,$05
C:001d47 e18f              LDI     WL,$1F
C:001d48 cfcc              RJMP    DMLZ_M1
C:001d49 959a      DMLZ_X5:DEC     WH
C:001d4a f709              BRNE    DMLZ_X6
C:001d4b 2f98              MOV     WH,WL
C:001d4c 9187      DMLZ_M4:ELPM    WL,Z+
C:001d4d 959a      DMLZ_M3:DEC     WH
C:001d4e 2fa8              MOV     XL,WL
C:001d4f 2fb9              MOV     XH,WH
C:001d50 0fa6              ADD     XL,TMP2
C:001d51 1fb7              ADC     XH,TMP3
          DMLZ_LDIR:
C:001d52 50b8              SUBI    XH,HIGH(MEGABUFFER) ;
C:001d53 70b7              ANDI    XH,DBMASK_HI        ;address warp
C:001d54   +          ADDI    XH,HIGH(MEGABUFFER) ;
C:001d54 5fb8      SUBI    XH,(-(HIGH(MEGABUFFER))&$FF)
C:001d55 900d              LD      R0,X+
C:001d56   +          STSZ    DMLZ_Z
C:001d56 93e0 0162 STS     DMLZ_Z,ZL
C:001d58 93f0 0163 STS     DMLZ_Z+1,ZH
C:001d5a   +          LDIZ    DMLZ_REGS
C:001d5a e6e4      LDI     ZL,LOW(DMLZ_REGS)
C:001d5b e0f1      LDI     ZH,HIGH(DMLZ_REGS)
C:001d5c 82e6              STD     Z+DMLZ_JUMP,ONE
C:001d5d cfa6              RJMP    DMLZ_OUT
         
          DMLZ_METKA1:
C:001d5e 950a              DEC     DATA
C:001d5f f791              BRNE    DMLZ_LDIR
         
C:001d60 cfb2              RJMP    DMLZ_M0
         ;
          DMLZ_END:
C:001d61 9418              SEZ
C:001d62 9508              RET
         ;
         ;--------------------------------------
         ;
          ;
          .INCLUDE "_flasher.asm"
         ;01234567890123456789012345678901234567890123456789012
         ;            ZX Evolution Service (101106)            00
         ;┌───────────────┐┌──────────────────────────────────┐01    ┌───────────────┐
         ;│ Exit          ││..          │ <DIR>│31.12.09│23:58│02    │ Выход         │
         ;│ Retrieve all  ││НОВАЯП~1    │ <DIR>│31.12.09│23:58│03    │ Всё снова     │
         ;│√Erase chip    ││NEWFOL~1    │ <DIR>│31.12.09│23:58│04    │ Стереть м/сх. │
         ;│ Add job       ││testram  rom│  2048│31.12.09│23:58│05    │ Добав.задание │
         ;│ Execute jobs  ││filename rom│524288│31.12.09│23:58│06    │ Выполнить     │
         ;└───────────────┘│zxevo    rom│ 65536│31.12.09│23:58│07    └───────────────┘
         ;┌───────────────┐│trdos503 rom│ 16384│31.12.09│23:58│08    ┌───────────────┐
         ;│ Chip: M29F040 ││bigfile  bin│3214 K│31.12.09│23:58│09    │ ChipID: 20 E2 │
         ;│ CRC: 12345678 ││verybig  bin│4095 M│31.12.09│23:58│10    │ CRC: 12345678 │
         ;│ SDcard: FAT32 ││some     rom│   123│31.12.09│23:58│11    │  No SD-card!  │
         ;│ Erase...      ││onemore  bin│  9876│31.12.09│23:58│12    │ Verify...     │
         ;└───────────────┘└──────────────────────────────────┘13    └───────────────┘
         ;┌───────────────────────────────────────────────────┐14
         ;│gluk     rom trdos610 rom basic128 rom basic48  rom│15     секторов(1)  нач.кластер(4)  имя(8+3)  |  итого на ячейку 16
         ;│............ ............ ............ ............│16                                            |  итого на всё   512
         ;│............ ............ ............ ............│17
         ;│............ ............ ............ ............│18
         ;│............ ............ ............ ............│19
         ;│............ ............ ............ ............│20
         ;│............ ............ ............ ............│21
         ;│............ ............ ............ ............│22
         ;└───────────────────────────────────────────────────┘23
         ;               http://www.NedoPC.com/                24
         
         
          MSG_FL_CHIP:
                  .DB     $16, 2, 9,$15,$9F,"Chip",0
C:001D63 160209159F4368697000
          MSG_FL_ID:
                  .DB     "ID: ",0,0
C:001D68 49443A200000
          MSG_FL_M29F040:
                  .DB     ": M29F040",0
C:001D6B 3A204D32394630343000
          MSG_FL_AM29F040:
                  .DB     ":Am29F040",0
C:001D70 3A416D32394630343000
          MSG_FL_CRC:
                  .DB     $16, 2,10,$15,$9F,"CRC: "        ,0,0
C:001D75 16020A159F4352433A200000
          MSG_FL_SDCARD:
                  .DB     $16, 2,11,        "SDcard: FAT"  ,0,0
C:001D7B 16020B5344636172643A204641540000
          MSG_FL_ERASECHIP:
                  .DB     $16,1,4,$FB,0,0
C:001D83 160104FB0000
          MSG_FL_ERRPOS:
                  .DB     $16, 1,11,$15,$AE,0
C:001D86 16010B15AE00
         ;
          WIND_FL_MENU:
                  .DB     0,1,17,7,$9F,$00
C:001D89 000111079F00
          WIND_FL_STATUS:
                  .DB     0,8,17,6,$9F,$00
C:001D8C 000811069F00
          WIND_FL_FILEPANEL:
                  .DB     17,1,36,13,$9F,$00
C:001D8F 1101240D9F00
          WIND_FL_CONTENT:
                  .DB     0,14,53,10,$9F,$00
C:001D92 000E350A9F00
          WIND_FL_RESULT_OK:
                  .DB     11,4,31,6,$CF,$01
C:001D95 0B041F06CF01
          WIND_FL_RESULT_FAIL:
                  .DB     11,4,31,6,$AF,$01
C:001D98 0B041F06AF01
         ;
          FL_UNKNOWN:
                  .DB     "    ????   ",0
C:001D9B 202020203F3F3F3F20202000
          FL_EMPTY:
                  .DB     "   empty   ",0
C:001DA1 202020656D70747920202000
          FL_ZXBAS48:
                  .DB     $A8,$02,$99,$0C ;0C9902A8
C:001DA7 A802990C
                  .DB     "ZX Basic48 ",0
C:001DA9 5A5820426173696334382000
          FL_ZXBAS128:
                  .DB     $C8,$59,$C0,$83 ;83C059C8
C:001DAF C859C083
                  .DB     "ZX Basic128",0
C:001DB1 5A5820426173696331323800
          FL_TRDOS:
                  .DB     $71,$06,$7A,$7A ;7A7A0671
C:001DB7 71067A7A
                  .DB     "TR-DOS     ",0
C:001DB9 54522D444F53202020202000
          FL_ALCOGLUKPEN:
                  .DB     $44,$6F,$D7,$87 ;87D76F44
C:001DBF 446FD787
                  .DB     "AlCoGLUKpen",0
C:001DC1 416C436F474C554B70656E00
          FL_EMPT2:
                  .DB     $AD,$33,$52,$BE ;BE5233AD
C:001DC7 AD3352BE
                  .DB     " * empty*  ",0
C:001DC9 202A20656D7074792A202000
          FL_QC3:
                  .DB     "QC 3"
C:001DCF 51432033
                  .DB     "QC3.xx     ",0
C:001DD1 5143332E7878202020202000
          FL_ATM2CPM:
                  .DB     $1E,$65,$1E,$B3 ;B31E651E
C:001DD7 1E651EB3
                  .DB     "ATM2_CPM   ",0
C:001DD9 41544D325F43504D20202000
          FL_XBIOSMENU:
                  .DB     $BC,$A4,$2C,$29 ;292CA4BC
C:001DDF BCA42C29
                  .DB     "xBIOS stmnu",0
C:001DE1 7842494F532073746D6E7500
          FL_VTRDOS:
                  .DB     $27,$2E,$23,$68 ;68232E27
C:001DE7 272E2368
                  .DB     "vTR-dos    ",0
C:001DE9 7654522D646F732020202000
          FL_TSBIOS:
                  .DB     $FF,$63,$9B,$15 ;159B63FF
C:001DEF FF639B15
                  .DB     "TS-BIOS    ",0
C:001DF1 54532D42494F532020202000
          FL_PROFKA:
                  .DB     "PROFKA     ",0
C:001DF7 50524F464B41202020202000
         ;
          MSG_FP_DIR:
                  .DB     " <DIR>",$B3,0
C:001DFD 203C4449523EB300
         ;
         ;
         ;
         ;--------------------------------------
         ;
          .EQU    FL_CONTENT      =MEGABUFFER
          .EQU    FL_BUFFER       =MEGABUFFER+512
          .DSEG
D:00016b    FL_TMP0:        .BYTE   2
D:00016d    FL_TMP2:        .BYTE   1
          .CSEG
         ;
         ;======================================
         ;чтение ID Flash-ROM чипа
         ;out:   ZL,ZH
C:001e01 d042      F_ID:   RCALL   F_RST
C:001e02 e900              LDI     DATA,$90
C:001e03 d049              RCALL   F_CMD
C:001e04 ea17              LDI     TEMP,FLASH_CTRL
C:001e05 e003              LDI     DATA,0B00000011
C:001e06 d968              RCALL   FPGA_REG
C:001e07 e080              LDI     WL,$00
C:001e08 e090              LDI     WH,$00
C:001e09 e060              LDI     TMP2,$00
C:001e0a d070              RCALL   F_IN
C:001e0b 2fe0              MOV     ZL,DATA
C:001e0c e081              LDI     WL,$01
C:001e0d d06d              RCALL   F_IN
C:001e0e 2ff0              MOV     ZH,DATA
C:001e0f c034              RJMP    F_RST
         ;
         ;--------------------------------------
         ;запись 512 байт во Flash-ROM из буфера BUFSECT
         ;in:    WL,WH == address (LO,MID)
         ;out:   W+512
          F_WRITE512:
C:001e10   +          LDIZ    BUFSECT
C:001e10 e0e0      LDI     ZL,LOW(BUFSECT)
C:001e11 e0f4      LDI     ZH,HIGH(BUFSECT)
C:001e12   +          LDIX    512
C:001e12 e0a0      LDI     XL,LOW(512)
C:001e13 e0b2      LDI     XH,HIGH(512)
         
C:001e14 8100      F_W5122:LD      DATA,Z
C:001e15 3f0f              CPI     DATA,$FF
C:001e16 f0e1              BREQ    F_W5123
C:001e17 ea00              LDI     DATA,$A0
C:001e18 d034              RCALL   F_CMD
C:001e19 ea17              LDI     TEMP,FLASH_CTRL
C:001e1a e001              LDI     DATA,0B00000001
C:001e1b d953              RCALL   FPGA_REG
C:001e1c ea13              LDI     TEMP,FLASH_LOADDR
C:001e1d 2f08              MOV     DATA,WL
C:001e1e d950              RCALL   FPGA_REG
C:001e1f ea14              LDI     TEMP,FLASH_MIDADDR
C:001e20 2f09              MOV     DATA,WH
C:001e21 d94d              RCALL   FPGA_REG
C:001e22 ea16              LDI     TEMP,FLASH_DATA
C:001e23 8100              LD      DATA,Z
C:001e24 d94a              RCALL   FPGA_REG
C:001e25 ea17              LDI     TEMP,FLASH_CTRL
C:001e26 e005              LDI     DATA,0B00000101
C:001e27 d947              RCALL   FPGA_REG
C:001e28 e001              LDI     DATA,0B00000001
C:001e29 d94a              RCALL   FPGA_SAME_REG
C:001e2a e003              LDI     DATA,0B00000011
C:001e2b d948              RCALL   FPGA_SAME_REG
C:001e2c ea16              LDI     TEMP,FLASH_DATA
C:001e2d d941              RCALL   FPGA_REG
C:001e2e d945      F_W5121:RCALL   FPGA_SAME_REG
C:001e2f 8110              LD      TEMP,Z
C:001e30 2701              EOR     DATA,TEMP
C:001e31 fd07              SBRC    DATA,7
C:001e32 cffb              RJMP    F_W5121
         
C:001e33 9631      F_W5123:ADIW    ZL,1
C:001e34 9601              ADIW    WL,1
C:001e35 9711              SBIW    XL,1
C:001e36 f6e9              BRNE    F_W5122
         
C:001e37 9508              RET
         ;
         ;--------------------------------------
         ;стирание всего чипа Flash-ROM
          F_CHIPERASE:
C:001e38 e800              LDI     DATA,$80
C:001e39 d013              RCALL   F_CMD
C:001e3a e100              LDI     DATA,$10
C:001e3b d011              RCALL   F_CMD
C:001e3c ea17      F_ERAS1:LDI     TEMP,FLASH_CTRL
C:001e3d e003              LDI     DATA,0B00000011
C:001e3e d930              RCALL   FPGA_REG
C:001e3f ea16              LDI     TEMP,FLASH_DATA
C:001e40 d92e              RCALL   FPGA_REG
C:001e41 d932      F_ERAS9:RCALL   FPGA_SAME_REG
C:001e42 ff07              SBRS    DATA,7
C:001e43 cffd              RJMP    F_ERAS9
         ;
         ; - - - - - - - - - - - - - - - - - - -
         ;сброс Flash-ROM чипа
C:001e44 ef00      F_RST:  LDI     DATA,$F0
C:001e45 d007              RCALL   F_CMD
C:001e46   +          DELAY_US 5
          .IF (5<70)
C:001e46 e182      LDI     WL,LOW(5*36864/10000)
C:001e47 958a      DLY_US1:DEC     WL      

C:001e48 f7f1      BRNE    DLY_US1 

          .ELSE
C:001e49 ea17              LDI     TEMP,FLASH_CTRL
C:001e4a e003              LDI     DATA,0B00000011
C:001e4b d923              RCALL   FPGA_REG
C:001e4c 9508              RET
         ;
         ;--------------------------------------
         ;комманда в Flash-ROM чип
         ;in:    DATA == instructions
C:001e4d 930f      F_CMD:  PUSH    DATA
C:001e4e ea17              LDI     TEMP,FLASH_CTRL
C:001e4f e001              LDI     DATA,0B00000001
C:001e50 d91e              RCALL   FPGA_REG
C:001e51 ea13              LDI     TEMP,FLASH_LOADDR
C:001e52 e505              LDI     DATA,$55
C:001e53 d91b              RCALL   FPGA_REG
C:001e54 ea14              LDI     TEMP,FLASH_MIDADDR
C:001e55 e505              LDI     DATA,$55
C:001e56 d918              RCALL   FPGA_REG
C:001e57 ea16              LDI     TEMP,FLASH_DATA
C:001e58 ea0a              LDI     DATA,$AA
C:001e59 d915              RCALL   FPGA_REG
C:001e5a ea17              LDI     TEMP,FLASH_CTRL
C:001e5b e005              LDI     DATA,0B00000101
C:001e5c d912              RCALL   FPGA_REG
C:001e5d e001              LDI     DATA,0B00000001
C:001e5e d915              RCALL   FPGA_SAME_REG
C:001e5f ea13              LDI     TEMP,FLASH_LOADDR
C:001e60 ea0a              LDI     DATA,$AA
C:001e61 d90d              RCALL   FPGA_REG
C:001e62 ea14              LDI     TEMP,FLASH_MIDADDR
C:001e63 e20a              LDI     DATA,$2A
C:001e64 d90a              RCALL   FPGA_REG
C:001e65 ea16              LDI     TEMP,FLASH_DATA
C:001e66 e505              LDI     DATA,$55
C:001e67 d907              RCALL   FPGA_REG
C:001e68 ea17              LDI     TEMP,FLASH_CTRL
C:001e69 e005              LDI     DATA,0B00000101
C:001e6a d904              RCALL   FPGA_REG
C:001e6b e001              LDI     DATA,0B00000001
C:001e6c d907              RCALL   FPGA_SAME_REG
C:001e6d ea13              LDI     TEMP,FLASH_LOADDR
C:001e6e e505              LDI     DATA,$55
C:001e6f d8ff              RCALL   FPGA_REG
C:001e70 ea14              LDI     TEMP,FLASH_MIDADDR
C:001e71 e505              LDI     DATA,$55
C:001e72 d8fc              RCALL   FPGA_REG
C:001e73 910f              POP     DATA
C:001e74 ea16      F_WRD:  LDI     TEMP,FLASH_DATA
C:001e75 d8f9              RCALL   FPGA_REG
C:001e76 ea17              LDI     TEMP,FLASH_CTRL
C:001e77 e005              LDI     DATA,0B00000101
C:001e78 d8f6              RCALL   FPGA_REG
C:001e79 e001              LDI     DATA,0B00000001
C:001e7a c8f9              RJMP    FPGA_SAME_REG
         ;
         ;--------------------------------------
         ;чтение одного байта Flash-ROM
         ;in:    WL,WH,TMP2 == address
         ;out:   DATA == data
C:001e7b ea15      F_IN:   LDI     TEMP,FLASH_HIADDR
C:001e7c 2f06              MOV     DATA,TMP2
C:001e7d d8f1              RCALL   FPGA_REG
C:001e7e ea14      F_IN2:  LDI     TEMP,FLASH_MIDADDR
C:001e7f 2f09              MOV     DATA,WH
C:001e80 d8ee              RCALL   FPGA_REG
C:001e81 ea13              LDI     TEMP,FLASH_LOADDR
C:001e82 2f08              MOV     DATA,WL
C:001e83 d8eb              RCALL   FPGA_REG
C:001e84 ea16              LDI     TEMP,FLASH_DATA
C:001e85 ef0f              LDI     DATA,$FF
C:001e86 c8e8              RJMP    FPGA_REG
         ;
         ;--------------------------------------
         ;in:    WH,TMP2 - адрес (mid,hi) в Flash-ROM
         ;       Z - куда (в ОЗУ AVR-а)
         ;       X - сколько байт
          F_READFLASH:; + ещё посчитать crc32, + ещё ...
C:001e87 ea17              LDI     TEMP,FLASH_CTRL
C:001e88 e00b              LDI     DATA,0B00001011
C:001e89 d8e5              RCALL   FPGA_REG
C:001e8a 2788              CLR     WL
C:001e8b dfef              RCALL   F_IN
C:001e8c c001              RJMP    F_RDFL2
C:001e8d d8e6      F_RDFL1:RCALL   FPGA_SAME_REG
C:001e8e 9301      F_RDFL2:ST      Z+,DATA
C:001e8f 2320              AND     COUNT,DATA
C:001e90 940e 2684         CALL    CRC32_UPDATE
C:001e92 9601              ADIW    WL,1
C:001e93 1d6f              ADC     TMP2,NULL
C:001e94 9711              SBIW    XL,1
C:001e95 f7b9              BRNE    F_RDFL1
C:001e96 9508              RET
         ;
         ;======================================
         ;
          .EQU    CRC32_0         =0
          .EQU    CRC32_1         =1
          .EQU    CRC32_2         =2
          .EQU    CRC32_3         =3
          .EQU    FLSH_ADR1       =4
          .EQU    FLSH_ADR2       =5
          .EQU    FLSH_COUNT      =6
          .EQU    FLFP_BUFADR0    =7
          .EQU    FLFP_BUFADR1    =8
          .EQU    FLFP_TOTAL      =9
          .EQU    FLFP_TOP        =10
          .EQU    FLFP_SELECT     =11
          .EQU    FLFP_CURSOR     =12
          .EQU    FLSH_TEMP0      =13
          .EQU    FLSH_TEMP1      =14
          .EQU    FLSH_TEMP2      =15
          .EQU    FLSH_TEMP3      =16
          .EQU    FLSH_START      =17
          .EQU    FLSH_SIZE       =18
          .EQU    FLSH_ERASE      =19
          .EQU    FLMNU_FLAGS     =20
          .EQU    FLMNU_CURSOR    =21
          .EQU    FLMEMSIZE       =22
         ;
          .EQU    FLFP_HEIGHT     =11
          .EQU    FLFP_WIDTH      =34
          .EQU    FLFP_XPOS       =18
          .EQU    FLFP_YPOS       =2
         ;
          FLASHER:
C:001e97   +          GETMEM  FLMEMSIZE
C:001e97 9766      SBIW    YL,FLMEMSIZE
          FL_REVERT:
C:001e98 7f4c              ANDI    FLAGS1,0B11111100
         ;        SBR     FLAGS1,0B00001000
C:001e99   +          STH     FLSH_ERASE,NULL
C:001e99 8afb      STD     Y+FLSH_ERASE,NULL
C:001e9a   +          STH     FLMNU_FLAGS,NULL
C:001e9a 8afc      STD     Y+FLMNU_FLAGS,NULL
C:001e9b e802              LDI     DATA,0B10000010
C:001e9c   +          STH     FLMNU_CURSOR,DATA
C:001e9c 8b0d      STD     Y+FLMNU_CURSOR,DATA
         
C:001e9d   +          LDIX    FL_CONTENT
C:001e9d e0a0      LDI     XL,LOW(FL_CONTENT)
C:001e9e e0b8      LDI     XH,HIGH(FL_CONTENT)
C:001e9f e220              LDI     COUNT,32
          FL_CLRCNT2:
C:001ea0 e800              LDI     DATA,$80
C:001ea1 930d              ST      X+,DATA
C:001ea2 e01f              LDI     TEMP,15
          FL_CLRCNT1:
C:001ea3 92fd              ST      X+,NULL
C:001ea4 951a              DEC     TEMP
C:001ea5 f7e9              BRNE    FL_CLRCNT1
C:001ea6 952a              DEC     COUNT
C:001ea7 f7c1              BRNE    FL_CLRCNT2
         
C:001ea8   +          LDIZ    WIND_FL_MENU*2
C:001ea8 e1e2      LDI     ZL,LOW(WIND_FL_MENU*2)
C:001ea9 e3fb      LDI     ZH,HIGH(WIND_FL_MENU*2)
C:001eaa 940e 157b         CALL    WINDOW
C:001eac   +          LDIZ    WIND_FL_STATUS*2
C:001eac e1e8      LDI     ZL,LOW(WIND_FL_STATUS*2)
C:001ead e3fb      LDI     ZH,HIGH(WIND_FL_STATUS*2)
C:001eae 940e 157b         CALL    WINDOW
C:001eb0   +          LDIZ    WIND_FL_FILEPANEL*2
C:001eb0 e1ee      LDI     ZL,LOW(WIND_FL_FILEPANEL*2)
C:001eb1 e3fb      LDI     ZH,HIGH(WIND_FL_FILEPANEL*2)
C:001eb2 940e 157b         CALL    WINDOW
C:001eb4   +          LDIZ    WIND_FL_CONTENT*2
C:001eb4 e2e4      LDI     ZL,LOW(WIND_FL_CONTENT*2)
C:001eb5 e3fb      LDI     ZH,HIGH(WIND_FL_CONTENT*2)
C:001eb6 940e 157b         CALL    WINDOW
         
C:001eb8   +          LDIZ    MLMSG_FL_MENU*2
C:001eb8 e1e8      LDI     ZL,LOW(MLMSG_FL_MENU*2)
C:001eb9 e0fc      LDI     ZH,HIGH(MLMSG_FL_MENU*2)
C:001eba 940e 1715         CALL    SCR_PRINTMLSTR
C:001ebc d4f9              RCALL   FLMENU_PUTCURSOR
C:001ebd e00f              LDI     DATA,0B00001111
C:001ebe   +          STH     FLMNU_FLAGS,DATA
C:001ebe 8b0c      STD     Y+FLMNU_FLAGS,DATA
         ; - - - - - - - - - - - - - - - - - - -
C:001ebf   +          LDIZ    MSG_FL_CHIP*2
C:001ebf ece6      LDI     ZL,LOW(MSG_FL_CHIP*2)
C:001ec0 e3fa      LDI     ZH,HIGH(MSG_FL_CHIP*2)
C:001ec1 940e 171a         CALL    SCR_PRINTSTRZ
         
C:001ec3 df3d              RCALL   F_ID
C:001ec4 30e1              CPI     ZL,$01
C:001ec5 f429              BRNE    FL_DET_CHIP1
C:001ec6 3af4              CPI     ZH,$A4
C:001ec7 f419              BRNE    FL_DET_CHIP1
C:001ec8   +          LDIZ    MSG_FL_AM29F040*2
C:001ec8 eee0      LDI     ZL,LOW(MSG_FL_AM29F040*2)
C:001ec9 e3fa      LDI     ZH,HIGH(MSG_FL_AM29F040*2)
C:001eca c006              RJMP    FL_DET_CHIP2
          FL_DET_CHIP1:
C:001ecb 32e0              CPI     ZL,$20
C:001ecc f439              BRNE    FL_DET_CHIP8
C:001ecd 3ef2              CPI     ZH,$E2
C:001ece f429              BRNE    FL_DET_CHIP8
C:001ecf   +          LDIZ    MSG_FL_M29F040*2
C:001ecf ede6      LDI     ZL,LOW(MSG_FL_M29F040*2)
C:001ed0 e3fa      LDI     ZH,HIGH(MSG_FL_M29F040*2)
          FL_DET_CHIP2:
C:001ed1 940e 171a         CALL    SCR_PRINTSTRZ
C:001ed3 c011              RJMP    FL_DET_CHIP9
         
          FL_DET_CHIP8:
C:001ed4   +          PUSHZ
C:001ed4 93ef      PUSH    ZL
C:001ed5 93ff      PUSH    ZH
C:001ed6   +          LDIZ    MSG_FL_ID*2
C:001ed6 ede0      LDI     ZL,LOW(MSG_FL_ID*2)
C:001ed7 e3fa      LDI     ZH,HIGH(MSG_FL_ID*2)
C:001ed8 940e 171a         CALL    SCR_PRINTSTRZ
C:001eda   +          POPZ
C:001eda 91ff      POP     ZH
C:001edb 91ef      POP     ZL
C:001edc 2f0e              MOV     DATA,ZL
C:001edd 940e 150f         CALL    HEXBYTE
C:001edf e200              LDI     DATA,$20
C:001ee0 940e 1518         CALL    PUTCHAR
C:001ee2 2f0f              MOV     DATA,ZH
C:001ee3 940e 150f         CALL    HEXBYTE
          FL_DET_CHIP9:
         ; - - - - - - - - - - - - - - - - - - -
C:001ee5   +          LDIZ    MLMSG_FL_READROM*2
C:001ee5 ece2      LDI     ZL,LOW(MLMSG_FL_READROM*2)
C:001ee6 e0fc      LDI     ZH,HIGH(MLMSG_FL_READROM*2)
C:001ee7 940e 1715         CALL    SCR_PRINTMLSTR
C:001ee9   +          STH     FLSH_START,FF
C:001ee9 8ad9      STD     Y+FLSH_START,FF
C:001eea   +          STH     FLSH_SIZE,NULL
C:001eea 8afa      STD     Y+FLSH_SIZE,NULL
C:001eeb d697              RCALL   FL_SHOWCONTENT
         
C:001eec d792              RCALL   CRC32_INIT
C:001eed 2722              CLR     COUNT
C:001eee 2799              CLR     WH
C:001eef 2766              CLR     TMP2
          FL_DET_ROM_00:
C:001ef0   +          STH     FLSH_COUNT,COUNT
C:001ef0 832e      STD     Y+FLSH_COUNT,COUNT
C:001ef1   +          STH     FLSH_ADR1,WH
C:001ef1 839c      STD     Y+FLSH_ADR1,WH
C:001ef2   +          STH     FLSH_ADR2,TMP2
C:001ef2 836d      STD     Y+FLSH_ADR2,TMP2
C:001ef3   +          LDIZ    FL_UNKNOWN*2
C:001ef3 e3e6      LDI     ZL,LOW(FL_UNKNOWN*2)
C:001ef4 e3fb      LDI     ZH,HIGH(FL_UNKNOWN*2)
C:001ef5   +          STSZ    FL_TMP0
C:001ef5 93e0 016b STS     FL_TMP0,ZL
C:001ef7 93f0 016c STS     FL_TMP0+1,ZH
C:001ef9 ef2f              SER     COUNT
         
C:001efa   +          LDIZ    FL_BUFFER
C:001efa e0e0      LDI     ZL,LOW(FL_BUFFER)
C:001efb e0fa      LDI     ZH,HIGH(FL_BUFFER)
C:001efc   +          LDIX    $0400
C:001efc e0a0      LDI     XL,LOW($0400)
C:001efd e0b4      LDI     XH,HIGH($0400)
C:001efe df88              RCALL   F_READFLASH
C:001eff 9320 016d         STS     FL_TMP2,COUNT
         
C:001f01   +          GETMEM  4
C:001f01 9724      SBIW    YL,4
C:001f02   +          LDIZ    FL_BUFFER+$00FF
C:001f02 efef      LDI     ZL,LOW(FL_BUFFER+$00FF)
C:001f03 e0fa      LDI     ZH,HIGH(FL_BUFFER+$00FF)
C:001f04 9101              LD      DATA,Z+
C:001f05 3002              CPI     DATA,$02
C:001f06 f451              BRNE    FL_DET_ROM_10
C:001f07 9101              LD      DATA,Z+
C:001f08 3001              CPI     DATA,$01
C:001f09 f491              BRNE    FL_DET_ROM_11
C:001f0a 9631              ADIW    ZL,1
C:001f0b 9101              LD      DATA,Z+
C:001f0c 3c09              CPI     DATA,$C9
C:001f0d f471              BRNE    FL_DET_ROM_11
C:001f0e   +          LDIZ    FL_PROFKA*2
C:001f0e eeee      LDI     ZL,LOW(FL_PROFKA*2)
C:001f0f e3fb      LDI     ZH,HIGH(FL_PROFKA*2)
C:001f10 c041              RJMP    FL_DET_ROM_12
         
          FL_DET_ROM_10:
C:001f11 3104              CPI     DATA,$14
C:001f12 f449              BRNE    FL_DET_ROM_11
C:001f13 9101              LD      DATA,Z+
C:001f14 3001              CPI     DATA,$01
C:001f15 f431              BRNE    FL_DET_ROM_11
C:001f16 9101              LD      DATA,Z+
C:001f17 3006              CPI     DATA,$06
C:001f18 f419              BRNE    FL_DET_ROM_11
C:001f19   +          LDIZ    FL_PROFKA*2
C:001f19 eeee      LDI     ZL,LOW(FL_PROFKA*2)
C:001f1a e3fb      LDI     ZH,HIGH(FL_PROFKA*2)
C:001f1b c036              RJMP    FL_DET_ROM_12
         
          FL_DET_ROM_11:
C:001f1c   +          LDIZ    FL_BUFFER+$0096
C:001f1c e9e6      LDI     ZL,LOW(FL_BUFFER+$0096)
C:001f1d e0fa      LDI     ZH,HIGH(FL_BUFFER+$0096)
C:001f1e   +          LDIX    $016F
C:001f1e e6af      LDI     XL,LOW($016F)
C:001f1f e0b1      LDI     XH,HIGH($016F)
C:001f20 d781              RCALL   RAM_CRC32
C:001f21   +          LDIZ    FL_ZXBAS48*2
C:001f21 e4ee      LDI     ZL,LOW(FL_ZXBAS48*2)
C:001f22 e3fb      LDI     ZH,HIGH(FL_ZXBAS48*2)
C:001f23 d652              RCALL   FL_CRC_CMP
C:001f24 f169              BREQ    FL_DET_ROM_12
         
C:001f25   +          LDIZ    FL_BUFFER+$0080
C:001f25 e8e0      LDI     ZL,LOW(FL_BUFFER+$0080)
C:001f26 e0fa      LDI     ZH,HIGH(FL_BUFFER+$0080)
C:001f27   +          LDIX    $0080
C:001f27 e8a0      LDI     XL,LOW($0080)
C:001f28 e0b0      LDI     XH,HIGH($0080)
C:001f29 d778              RCALL   RAM_CRC32
C:001f2a   +          LDIZ    FL_ZXBAS128*2
C:001f2a e5ee      LDI     ZL,LOW(FL_ZXBAS128*2)
C:001f2b e3fb      LDI     ZH,HIGH(FL_ZXBAS128*2)
C:001f2c d649              RCALL   FL_CRC_CMP
C:001f2d f121              BREQ    FL_DET_ROM_12
         
C:001f2e   +          LDIZ    FL_BUFFER+$0363
C:001f2e e6e3      LDI     ZL,LOW(FL_BUFFER+$0363)
C:001f2f e0fd      LDI     ZH,HIGH(FL_BUFFER+$0363)
C:001f30   +          LDIX    $0008
C:001f30 e0a8      LDI     XL,LOW($0008)
C:001f31 e0b0      LDI     XH,HIGH($0008)
C:001f32 d76f              RCALL   RAM_CRC32
C:001f33   +          LDIZ    FL_VTRDOS*2
C:001f33 ecee      LDI     ZL,LOW(FL_VTRDOS*2)
C:001f34 e3fb      LDI     ZH,HIGH(FL_VTRDOS*2)
C:001f35 d640              RCALL   FL_CRC_CMP
C:001f36 f0d9              BREQ    FL_DET_ROM_12
         
C:001f37   +          LDIZ    FL_BUFFER+$0000
C:001f37 e0e0      LDI     ZL,LOW(FL_BUFFER+$0000)
C:001f38 e0fa      LDI     ZH,HIGH(FL_BUFFER+$0000)
C:001f39   +          LDIX    $0007
C:001f39 e0a7      LDI     XL,LOW($0007)
C:001f3a e0b0      LDI     XH,HIGH($0007)
C:001f3b d766              RCALL   RAM_CRC32
C:001f3c   +          LDIZ    FL_XBIOSMENU*2
C:001f3c ebee      LDI     ZL,LOW(FL_XBIOSMENU*2)
C:001f3d e3fb      LDI     ZH,HIGH(FL_XBIOSMENU*2)
C:001f3e d637              RCALL   FL_CRC_CMP
C:001f3f f091              BREQ    FL_DET_ROM_12
         
C:001f40   +          LDIZ    FL_BUFFER+$0000
C:001f40 e0e0      LDI     ZL,LOW(FL_BUFFER+$0000)
C:001f41 e0fa      LDI     ZH,HIGH(FL_BUFFER+$0000)
C:001f42   +          LDIX    $0010
C:001f42 e1a0      LDI     XL,LOW($0010)
C:001f43 e0b0      LDI     XH,HIGH($0010)
C:001f44 d75d              RCALL   RAM_CRC32
C:001f45   +          LDIZ    FL_TSBIOS*2
C:001f45 edee      LDI     ZL,LOW(FL_TSBIOS*2)
C:001f46 e3fb      LDI     ZH,HIGH(FL_TSBIOS*2)
C:001f47 d62e              RCALL   FL_CRC_CMP
C:001f48 f049              BREQ    FL_DET_ROM_12
         
C:001f49   +          LDIZ    FL_BUFFER+$0000
C:001f49 e0e0      LDI     ZL,LOW(FL_BUFFER+$0000)
C:001f4a e0fa      LDI     ZH,HIGH(FL_BUFFER+$0000)
C:001f4b   +          LDIX    $0038
C:001f4b e3a8      LDI     XL,LOW($0038)
C:001f4c e0b0      LDI     XH,HIGH($0038)
C:001f4d d754              RCALL   RAM_CRC32
C:001f4e   +          LDIZ    FL_ATM2CPM*2
C:001f4e eaee      LDI     ZL,LOW(FL_ATM2CPM*2)
C:001f4f e3fb      LDI     ZH,HIGH(FL_ATM2CPM*2)
C:001f50 d625              RCALL   FL_CRC_CMP
C:001f51 f421              BRNE    FL_DET_ROM_13
          FL_DET_ROM_12:
C:001f52   +          STSZ    FL_TMP0
C:001f52 93e0 016b STS     FL_TMP0,ZL
C:001f54 93f0 016c STS     FL_TMP0+1,ZH
          FL_DET_ROM_13:
C:001f56   +          FREEMEM 4
C:001f56 9624      ADIW    YL,4
         
C:001f57 2788              CLR     WL
C:001f58   +          LDH     WH,FLSH_ADR1
C:001f58 819c      LDD     WH,Y+FLSH_ADR1
C:001f59   +          ADDI    WH,$04
C:001f59 5f9c      SUBI    WH,(-($04)&$FF)
C:001f5a   +          LDH     TMP2,FLSH_ADR2
C:001f5a 816d      LDD     TMP2,Y+FLSH_ADR2
C:001f5b   +          LDIX    $3800
C:001f5b e0a0      LDI     XL,LOW($3800)
C:001f5c e3b8      LDI     XH,HIGH($3800)
C:001f5d ea17              LDI     TEMP,FLASH_CTRL
C:001f5e e00b              LDI     DATA,0B00001011
C:001f5f d80f              RCALL   FPGA_REG
C:001f60 9120 016d         LDS     COUNT,FL_TMP2
C:001f62 df18              RCALL   F_IN
C:001f63 c001              RJMP    FL_DET_ROM_21
          FL_DET_ROM_20:
C:001f64 d80f              RCALL   FPGA_SAME_REG
          FL_DET_ROM_21:
C:001f65 2320              AND     COUNT,DATA
C:001f66 d71d              RCALL   CRC32_UPDATE
C:001f67 9601              ADIW    WL,1
C:001f68 9711              SBIW    XL,1
C:001f69 f7d1              BRNE    FL_DET_ROM_20
C:001f6a 9320 016d         STS     FL_TMP2,COUNT
         
C:001f6c   +          LDH     WH,FLSH_ADR1
C:001f6c 819c      LDD     WH,Y+FLSH_ADR1
C:001f6d   +          ADDI    WH,$3C
C:001f6d 5c94      SUBI    WH,(-($3C)&$FF)
C:001f6e   +          LDH     TMP2,FLSH_ADR2
C:001f6e 816d      LDD     TMP2,Y+FLSH_ADR2
C:001f6f   +          LDIZ    FL_BUFFER
C:001f6f e0e0      LDI     ZL,LOW(FL_BUFFER)
C:001f70 e0fa      LDI     ZH,HIGH(FL_BUFFER)
C:001f71   +          LDIX    $0400
C:001f71 e0a0      LDI     XL,LOW($0400)
C:001f72 e0b4      LDI     XH,HIGH($0400)
C:001f73 df13              RCALL   F_READFLASH
C:001f74   +          LDIZ    FL_EMPTY*2
C:001f74 e4e2      LDI     ZL,LOW(FL_EMPTY*2)
C:001f75 e3fb      LDI     ZH,HIGH(FL_EMPTY*2)
C:001f76 9523              INC     COUNT
C:001f77 f421              BRNE    FL_DET_ROM_30
C:001f78   +          STSZ    FL_TMP0
C:001f78 93e0 016b STS     FL_TMP0,ZL
C:001f7a 93f0 016c STS     FL_TMP0+1,ZH
          FL_DET_ROM_30:
         
C:001f7c   +          GETMEM  4
C:001f7c 9724      SBIW    YL,4
         
C:001f7d   +          LDIZ    FL_BUFFER+$019B
C:001f7d e9eb      LDI     ZL,LOW(FL_BUFFER+$019B)
C:001f7e e0fb      LDI     ZH,HIGH(FL_BUFFER+$019B)
C:001f7f 8000              LDD     R0,Z+0
C:001f80 8011              LDD     R1,Z+1
C:001f81 8022              LDD     R2,Z+2
C:001f82 8033              LDD     R3,Z+3
C:001f83   +          LDIZ    FL_QC3*2
C:001f83 e9ee      LDI     ZL,LOW(FL_QC3*2)
C:001f84 e3fb      LDI     ZH,HIGH(FL_QC3*2)
C:001f85 d5f0              RCALL   FL_CRC_CMP
C:001f86 f0d1              BREQ    FL_DET_ROM_32
         
C:001f87   +          LDIZ    FL_BUFFER+$012F
C:001f87 e2ef      LDI     ZL,LOW(FL_BUFFER+$012F)
C:001f88 e0fb      LDI     ZH,HIGH(FL_BUFFER+$012F)
C:001f89   +          LDIX    $0209
C:001f89 e0a9      LDI     XL,LOW($0209)
C:001f8a e0b2      LDI     XH,HIGH($0209)
C:001f8b d716              RCALL   RAM_CRC32
C:001f8c   +          LDIZ    FL_ALCOGLUKPEN*2
C:001f8c e7ee      LDI     ZL,LOW(FL_ALCOGLUKPEN*2)
C:001f8d e3fb      LDI     ZH,HIGH(FL_ALCOGLUKPEN*2)
C:001f8e d5e7              RCALL   FL_CRC_CMP
C:001f8f f089              BREQ    FL_DET_ROM_32
C:001f90   +          LDIZ    FL_EMPT2*2
C:001f90 e8ee      LDI     ZL,LOW(FL_EMPT2*2)
C:001f91 e3fb      LDI     ZH,HIGH(FL_EMPT2*2)
C:001f92 d5e3              RCALL   FL_CRC_CMP
C:001f93 f421              BRNE    FL_DET_ROM_31
C:001f94 9100 016d         LDS     DATA,FL_TMP2
C:001f96 9503              INC     DATA
C:001f97 f049              BREQ    FL_DET_ROM_32
         
          FL_DET_ROM_31:
C:001f98   +          LDIZ    FL_BUFFER+$03B0
C:001f98 ebe0      LDI     ZL,LOW(FL_BUFFER+$03B0)
C:001f99 e0fd      LDI     ZH,HIGH(FL_BUFFER+$03B0)
C:001f9a   +          LDIX    $0040
C:001f9a e4a0      LDI     XL,LOW($0040)
C:001f9b e0b0      LDI     XH,HIGH($0040)
C:001f9c d705              RCALL   RAM_CRC32
C:001f9d   +          LDIZ    FL_TRDOS*2
C:001f9d e6ee      LDI     ZL,LOW(FL_TRDOS*2)
C:001f9e e3fb      LDI     ZH,HIGH(FL_TRDOS*2)
C:001f9f d5d6              RCALL   FL_CRC_CMP
C:001fa0 f421              BRNE    FL_DET_ROM_33
          FL_DET_ROM_32:
C:001fa1   +          STSZ    FL_TMP0
C:001fa1 93e0 016b STS     FL_TMP0,ZL
C:001fa3 93f0 016c STS     FL_TMP0+1,ZH
          FL_DET_ROM_33:
         
C:001fa5   +          FREEMEM 4
C:001fa5 9624      ADIW    YL,4
         
C:001fa6   +          LDIZ    FL_BUFFER+$03F8
C:001fa6 efe8      LDI     ZL,LOW(FL_BUFFER+$03F8)
C:001fa7 e0fd      LDI     ZH,HIGH(FL_BUFFER+$03F8)
C:001fa8 e026              LDI     COUNT,6
          FL_DET_ROM_34:
C:001fa9 9101              LD      DATA,Z+
C:001faa 3200              CPI     DATA,$20
C:001fab f0b8              BRCS    FL_DET_ROM_37
C:001fac 370f              CPI     DATA,$7F
C:001fad f4a8              BRCC    FL_DET_ROM_37
C:001fae 952a              DEC     COUNT
C:001faf f7c9              BRNE    FL_DET_ROM_34
         
C:001fb0   +          LDIZ    FL_BUFFER+$03F8
C:001fb0 efe8      LDI     ZL,LOW(FL_BUFFER+$03F8)
C:001fb1 e0fd      LDI     ZH,HIGH(FL_BUFFER+$03F8)
C:001fb2   +          LDIX    FL_CONTENT+5
C:001fb2 e0a5      LDI     XL,LOW(FL_CONTENT+5)
C:001fb3 e0b8      LDI     XH,HIGH(FL_CONTENT+5)
C:001fb4   +          LDH     DATA,FLSH_COUNT
C:001fb4 810e      LDD     DATA,Y+FLSH_COUNT
C:001fb5 e110              LDI     TEMP,16
C:001fb6 9f01              MUL     DATA,TEMP
C:001fb7 0da0              ADD     XL,R0
C:001fb8 1db1              ADC     XH,R1
C:001fb9 e026              LDI     COUNT,6
          FL_DET_ROM_35:
C:001fba 9101              LD      DATA,Z+
C:001fbb 930d              ST      X+,DATA
C:001fbc 952a              DEC     COUNT
C:001fbd f7e1              BRNE    FL_DET_ROM_35
C:001fbe e025              LDI     COUNT,5
          FL_DET_ROM_36:
C:001fbf 92fd              ST      X+,NULL
C:001fc0 952a              DEC     COUNT
C:001fc1 f7e9              BRNE    FL_DET_ROM_36
C:001fc2 c010              RJMP    FL_DET_ROM_40
         
          FL_DET_ROM_37:
C:001fc3   +          LDSZ    FL_TMP0
C:001fc3 91e0 016b LDS     ZL,FL_TMP0
C:001fc5 91f0 016c LDS     ZH,FL_TMP0+1
C:001fc7   +          LDIX    FL_CONTENT+5
C:001fc7 e0a5      LDI     XL,LOW(FL_CONTENT+5)
C:001fc8 e0b8      LDI     XH,HIGH(FL_CONTENT+5)
C:001fc9   +          LDH     DATA,FLSH_COUNT
C:001fc9 810e      LDD     DATA,Y+FLSH_COUNT
C:001fca e110              LDI     TEMP,16
C:001fcb 9f01              MUL     DATA,TEMP
C:001fcc 0da0              ADD     XL,R0
C:001fcd 1db1              ADC     XH,R1
C:001fce e02b              LDI     COUNT,11
          FL_DET_ROM_38:
C:001fcf 9105              LPM     DATA,Z+
C:001fd0 930d              ST      X+,DATA
C:001fd1 952a              DEC     COUNT
C:001fd2 f7e1              BRNE    FL_DET_ROM_38
         
          FL_DET_ROM_40:
C:001fd3 d5af              RCALL   FL_SHOWCONTENT
         
C:001fd4 940e 0ffc         CALL    INKEY
C:001fd6 f029              BREQ    FL_DET_ROM_41
C:001fd7 fd11              SBRC    TEMP,PS2K_BIT_EXTKEY
C:001fd8 c003              RJMP    FL_DET_ROM_41
C:001fd9 3706              CPI     DATA,KEY_ESC
C:001fda f409              BRNE    FL_DET_ROM_41
C:001fdb c072              RJMP    FLSH_EXIT
          FL_DET_ROM_41:
C:001fdc   +          LDH     WH,FLSH_ADR1
C:001fdc 819c      LDD     WH,Y+FLSH_ADR1
C:001fdd   +          LDH     TMP2,FLSH_ADR2
C:001fdd 816d      LDD     TMP2,Y+FLSH_ADR2
C:001fde e410              LDI     TEMP,$40
C:001fdf 0f91              ADD     WH,TEMP
C:001fe0 1d6f              ADC     TMP2,NULL
C:001fe1   +          LDH     COUNT,FLSH_COUNT
C:001fe1 812e      LDD     COUNT,Y+FLSH_COUNT
C:001fe2 9523              INC     COUNT
C:001fe3 ff25              SBRS    COUNT,5 ; COUNT==32 ?
C:001fe4 cf0b              RJMP    FL_DET_ROM_00
         
C:001fe5 d6be              RCALL   CRC32_RELEASE
C:001fe6   +          LDIZ    MSG_FL_CRC*2
C:001fe6 eeea      LDI     ZL,LOW(MSG_FL_CRC*2)
C:001fe7 e3fa      LDI     ZH,HIGH(MSG_FL_CRC*2)
C:001fe8 940e 171a         CALL    SCR_PRINTSTRZ
C:001fea   +          LDH     DATA,CRC32_3
C:001fea 810b      LDD     DATA,Y+CRC32_3
C:001feb 940e 150f         CALL    HEXBYTE
C:001fed   +          LDH     DATA,CRC32_2
C:001fed 810a      LDD     DATA,Y+CRC32_2
C:001fee 940e 150f         CALL    HEXBYTE
C:001ff0   +          LDH     DATA,CRC32_1
C:001ff0 8109      LDD     DATA,Y+CRC32_1
C:001ff1 940e 150f         CALL    HEXBYTE
C:001ff3   +          LDH     DATA,CRC32_0
C:001ff3 8108      LDD     DATA,Y+CRC32_0
C:001ff4 940e 150f         CALL    HEXBYTE
         ; - - - - - - - - - - - - - - - - - - -
C:001ff6   +          LDIZ    MLMSG_FL_SDINIT*2
C:001ff6 e0ee      LDI     ZL,LOW(MLMSG_FL_SDINIT*2)
C:001ff7 e0fd      LDI     ZH,HIGH(MLMSG_FL_SDINIT*2)
C:001ff8 940e 1715         CALL    SCR_PRINTMLSTR
         
C:001ffa b71d              IN      TEMP,SPL
C:001ffb 9310 0105         STS     GLB_STACK+0,TEMP
C:001ffd b71e              IN      TEMP,SPH
C:001ffe 9310 0106         STS     GLB_STACK+1,TEMP
C:002000 93c0 0107         STS     GLB_Y+0,YL
C:002002 93d0 0108         STS     GLB_Y+1,YH
C:002004   +          LDIZ    FL_ERRHANDLER
C:002004 efe2      LDI     ZL,LOW(FL_ERRHANDLER)
C:002005 e2f1      LDI     ZH,HIGH(FL_ERRHANDLER)
C:002006 d981              RCALL   SD_FAT_INIT
         
C:002007   +          PUSHX
C:002007 93af      PUSH    XL
C:002008 93bf      PUSH    XH
C:002009   +          PUSHW
C:002009 938f      PUSH    WL
C:00200a 939f      PUSH    WH
C:00200b   +          LDIZ    MSG_FL_SDCARD*2
C:00200b efe6      LDI     ZL,LOW(MSG_FL_SDCARD*2)
C:00200c e3fa      LDI     ZH,HIGH(MSG_FL_SDCARD*2)
C:00200d 940e 171a         CALL    SCR_PRINTSTRZ
C:00200f 9160 0127         LDS     TMP2,FAT_CAL_FAT
C:002011 e301              LDI     DATA,$31 ;"1"
C:002012 e312              LDI     TEMP,$32 ;"2"
C:002013 2366              TST     TMP2
C:002014 f029              BREQ    FP_SDI1
C:002015 e316              LDI     TEMP,$36 ;"6"
C:002016 956a              DEC     TMP2
C:002017 f011              BREQ    FP_SDI1
C:002018 e303              LDI     DATA,$33 ;"3"
C:002019 e312              LDI     TEMP,$32 ;"2"
C:00201a 931f      FP_SDI1:PUSH    TEMP
C:00201b 940e 1742         CALL    SCR_PUTCHAR
C:00201d 910f              POP     DATA
C:00201e 940e 1742         CALL    SCR_PUTCHAR
C:002020   +          POPW
C:002020 919f      POP     WH
C:002021 918f      POP     WL
C:002022   +          POPX
C:002022 91bf      POP     XH
C:002023 91af      POP     XL
         
C:002024 d3b9              RCALL   FP_RD_DIR
C:002025   +          STH     FLFP_CURSOR,FF
C:002025 86dc      STD     Y+FLFP_CURSOR,FF
C:002026 d434              RCALL   FP_OUT
C:002027   +          STH     FLFP_CURSOR,NULL
C:002027 86fc      STD     Y+FLFP_CURSOR,NULL
         ; - - - - - - - - - - - - - - - - - - -
C:002028   +  FLMENU1:LDH     DATA,FLMNU_CURSOR
C:002028 890d      LDD     DATA,Y+FLMNU_CURSOR
C:002029 710f              ANDI    DATA,0B00011111
C:00202a   +  FLMENU2:STH     FLMNU_CURSOR,DATA
C:00202a 8b0d      STD     Y+FLMNU_CURSOR,DATA
C:00202b d38a              RCALL   FLMENU_PUTCURSOR
C:00202c 940e 0fef FLMENU0:CALL    WAITKEY
C:00202e 3705              CPI     DATA,KEY_UP
C:00202f f041              BREQ    FLMENU_UP
C:002030 3702              CPI     DATA,KEY_DOWN
C:002031 f079              BREQ    FLMENU_DOWN
C:002032 350a              CPI     DATA,KEY_ENTER
C:002033 f0a1              BREQ    FLMENU_ENTER
C:002034 3706              CPI     DATA,KEY_ESC
C:002035 f7b1              BRNE    FLMENU0
C:002036 e001              LDI     DATA,0B00000001
C:002037 cff2              RJMP    FLMENU2
         ;
          FLMENU_UP:
C:002038   +          LDH     DATA,FLMNU_CURSOR
C:002038 890d      LDD     DATA,Y+FLMNU_CURSOR
          FLMENU_U1:
C:002039 9506              LSR     DATA
C:00203a f388              BRCS    FLMENU0
C:00203b   +          LDH     TEMP,FLMNU_FLAGS
C:00203b 891c      LDD     TEMP,Y+FLMNU_FLAGS
C:00203c 2310              AND     TEMP,DATA
C:00203d f409              BRNE    FLMENU_U2
C:00203e cffa              RJMP    FLMENU_U1
          FLMENU_U2:
C:00203f   +          STH     FLMNU_CURSOR,DATA
C:00203f 8b0d      STD     Y+FLMNU_CURSOR,DATA
C:002040 cfe7              RJMP    FLMENU1
         ;
          FLMENU_DOWN:
C:002041   +          LDH     DATA,FLMNU_CURSOR
C:002041 890d      LDD     DATA,Y+FLMNU_CURSOR
          FLMENU_D1:
C:002042 0f00              LSL     DATA
C:002043 f340              BRCS    FLMENU0
C:002044   +          LDH     TEMP,FLMNU_FLAGS
C:002044 891c      LDD     TEMP,Y+FLMNU_FLAGS
C:002045 2310              AND     TEMP,DATA
C:002046 f7c1              BRNE    FLMENU_U2
C:002047 cffa              RJMP    FLMENU_D1
         ;
          FLMENU_ENTER:
C:002048   +          LDH     DATA,FLMNU_CURSOR
C:002048 890d      LDD     DATA,Y+FLMNU_CURSOR
C:002049   +          LDH     TEMP,FLMNU_FLAGS
C:002049 891c      LDD     TEMP,Y+FLMNU_FLAGS
C:00204a 2301              AND     DATA,TEMP
C:00204b f301              BREQ    FLMENU0
C:00204c 9506              LSR     DATA
C:00204d f410              BRCC    FLMENU_E1
          FLSH_EXIT:
C:00204e   +          FREEMEM FLMEMSIZE
C:00204e 9666      ADIW    YL,FLMEMSIZE
C:00204f 9508              RET
          FLMENU_E1:
C:002050 9506              LSR     DATA
C:002051 f408              BRCC    FLMENU_E2
C:002052 ce45              RJMP    FL_REVERT
          FLMENU_E2:
C:002053 9506              LSR     DATA
C:002054 f408              BRCC    FLMENU_E3
C:002055 c1c6              RJMP    FL_ERASEJOB
          FLMENU_E3:
C:002056 9506              LSR     DATA
C:002057 f428              BRCC    FLMENU_E4
C:002058   +          LDH     DATA,FLMNU_CURSOR
C:002058 890d      LDD     DATA,Y+FLMNU_CURSOR
C:002059 6800              ORI     DATA,0B10000000
C:00205a   +          STH     FLMNU_CURSOR,DATA
C:00205a 8b0d      STD     Y+FLMNU_CURSOR,DATA
C:00205b d35a              RCALL   FLMENU_PUTCURSOR
C:00205c c1e1              RJMP    FP_FS1
          FLMENU_E4:
C:00205d 9506              LSR     DATA
C:00205e f008              BRCS    FLMENU_E5
C:00205f cfcc              RJMP    FLMENU0
         ;
          FLMENU_E5: ; execute job(s)
         ;        SBR     FLAGS1,0B00001000
C:002060   +          LDH     DATA,FLMNU_CURSOR
C:002060 890d      LDD     DATA,Y+FLMNU_CURSOR
C:002061 6800              ORI     DATA,0B10000000
C:002062   +          STH     FLMNU_CURSOR,DATA
C:002062 8b0d      STD     Y+FLMNU_CURSOR,DATA
C:002063 d352              RCALL   FLMENU_PUTCURSOR
         
C:002064   +          LDIZ    MLMSG_FL_SURE*2
C:002064 eeee      LDI     ZL,LOW(MLMSG_FL_SURE*2)
C:002065 e0fd      LDI     ZH,HIGH(MLMSG_FL_SURE*2)
C:002066 940e 1715         CALL    SCR_PRINTMLSTR
C:002068 940e 0fef         CALL    WAITKEY
C:00206a fd11              SBRC    TEMP,PS2K_BIT_EXTKEY
C:00206b c002              RJMP    FL_EX01
C:00206c 3305              CPI     DATA,KEY_Y
C:00206d f051              BREQ    FL_EX09
C:00206e e0a2      FL_EX01:LDI     XL,2
C:00206f e0bc              LDI     XH,12
C:002070 940e 1708         CALL    SCR_SET_CURSOR
C:002072 e200              LDI     DATA,$20
C:002073 e91f              LDI     TEMP,$9F
C:002074 e02d              LDI     COUNT,13
C:002075 940e 1747         CALL    SCR_FILL_CHAR_ATTR
C:002077 cfb0              RJMP    FLMENU1
          FL_EX09:
         ;
C:002078 e01e              LDI     TEMP,$0E
C:002079 940e 1705         CALL    SCR_SET_ATTR
C:00207b   +          LDH     DATA,FLSH_ERASE
C:00207b 890b      LDD     DATA,Y+FLSH_ERASE
C:00207c e020              LDI     COUNT,0
C:00207d 9506      FL_EX12:LSR     DATA
C:00207e f518              BRCC    FL_EX11
         
C:00207f 930f              PUSH    DATA
C:002080 932f              PUSH    COUNT
C:002081 0f22              LSL     COUNT
C:002082 0f22              LSL     COUNT
C:002083 932f              PUSH    COUNT
C:002084 d525              RCALL   FL_SHW_SETCURSOR
C:002085 e405              LDI     DATA,$45;"E"
C:002086 e02c              LDI     COUNT,12
C:002087 940e 174c         CALL    SCR_FILL_CHAR
C:002089 912f              POP     COUNT
C:00208a 9523              INC     COUNT
C:00208b 932f              PUSH    COUNT
C:00208c d51d              RCALL   FL_SHW_SETCURSOR
C:00208d e405              LDI     DATA,$45;"E"
C:00208e e02c              LDI     COUNT,12
C:00208f 940e 174c         CALL    SCR_FILL_CHAR
C:002091 912f              POP     COUNT
C:002092 9523              INC     COUNT
C:002093 932f              PUSH    COUNT
C:002094 d515              RCALL   FL_SHW_SETCURSOR
C:002095 e405              LDI     DATA,$45;"E"
C:002096 e02c              LDI     COUNT,12
C:002097 940e 174c         CALL    SCR_FILL_CHAR
C:002099 912f              POP     COUNT
C:00209a 9523              INC     COUNT
C:00209b d50e              RCALL   FL_SHW_SETCURSOR
C:00209c e405              LDI     DATA,$45;"E"
C:00209d e02c              LDI     COUNT,12
C:00209e 940e 174c         CALL    SCR_FILL_CHAR
C:0020a0 912f              POP     COUNT
C:0020a1 910f              POP     DATA
         
C:0020a2 9523      FL_EX11:INC     COUNT
C:0020a3 3028              CPI     COUNT,8
C:0020a4 f6c1              BRNE    FL_EX12
         
C:0020a5   +          LDIZ    MLMSG_FL_ERASE*2
C:0020a5 e1ea      LDI     ZL,LOW(MLMSG_FL_ERASE*2)
C:0020a6 e0fe      LDI     ZH,HIGH(MLMSG_FL_ERASE*2)
C:0020a7 940e 1715         CALL    SCR_PRINTMLSTR
C:0020a9   +          LDH     DATA,FLSH_ERASE
C:0020a9 890b      LDD     DATA,Y+FLSH_ERASE
C:0020aa 3f0f              CPI     DATA,$FF
C:0020ab f411              BRNE    FL_EX15
C:0020ac dd8b              RCALL   F_CHIPERASE
C:0020ad c02d              RJMP    FL_EX20
          FL_EX15:
C:0020ae ef6f              LDI     TMP2,$FF
C:0020af 9563      FL_EX16:INC     TMP2
C:0020b0 9506              LSR     DATA
C:0020b1 f7e8              BRCC    FL_EX16
C:0020b2 930f              PUSH    DATA
C:0020b3 936f              PUSH    TMP2
C:0020b4 e800              LDI     DATA,$80
C:0020b5 dd97              RCALL   F_CMD
C:0020b6 ea15              LDI     TEMP,FLASH_HIADDR
C:0020b7 910f              POP     DATA
C:0020b8 930f              PUSH    DATA
C:0020b9 940e 176f         CALL    FPGA_REG
C:0020bb e300              LDI     DATA,$30
C:0020bc dd90              RCALL   F_CMD
C:0020bd 916f              POP     TMP2
C:0020be 910f              POP     DATA
C:0020bf 9563      FL_EX18:INC     TMP2
C:0020c0 3068              CPI     TMP2,8
C:0020c1 f468              BRCC    FL_EX17
C:0020c2 9506              LSR     DATA
C:0020c3 f7d8              BRCC    FL_EX18
C:0020c4 930f              PUSH    DATA
C:0020c5 936f              PUSH    TMP2
C:0020c6 ea15              LDI     TEMP,FLASH_HIADDR
C:0020c7 2f06              MOV     DATA,TMP2
C:0020c8 940e 176f         CALL    FPGA_REG
C:0020ca e300              LDI     DATA,$30
C:0020cb dda8              RCALL   F_WRD
C:0020cc 916f              POP     TMP2
C:0020cd 910f              POP     DATA
C:0020ce cff0              RJMP    FL_EX18
          FL_EX17:
C:0020cf ea17              LDI     TEMP,FLASH_CTRL
C:0020d0 e003              LDI     DATA,0B00000011
C:0020d1 940e 176f         CALL    FPGA_REG
C:0020d3 ea16              LDI     TEMP,FLASH_DATA
C:0020d4 940e 176f         CALL    FPGA_REG
C:0020d6 940e 1774 FL_EX19:CALL    FPGA_SAME_REG
C:0020d8 ff03              SBRS    DATA,3
C:0020d9 cffc              RJMP    FL_EX19
C:0020da dd61              RCALL   F_ERAS1
          FL_EX20:
         ;
C:0020db   +          LDIZ    MLMSG_FL_WRITE*2
C:0020db e4e6      LDI     ZL,LOW(MLMSG_FL_WRITE*2)
C:0020dc e0fe      LDI     ZH,HIGH(MLMSG_FL_WRITE*2)
C:0020dd 940e 1715         CALL    SCR_PRINTMLSTR
C:0020df e01a              LDI     TEMP,$0A
C:0020e0 940e 1705         CALL    SCR_SET_ATTR
         
C:0020e2 e020              LDI     COUNT,0
C:0020e3   +  FL_EX30:STH     FLSH_COUNT,COUNT
C:0020e3 832e      STD     Y+FLSH_COUNT,COUNT
C:0020e4   +          LDIZ    FL_CONTENT
C:0020e4 e0e0      LDI     ZL,LOW(FL_CONTENT)
C:0020e5 e0f8      LDI     ZH,HIGH(FL_CONTENT)
C:0020e6 e110              LDI     TEMP,16
C:0020e7 9f12              MUL     TEMP,COUNT
C:0020e8 0de0              ADD     ZL,R0
C:0020e9 1df1              ADC     ZH,R1
C:0020ea 8180              LD      WL,Z
C:0020eb 738f              ANDI    WL,$3F
C:0020ec f011              BREQ    FL_EX390
C:0020ed 3281              CPI     WL,33
C:0020ee f008              BRCS    FL_EX31
C:0020ef c055      FL_EX390:RJMP   FL_EX39
C:0020f0   +  FL_EX31:STH     FLSH_SIZE,WL
C:0020f0 8b8a      STD     Y+FLSH_SIZE,WL
C:0020f1 2799              CLR     WH
C:0020f2 27aa              CLR     XL
C:0020f3 27bb              CLR     XH
C:0020f4 8110              LD      TEMP,Z
C:0020f5 fd16              SBRC    TEMP,6
C:0020f6 9680              ADIW    WL,32
C:0020f7 9701              SBIW    WL,1
C:0020f8 9100 0129         LDS     DATA,FAT_BYTSSEC
C:0020fa 950a              DEC     DATA
C:0020fb 2308              AND     DATA,WL
C:0020fc 9503              INC     DATA
C:0020fd 9300 0156         STS     FAT_MPHWOST,DATA
C:0020ff 9100 0129         LDS     DATA,FAT_BYTSSEC
C:002101 db50              RCALL   BCDE_A
C:002102   +          STSW    FAT_KOL_CLS+0
C:002102 9380 0157 STS     FAT_KOL_CLS+0,WL
C:002104 9390 0158 STS     FAT_KOL_CLS+0+1,WH
C:002106   +          STSX    FAT_KOL_CLS+2
C:002106 93a0 0159 STS     FAT_KOL_CLS+2,XL
C:002108 93b0 015a STS     FAT_KOL_CLS+2+1,XH
C:00210a 92f0 0151         STS     FAT_NUMSECK,NULL
C:00210c 8181              LDD     WL,Z+1
C:00210d 8192              LDD     WH,Z+2
C:00210e 81a3              LDD     XL,Z+3
C:00210f 81b4              LDD     XH,Z+4
C:002110   +          STSW    FAT_TFILCLS+0
C:002110 9380 0152 STS     FAT_TFILCLS+0,WL
C:002112 9390 0153 STS     FAT_TFILCLS+0+1,WH
C:002114   +          STSX    FAT_TFILCLS+2
C:002114 93a0 0154 STS     FAT_TFILCLS+2,XL
C:002116 93b0 0155 STS     FAT_TFILCLS+2+1,XH
         
C:002118 8110              LD      TEMP,Z
C:002119 ff16              SBRS    TEMP,6
C:00211a c006              RJMP    FL_EX32
C:00211b e220              LDI     COUNT,32
C:00211c 932f      FL_EX33:PUSH    COUNT
C:00211d db5c              RCALL   NEXTSEC
C:00211e 912f              POP     COUNT
C:00211f 952a              DEC     COUNT
C:002120 f7d9              BRNE    FL_EX33
         
C:002121   +  FL_EX32:LDH     COUNT,FLSH_COUNT
C:002121 812e      LDD     COUNT,Y+FLSH_COUNT
C:002122 d487              RCALL   FL_SHW_SETCURSOR
C:002123 2799              CLR     WH
C:002124   +          LDH     TMP2,FLSH_COUNT
C:002124 816e      LDD     TMP2,Y+FLSH_COUNT
C:002125 9566              LSR     TMP2
C:002126 9597              ROR     WH
C:002127 9566              LSR     TMP2
C:002128 9597              ROR     WH
C:002129 ea15              LDI     TEMP,FLASH_HIADDR
C:00212a 2f06              MOV     DATA,TMP2
C:00212b 940e 176f         CALL    FPGA_REG
C:00212d   +          LDIX    1365 ;16384/12
C:00212d e5a5      LDI     XL,LOW(1365)
C:00212e e0b5      LDI     XH,HIGH(1365)
C:00212f   +  FL_EX35:STH     FLSH_TEMP0,XL
C:00212f 87ad      STD     Y+FLSH_TEMP0,XL
C:002130   +          STH     FLSH_TEMP1,XH
C:002130 87be      STD     Y+FLSH_TEMP1,XH
C:002131 939f              PUSH    WH
C:002132 db47              RCALL   NEXTSEC
C:002133 919f              POP     WH
C:002134 2788              CLR     WL
C:002135 dcda              RCALL   F_WRITE512
C:002136   +          LDH     XL,FLSH_TEMP0
C:002136 85ad      LDD     XL,Y+FLSH_TEMP0
C:002137   +          LDH     XH,FLSH_TEMP1
C:002137 85be      LDD     XH,Y+FLSH_TEMP1
C:002138 50b2              SUBI    XH,2 ;HIGH(512)
C:002139 f438              BRCC    FL_EX34
C:00213a e507              LDI     DATA,$57;"W"
C:00213b 940e 1742         CALL    SCR_PUTCHAR
C:00213d e515              LDI     TEMP,LOW(1365)
C:00213e 0fa1              ADD     XL,TEMP
C:00213f e015              LDI     TEMP,HIGH(1365)
C:002140 1fb1              ADC     XH,TEMP
C:002141   +  FL_EX34:LDH     TEMP,FLSH_SIZE
C:002141 891a      LDD     TEMP,Y+FLSH_SIZE
C:002142 951a              DEC     TEMP
C:002143   +          STH     FLSH_SIZE,TEMP
C:002143 8b1a      STD     Y+FLSH_SIZE,TEMP
C:002144 f751              BRNE    FL_EX35
         
C:002145   +  FL_EX39:LDH     COUNT,FLSH_COUNT
C:002145 812e      LDD     COUNT,Y+FLSH_COUNT
C:002146 9523              INC     COUNT
C:002147 ff25              SBRS    COUNT,5 ;COUNT=32
C:002148 cf9a              RJMP    FL_EX30
         ;
C:002149 dcfa              RCALL   F_RST
C:00214a ea17              LDI     TEMP,FLASH_CTRL
C:00214b e003              LDI     DATA,0B00000011
C:00214c 940e 176f         CALL    FPGA_REG
         
C:00214e   +          LDIZ    MLMSG_FL_VERIFY*2
C:00214e e7e2      LDI     ZL,LOW(MLMSG_FL_VERIFY*2)
C:00214f e0fe      LDI     ZH,HIGH(MLMSG_FL_VERIFY*2)
C:002150 940e 1715         CALL    SCR_PRINTMLSTR
         
C:002152   +          STH     FLSH_TEMP3,NULL
C:002152 8af8      STD     Y+FLSH_TEMP3,NULL
C:002153 e020              LDI     COUNT,0
C:002154   +  FL_EX40:STH     FLSH_COUNT,COUNT
C:002154 832e      STD     Y+FLSH_COUNT,COUNT
C:002155   +          LDIZ    FL_CONTENT
C:002155 e0e0      LDI     ZL,LOW(FL_CONTENT)
C:002156 e0f8      LDI     ZH,HIGH(FL_CONTENT)
C:002157 e110              LDI     TEMP,16
C:002158 9f12              MUL     TEMP,COUNT
C:002159 0de0              ADD     ZL,R0
C:00215a 1df1              ADC     ZH,R1
C:00215b 8180              LD      WL,Z
C:00215c 738f              ANDI    WL,$3F
C:00215d f011              BREQ    FL_EX490
C:00215e 3281              CPI     WL,33
C:00215f f008              BRCS    FL_EX41
C:002160 c070      FL_EX490:RJMP   FL_EX49
C:002161   +  FL_EX41:STH     FLSH_SIZE,WL
C:002161 8b8a      STD     Y+FLSH_SIZE,WL
C:002162 2799              CLR     WH
C:002163 27aa              CLR     XL
C:002164 27bb              CLR     XH
C:002165 8110              LD      TEMP,Z
C:002166 fd16              SBRC    TEMP,6
C:002167 9680              ADIW    WL,32
C:002168 9701              SBIW    WL,1
C:002169 9100 0129         LDS     DATA,FAT_BYTSSEC
C:00216b 950a              DEC     DATA
C:00216c 2308              AND     DATA,WL
C:00216d 9503              INC     DATA
C:00216e 9300 0156         STS     FAT_MPHWOST,DATA
C:002170 9100 0129         LDS     DATA,FAT_BYTSSEC
C:002172 dadf              RCALL   BCDE_A
C:002173   +          STSW    FAT_KOL_CLS+0
C:002173 9380 0157 STS     FAT_KOL_CLS+0,WL
C:002175 9390 0158 STS     FAT_KOL_CLS+0+1,WH
C:002177   +          STSX    FAT_KOL_CLS+2
C:002177 93a0 0159 STS     FAT_KOL_CLS+2,XL
C:002179 93b0 015a STS     FAT_KOL_CLS+2+1,XH
C:00217b 92f0 0151         STS     FAT_NUMSECK,NULL
C:00217d 8181              LDD     WL,Z+1
C:00217e 8192              LDD     WH,Z+2
C:00217f 81a3              LDD     XL,Z+3
C:002180 81b4              LDD     XH,Z+4
C:002181   +          STSW    FAT_TFILCLS+0
C:002181 9380 0152 STS     FAT_TFILCLS+0,WL
C:002183 9390 0153 STS     FAT_TFILCLS+0+1,WH
C:002185   +          STSX    FAT_TFILCLS+2
C:002185 93a0 0154 STS     FAT_TFILCLS+2,XL
C:002187 93b0 0155 STS     FAT_TFILCLS+2+1,XH
         
C:002189 8110              LD      TEMP,Z
C:00218a ff16              SBRS    TEMP,6
C:00218b c006              RJMP    FL_EX42
C:00218c e220              LDI     COUNT,32
C:00218d 932f      FL_EX43:PUSH    COUNT
C:00218e daeb              RCALL   NEXTSEC
C:00218f 912f              POP     COUNT
C:002190 952a              DEC     COUNT
C:002191 f7d9              BRNE    FL_EX43
         
C:002192   +  FL_EX42:LDH     COUNT,FLSH_COUNT
C:002192 812e      LDD     COUNT,Y+FLSH_COUNT
C:002193 d416              RCALL   FL_SHW_SETCURSOR
C:002194 2799              CLR     WH
C:002195   +          LDH     TMP2,FLSH_COUNT
C:002195 816e      LDD     TMP2,Y+FLSH_COUNT
C:002196 9566              LSR     TMP2
C:002197 9597              ROR     WH
C:002198 9566              LSR     TMP2
C:002199 9597              ROR     WH
C:00219a ea15              LDI     TEMP,FLASH_HIADDR
C:00219b 2f06              MOV     DATA,TMP2
C:00219c 940e 176f         CALL    FPGA_REG
C:00219e   +          STH     FLSH_TEMP2,NULL
C:00219e 86ff      STD     Y+FLSH_TEMP2,NULL
C:00219f   +          LDIX    1365 ;16384/12
C:00219f e5a5      LDI     XL,LOW(1365)
C:0021a0 e0b5      LDI     XH,HIGH(1365)
C:0021a1   +  FL_EX45:STH     FLSH_TEMP0,XL
C:0021a1 87ad      STD     Y+FLSH_TEMP0,XL
C:0021a2   +          STH     FLSH_TEMP1,XH
C:0021a2 87be      STD     Y+FLSH_TEMP1,XH
C:0021a3 939f              PUSH    WH
C:0021a4 dad5              RCALL   NEXTSEC
C:0021a5 919f              POP     WH
C:0021a6 2788              CLR     WL
         
C:0021a7   +          LDIZ    BUFSECT
C:0021a7 e0e0      LDI     ZL,LOW(BUFSECT)
C:0021a8 e0f4      LDI     ZH,HIGH(BUFSECT)
C:0021a9   +          LDIX    512
C:0021a9 e0a0      LDI     XL,LOW(512)
C:0021aa e0b2      LDI     XH,HIGH(512)
C:0021ab ea17              LDI     TEMP,FLASH_CTRL
C:0021ac e00b              LDI     DATA,0B00001011
C:0021ad 940e 176f         CALL    FPGA_REG
C:0021af dcce              RCALL   F_IN2
C:0021b0 c002              RJMP    FL_EX48
C:0021b1 940e 1774 FL_EX47:CALL    FPGA_SAME_REG
C:0021b3 9111      FL_EX48:LD      TEMP,Z+
C:0021b4 1701              CP      DATA,TEMP
C:0021b5 f011              BREQ    FL_EX46
C:0021b6   +          STH     FLSH_TEMP2,ONE
C:0021b6 86ef      STD     Y+FLSH_TEMP2,ONE
C:0021b7   +          STH     FLSH_TEMP3,ONE
C:0021b7 8ae8      STD     Y+FLSH_TEMP3,ONE
C:0021b8 9601      FL_EX46:ADIW    WL,1
C:0021b9 9711              SBIW    XL,1
C:0021ba f7b1              BRNE    FL_EX47
         
C:0021bb   +          LDH     XL,FLSH_TEMP0
C:0021bb 85ad      LDD     XL,Y+FLSH_TEMP0
C:0021bc   +          LDH     XH,FLSH_TEMP1
C:0021bc 85be      LDD     XH,Y+FLSH_TEMP1
C:0021bd 50b2              SUBI    XH,2 ;HIGH(512)
C:0021be f470              BRCC    FL_EX44
C:0021bf   +          LDH     DATA,FLSH_TEMP2
C:0021bf 850f      LDD     DATA,Y+FLSH_TEMP2
C:0021c0 e01c              LDI     TEMP,$0C
C:0021c1 fd00              SBRC    DATA,0
C:0021c2 ea1e              LDI     TEMP,$AE
C:0021c3 940e 1705         CALL    SCR_SET_ATTR
C:0021c5 e506              LDI     DATA,$56;"V"
C:0021c6 940e 1742         CALL    SCR_PUTCHAR
C:0021c8   +          STH     FLSH_TEMP2,NULL
C:0021c8 86ff      STD     Y+FLSH_TEMP2,NULL
C:0021c9 e515              LDI     TEMP,LOW(1365)
C:0021ca 0fa1              ADD     XL,TEMP
C:0021cb e015              LDI     TEMP,HIGH(1365)
C:0021cc 1fb1              ADC     XH,TEMP
C:0021cd   +  FL_EX44:LDH     TEMP,FLSH_SIZE
C:0021cd 891a      LDD     TEMP,Y+FLSH_SIZE
C:0021ce 951a              DEC     TEMP
C:0021cf   +          STH     FLSH_SIZE,TEMP
C:0021cf 8b1a      STD     Y+FLSH_SIZE,TEMP
C:0021d0 f681              BRNE    FL_EX45
         
C:0021d1   +  FL_EX49:LDH     COUNT,FLSH_COUNT
C:0021d1 812e      LDD     COUNT,Y+FLSH_COUNT
C:0021d2 9523              INC     COUNT
C:0021d3 ff25              SBRS    COUNT,5 ;COUNT=32
C:0021d4 cf7f              RJMP    FL_EX40
         ;
C:0021d5   +          LDIZ    MLMSG_FL_COMPLETE*2
C:0021d5 e9ee      LDI     ZL,LOW(MLMSG_FL_COMPLETE*2)
C:0021d6 e0fe      LDI     ZH,HIGH(MLMSG_FL_COMPLETE*2)
C:0021d7 940e 1715         CALL    SCR_PRINTMLSTR
         
C:0021d9   +          LDIZ    WIND_FL_RESULT_OK*2
C:0021d9 e2ea      LDI     ZL,LOW(WIND_FL_RESULT_OK*2)
C:0021da e3fb      LDI     ZH,HIGH(WIND_FL_RESULT_OK*2)
C:0021db   +          LDH     DATA,FLSH_TEMP3
C:0021db 8908      LDD     DATA,Y+FLSH_TEMP3
C:0021dc 2300              TST     DATA
C:0021dd f011              BREQ    FL_EX91
C:0021de   +          LDIZ    WIND_FL_RESULT_FAIL*2
C:0021de e3e0      LDI     ZL,LOW(WIND_FL_RESULT_FAIL*2)
C:0021df e3fb      LDI     ZH,HIGH(WIND_FL_RESULT_FAIL*2)
C:0021e0 940e 157b FL_EX91:CALL    WINDOW
C:0021e2   +          LDIZ    MLMSG_FLRES0*2
C:0021e2 ecea      LDI     ZL,LOW(MLMSG_FLRES0*2)
C:0021e3 e0fe      LDI     ZH,HIGH(MLMSG_FLRES0*2)
C:0021e4 940e 1715         CALL    SCR_PRINTMLSTR
         
C:0021e6   +          LDIZ    MLMSG_FLRES1*2
C:0021e6 e0e4      LDI     ZL,LOW(MLMSG_FLRES1*2)
C:0021e7 e0ff      LDI     ZH,HIGH(MLMSG_FLRES1*2)
C:0021e8   +          LDH     DATA,FLSH_TEMP3
C:0021e8 8908      LDD     DATA,Y+FLSH_TEMP3
C:0021e9 2300              TST     DATA
C:0021ea f011              BREQ    FL_EX92
C:0021eb   +          LDIZ    MLMSG_FLRES2*2
C:0021eb e3e0      LDI     ZL,LOW(MLMSG_FLRES2*2)
C:0021ec e0ff      LDI     ZH,HIGH(MLMSG_FLRES2*2)
C:0021ed 940e 1715 FL_EX92:CALL    SCR_PRINTMLSTR
         
C:0021ef 940e 0fef         CALL    WAITKEY
C:0021f1 cca6              RJMP    FL_REVERT
         ;
         ;--------------------------------------
         ;
          FL_ERRHANDLER:
C:0021f2 94f8              CLI
C:0021f3 9110 0105         LDS     TEMP,GLB_STACK+0
C:0021f5 bf1d              OUT     SPL,TEMP
C:0021f6 9110 0106         LDS     TEMP,GLB_STACK+1
C:0021f8 bf1e              OUT     SPH,TEMP
C:0021f9 91c0 0107         LDS     YL,GLB_Y+0
C:0021fb 91d0 0108         LDS     YH,GLB_Y+1
C:0021fd 9478              SEI
C:0021fe 930f              PUSH    DATA
C:0021ff   +          LDIZ    MSG_FL_ERRPOS*2
C:0021ff e0ec      LDI     ZL,LOW(MSG_FL_ERRPOS*2)
C:002200 e3fb      LDI     ZH,HIGH(MSG_FL_ERRPOS*2)
C:002201 940e 171a         CALL    SCR_PRINTSTRZ
C:002203 910f              POP     DATA
C:002204   +          LDIZ    MLMSG_FL_SDERROR1*2
C:002204 e3ea      LDI     ZL,LOW(MLMSG_FL_SDERROR1*2)
C:002205 e0fd      LDI     ZH,HIGH(MLMSG_FL_SDERROR1*2)
C:002206 3001              CPI     DATA,1
C:002207 f071              BREQ    FL_ERRHNDL1
C:002208   +          LDIZ    MLMSG_FL_SDERROR2*2
C:002208 e5ee      LDI     ZL,LOW(MLMSG_FL_SDERROR2*2)
C:002209 e0fd      LDI     ZH,HIGH(MLMSG_FL_SDERROR2*2)
C:00220a 3002              CPI     DATA,2
C:00220b f051              BREQ    FL_ERRHNDL1
C:00220c   +          LDIZ    MLMSG_FL_SDERROR3*2
C:00220c e8e2      LDI     ZL,LOW(MLMSG_FL_SDERROR3*2)
C:00220d e0fd      LDI     ZH,HIGH(MLMSG_FL_SDERROR3*2)
C:00220e 3003              CPI     DATA,3
C:00220f f031              BREQ    FL_ERRHNDL1
C:002210   +          LDIZ    MLMSG_FL_SDERROR4*2
C:002210 eae6      LDI     ZL,LOW(MLMSG_FL_SDERROR4*2)
C:002211 e0fd      LDI     ZH,HIGH(MLMSG_FL_SDERROR4*2)
C:002212 3004              CPI     DATA,4
C:002213 f011              BREQ    FL_ERRHNDL1
C:002214   +          LDIZ    MLMSG_FL_SDERRORX*2
C:002214 ecea      LDI     ZL,LOW(MLMSG_FL_SDERRORX*2)
C:002215 e0fd      LDI     ZH,HIGH(MLMSG_FL_SDERRORX*2)
          FL_ERRHNDL1:
C:002216 940e 1715         CALL    SCR_PRINTMLSTR
C:002218 e007              LDI     DATA,0B00000111
C:002219   +          STH     FLMNU_FLAGS,DATA
C:002219 8b0c      STD     Y+FLMNU_FLAGS,DATA
C:00221a e002              LDI     DATA,0B00000010
C:00221b ce0e              RJMP    FLMENU2
         ;
         ;--------------------------------------
         ;
          FL_ERASEJOB:
C:00221c   +          LDIX    FL_CONTENT
C:00221c e0a0      LDI     XL,LOW(FL_CONTENT)
C:00221d e0b8      LDI     XH,HIGH(FL_CONTENT)
C:00221e e011              LDI     TEMP,0B00000001
C:00221f   +  FL_EJB5:LDH     DATA,FLSH_ERASE
C:00221f 890b      LDD     DATA,Y+FLSH_ERASE
C:002220 2301              AND     DATA,TEMP
C:002221 f499              BRNE    FL_EJB1
C:002222   +          LDH     DATA,FLSH_ERASE
C:002222 890b      LDD     DATA,Y+FLSH_ERASE
C:002223 2b01              OR      DATA,TEMP
C:002224   +          STH     FLSH_ERASE,DATA
C:002224 8b0b      STD     Y+FLSH_ERASE,DATA
C:002225 e024              LDI     COUNT,4
C:002226 92fd      FL_EJB3:ST      X+,NULL
C:002227 92fd              ST      X+,NULL
C:002228 92fd              ST      X+,NULL
C:002229 92fd              ST      X+,NULL
C:00222a 92fd              ST      X+,NULL
C:00222b   +          LDIZ    FL_EMPTY*2
C:00222b e4e2      LDI     ZL,LOW(FL_EMPTY*2)
C:00222c e3fb      LDI     ZH,HIGH(FL_EMPTY*2)
C:00222d e08b              LDI     WL,11
C:00222e 9105      FL_EJB2:LPM     DATA,Z+
C:00222f 930d              ST      X+,DATA
C:002230 958a              DEC     WL
C:002231 f7e1              BRNE    FL_EJB2
C:002232 952a              DEC     COUNT
C:002233 f791              BRNE    FL_EJB3
C:002234 c002              RJMP    FL_EJB4
C:002235 9690      FL_EJB1:ADIW    XL,32
C:002236 9690              ADIW    XL,32
C:002237 0f11      FL_EJB4:LSL     TEMP
C:002238 f730              BRCC    FL_EJB5
C:002239   +          LDH     DATA,FLMNU_FLAGS
C:002239 890c      LDD     DATA,Y+FLMNU_FLAGS
C:00223a 6100              ORI     DATA,0B00010000
C:00223b   +          STH     FLMNU_FLAGS,DATA
C:00223b 8b0c      STD     Y+FLMNU_FLAGS,DATA
C:00223c d346              RCALL   FL_SHOWCONTENT
C:00223d cdea              RJMP    FLMENU1
         ;
         ;--------------------------------------
         ;
C:00223e d21c      FP_FS1: RCALL   FP_OUT
C:00223f 940e 0fef FP_FS0: CALL    WAITKEY
C:002241 3705              CPI     DATA,KEY_UP
C:002242 f0d1              BREQ    FP_1_UP
C:002243 3702              CPI     DATA,KEY_DOWN
C:002244 f139              BREQ    FP_1_DOWN
C:002245 370d              CPI     DATA,KEY_PAGEUP
C:002246 f1a9              BREQ    FP_P_UP
C:002247 370a              CPI     DATA,KEY_PAGEDOWN
C:002248 f1d9              BREQ    FP_P_DOWN
C:002249 360c              CPI     DATA,KEY_HOME
C:00224a f1a1              BREQ    FP_BEGIN
C:00224b 3609              CPI     DATA,KEY_END
C:00224c f071              BREQ    FP_END
C:00224d 350a              CPI     DATA,KEY_ENTER
C:00224e f069              BREQ    FP_ENTER
C:00224f 3706              CPI     DATA,KEY_ESC
C:002250 f771              BRNE    FP_FS0
         
C:002251   +          LDH     XH,FLFP_CURSOR
C:002251 85bc      LDD     XH,Y+FLFP_CURSOR
C:002252   +          ADDI    XH,FLFP_YPOS
C:002252 5fbe      SUBI    XH,(-(FLFP_YPOS)&$FF)
C:002253 e1a2              LDI     XL,FLFP_XPOS
C:002254 940e 1708         CALL    SCR_SET_CURSOR
C:002256 e91f              LDI     TEMP,$9F
C:002257 e222              LDI     COUNT,FLFP_WIDTH
C:002258 940e 1751         CALL    SCR_FILL_ATTR
C:00225a cdcd              RJMP    FLMENU1
         ;
C:00225b c03c      FP_END: RJMP    FP_END0
C:00225c c04b      FP_ENTER:RJMP   FP_ENTER0
         ;
          FP_1_UP:
C:00225d   +          LDH     DATA,FLFP_SELECT
C:00225d 850b      LDD     DATA,Y+FLFP_SELECT
C:00225e 2300              TST     DATA
C:00225f f2f9              BREQ    FP_FS0
C:002260 950a              DEC     DATA
C:002261   +          STH     FLFP_SELECT,DATA
C:002261 870b      STD     Y+FLFP_SELECT,DATA
C:002262   +          LDH     DATA,FLFP_CURSOR
C:002262 850c      LDD     DATA,Y+FLFP_CURSOR
C:002263 2300              TST     DATA
C:002264 f019              BREQ    FP_1_UP1
C:002265 950a              DEC     DATA
C:002266   +          STH     FLFP_CURSOR,DATA
C:002266 870c      STD     Y+FLFP_CURSOR,DATA
C:002267 c003              RJMP    FP_1_UP9
          FP_1_UP1:
C:002268   +          LDH     DATA,FLFP_TOP
C:002268 850a      LDD     DATA,Y+FLFP_TOP
C:002269 950a              DEC     DATA
C:00226a   +          STH     FLFP_TOP,DATA
C:00226a 870a      STD     Y+FLFP_TOP,DATA
          FP_1_UP9:
C:00226b cfd2              RJMP    FP_FS1
         ;
          FP_1_DOWN:
C:00226c   +          LDH     DATA,FLFP_SELECT
C:00226c 850b      LDD     DATA,Y+FLFP_SELECT
C:00226d   +          LDH     TEMP,FLFP_TOTAL
C:00226d 8519      LDD     TEMP,Y+FLFP_TOTAL
C:00226e 9503              INC     DATA
C:00226f 1701              CP      DATA,TEMP
C:002270 f670              BRCC    FP_FS0
C:002271   +          STH     FLFP_SELECT,DATA
C:002271 870b      STD     Y+FLFP_SELECT,DATA
C:002272   +          LDH     DATA,FLFP_CURSOR
C:002272 850c      LDD     DATA,Y+FLFP_CURSOR
C:002273 300a              CPI     DATA,FLFP_HEIGHT-1
C:002274 f418              BRCC    FP_1_DOWN1
C:002275 9503              INC     DATA
C:002276   +          STH     FLFP_CURSOR,DATA
C:002276 870c      STD     Y+FLFP_CURSOR,DATA
C:002277 c003              RJMP    FP_1_DOWN9
          FP_1_DOWN1:
C:002278   +          LDH     DATA,FLFP_TOP
C:002278 850a      LDD     DATA,Y+FLFP_TOP
C:002279 9503              INC     DATA
C:00227a   +          STH     FLFP_TOP,DATA
C:00227a 870a      STD     Y+FLFP_TOP,DATA
          FP_1_DOWN9:
C:00227b cfc2              RJMP    FP_FS1
         ;
          FP_P_UP:
C:00227c   +          LDH     DATA,FLFP_SELECT
C:00227c 850b      LDD     DATA,Y+FLFP_SELECT
C:00227d 500a              SUBI    DATA,FLFP_HEIGHT-1
C:00227e f408              BRCC    FP_P_UP1
          FP_BEGIN:
C:00227f 2700              CLR     DATA
          FP_P_UP1:
C:002280   +          STH     FLFP_SELECT,DATA
C:002280 870b      STD     Y+FLFP_SELECT,DATA
C:002281   +          STH     FLFP_TOP,DATA
C:002281 870a      STD     Y+FLFP_TOP,DATA
C:002282   +          STH     FLFP_CURSOR,NULL
C:002282 86fc      STD     Y+FLFP_CURSOR,NULL
C:002283 cfba              RJMP    FP_FS1
         ;
          FP_P_DOWN:
C:002284   +          LDH     TEMP,FLFP_TOTAL
C:002284 8519      LDD     TEMP,Y+FLFP_TOTAL
C:002285 301c              CPI     TEMP,FLFP_HEIGHT+1
C:002286 f428              BRCC    FP_P_DOWN1
C:002287 e00a              LDI     DATA,FLFP_HEIGHT-1
C:002288   +          STH     FLFP_SELECT,DATA
C:002288 870b      STD     Y+FLFP_SELECT,DATA
C:002289   +          STH     FLFP_TOP,NULL
C:002289 86fa      STD     Y+FLFP_TOP,NULL
C:00228a   +          STH     FLFP_CURSOR,DATA
C:00228a 870c      STD     Y+FLFP_CURSOR,DATA
C:00228b c00b              RJMP    FP_P_DOWN9
          FP_P_DOWN1:
C:00228c   +          LDH     DATA,FLFP_SELECT
C:00228c 850b      LDD     DATA,Y+FLFP_SELECT
C:00228d   +          ADDI    DATA,FLFP_HEIGHT-1
C:00228d 5f06      SUBI    DATA,(-(FLFP_HEIGHT-1)&$FF)
C:00228e 1701              CP      DATA,TEMP
C:00228f f010              BRCS    FP_P_DOWN2
C:002290 2f01              MOV     DATA,TEMP
C:002291 950a              DEC     DATA
          FP_P_DOWN2:
C:002292   +          STH     FLFP_SELECT,DATA
C:002292 870b      STD     Y+FLFP_SELECT,DATA
C:002293 e01a              LDI     TEMP,FLFP_HEIGHT-1
C:002294   +          STH     FLFP_CURSOR,TEMP
C:002294 871c      STD     Y+FLFP_CURSOR,TEMP
C:002295 1b01              SUB     DATA,TEMP
C:002296   +          STH     FLFP_TOP,DATA
C:002296 870a      STD     Y+FLFP_TOP,DATA
          FP_P_DOWN9:
C:002297 cfa6              RJMP    FP_FS1
         ;
          FP_END0:
C:002298   +          LDH     TEMP,FLFP_TOTAL
C:002298 8519      LDD     TEMP,Y+FLFP_TOTAL
C:002299 301c              CPI     TEMP,FLFP_HEIGHT+1
C:00229a f428              BRCC    FP_END1
C:00229b e00a              LDI     DATA,FLFP_HEIGHT-1
C:00229c   +          STH     FLFP_SELECT,DATA
C:00229c 870b      STD     Y+FLFP_SELECT,DATA
C:00229d   +          STH     FLFP_TOP,NULL
C:00229d 86fa      STD     Y+FLFP_TOP,NULL
C:00229e   +          STH     FLFP_CURSOR,DATA
C:00229e 870c      STD     Y+FLFP_CURSOR,DATA
C:00229f c007              RJMP    FP_END9
          FP_END1:
C:0022a0 2f01              MOV     DATA,TEMP
C:0022a1 950a              DEC     DATA
C:0022a2   +          STH     FLFP_SELECT,DATA
C:0022a2 870b      STD     Y+FLFP_SELECT,DATA
C:0022a3 e01a              LDI     TEMP,FLFP_HEIGHT-1
C:0022a4   +          STH     FLFP_CURSOR,TEMP
C:0022a4 871c      STD     Y+FLFP_CURSOR,TEMP
C:0022a5 1b01              SUB     DATA,TEMP
C:0022a6   +          STH     FLFP_TOP,DATA
C:0022a6 870a      STD     Y+FLFP_TOP,DATA
          FP_END9:
C:0022a7 cf96              RJMP    FP_FS1
         ;
          FP_ENTER0:
C:0022a8   +          LDH     DATA,FLFP_SELECT
C:0022a8 850b      LDD     DATA,Y+FLFP_SELECT
C:0022a9   +          LDIZ    FL_BUFFER
C:0022a9 e0e0      LDI     ZL,LOW(FL_BUFFER)
C:0022aa e0fa      LDI     ZH,HIGH(FL_BUFFER)
C:0022ab e210              LDI     TEMP,32
C:0022ac 9f01              MUL     DATA,TEMP
C:0022ad 0de0              ADD     ZL,R0
C:0022ae 1df1              ADC     ZH,R1
C:0022af 8503              LDD     DATA,Z+11
C:0022b0 2300              TST     DATA
C:0022b1 f0e1              BREQ    FP_ENTER9
C:0022b2 8d82              LDD     WL,Z+26
C:0022b3 8d93              LDD     WH,Z+27
C:0022b4 89a4              LDD     XL,Z+20
C:0022b5 89b5              LDD     XH,Z+21
C:0022b6 2f18              MOV     TEMP,WL
C:0022b7 2b19              OR      TEMP,WH
C:0022b8 2b1a              OR      TEMP,XL
C:0022b9 2b1b              OR      TEMP,XH
C:0022ba f441              BRNE    FP_ENTER1
C:0022bb   +          LDSW    FAT_ROOTCLS+0
C:0022bb 9180 012a LDS     WL,FAT_ROOTCLS+0
C:0022bd 9190 012b LDS     WH,FAT_ROOTCLS+0+1
C:0022bf   +          LDSX    FAT_ROOTCLS+2
C:0022bf 91a0 012c LDS     XL,FAT_ROOTCLS+2
C:0022c1 91b0 012d LDS     XH,FAT_ROOTCLS+2+1
          FP_ENTER1:
C:0022c3   +          STSW    FAT_TEK_DIR+0
C:0022c3 9380 014c STS     FAT_TEK_DIR+0,WL
C:0022c5 9390 014d STS     FAT_TEK_DIR+0+1,WH
C:0022c7   +          STSX    FAT_TEK_DIR+2
C:0022c7 93a0 014e STS     FAT_TEK_DIR+2,XL
C:0022c9 93b0 014f STS     FAT_TEK_DIR+2+1,XH
C:0022cb d112              RCALL   FP_RD_DIR
C:0022cc   +          STH     FLFP_CURSOR,NULL
C:0022cc 86fc      STD     Y+FLFP_CURSOR,NULL
C:0022cd cf70              RJMP    FP_FS1
          FP_ENTER9:
C:0022ce   +          STH     FLFP_BUFADR0,ZL
C:0022ce 83ef      STD     Y+FLFP_BUFADR0,ZL
C:0022cf   +          STH     FLFP_BUFADR1,ZH
C:0022cf 87f8      STD     Y+FLFP_BUFADR1,ZH
C:0022d0 8d84              LDD     WL,Z+28
C:0022d1 8d95              LDD     WH,Z+29
C:0022d2 8da6              LDD     XL,Z+30
C:0022d3 ef0f              LDI     DATA,LOW(16383)
C:0022d4 e31f              LDI     TEMP,HIGH(16383)
C:0022d5 0f80              ADD     WL,DATA
C:0022d6 1f91              ADC     WH,TEMP
C:0022d7 1daf              ADC     XL,NULL
C:0022d8 0f99              LSL     WH
C:0022d9 1faa              ROL     XL
C:0022da 0f99              LSL     WH
C:0022db 1faa              ROL     XL
C:0022dc   +          STH     FLSH_SIZE,XL
C:0022dc 8baa      STD     Y+FLSH_SIZE,XL
C:0022dd   +          STH     FLSH_START,NULL
C:0022dd 8af9      STD     Y+FLSH_START,NULL
         
C:0022de   +          LDH     XH,FLFP_CURSOR
C:0022de 85bc      LDD     XH,Y+FLFP_CURSOR
C:0022df   +          ADDI    XH,FLFP_YPOS
C:0022df 5fbe      SUBI    XH,(-(FLFP_YPOS)&$FF)
C:0022e0 e1a2              LDI     XL,FLFP_XPOS
C:0022e1 940e 1708         CALL    SCR_SET_CURSOR
C:0022e3 e11f              LDI     TEMP,$1F
C:0022e4 e222              LDI     COUNT,FLFP_WIDTH
C:0022e5 940e 1751         CALL    SCR_FILL_ATTR
         ;
C:0022e7 d29b      FLMAP10:RCALL   FL_SHOWCONTENT
         
C:0022e8 940e 0fef FLMAP11:CALL    WAITKEY
C:0022ea 3705              CPI     DATA,KEY_UP
C:0022eb f0c9              BREQ    FLMAP_UP
C:0022ec 3702              CPI     DATA,KEY_DOWN
C:0022ed f0e9              BREQ    FLMAP_DOWN
C:0022ee 360b              CPI     DATA,KEY_LEFT
C:0022ef f039              BREQ    FLMAP_LEFT
C:0022f0 3704              CPI     DATA,KEY_RIGHT
C:0022f1 f059              BREQ    FLMAP_RIGHT
C:0022f2 350a              CPI     DATA,KEY_ENTER
C:0022f3 f109              BREQ    FLMAP_ENTER
C:0022f4 3706              CPI     DATA,KEY_ESC
C:0022f5 f791              BRNE    FLMAP11
C:0022f6 c06d              RJMP    FLMAP_EXIT
         ;
          FLMAP_LEFT:
C:0022f7   +          LDH     DATA,FLSH_START
C:0022f7 8909      LDD     DATA,Y+FLSH_START
C:0022f8 2300              TST     DATA
C:0022f9 f371              BREQ    FLMAP11
C:0022fa 950a              DEC     DATA
C:0022fb   +          STH     FLSH_START,DATA
C:0022fb 8b09      STD     Y+FLSH_START,DATA
C:0022fc cfea              RJMP    FLMAP10
         ;
          FLMAP_RIGHT:
C:0022fd   +          LDH     DATA,FLSH_START
C:0022fd 8909      LDD     DATA,Y+FLSH_START
C:0022fe   +          LDH     TEMP,FLSH_SIZE
C:0022fe 891a      LDD     TEMP,Y+FLSH_SIZE
C:0022ff 0f10              ADD     TEMP,DATA
C:002300 3210              CPI     TEMP,32
C:002301 f730              BRCC    FLMAP11
C:002302 9503              INC     DATA
C:002303   +          STH     FLSH_START,DATA
C:002303 8b09      STD     Y+FLSH_START,DATA
C:002304 cfe2              RJMP    FLMAP10
         ;
          FLMAP_UP:
C:002305   +          LDH     DATA,FLSH_START
C:002305 8909      LDD     DATA,Y+FLSH_START
C:002306 5004              SUBI    DATA,4
C:002307 f408              BRCC    FLMAP_U1
C:002308 2700              CLR     DATA
          FLMAP_U1:
C:002309   +          STH     FLSH_START,DATA
C:002309 8b09      STD     Y+FLSH_START,DATA
C:00230a cfdc              RJMP    FLMAP10
         ;
          FLMAP_DOWN:
C:00230b   +          LDH     DATA,FLSH_START
C:00230b 8909      LDD     DATA,Y+FLSH_START
C:00230c   +          LDH     TEMP,FLSH_SIZE
C:00230c 891a      LDD     TEMP,Y+FLSH_SIZE
C:00230d 0f01              ADD     DATA,TEMP
C:00230e   +          ADDI    DATA,4
C:00230e 5f0c      SUBI    DATA,(-(4)&$FF)
C:00230f 3200              CPI     DATA,32
C:002310 f008              BRCS    FLMAP_D1
C:002311 e200              LDI     DATA,32
          FLMAP_D1:
C:002312 1b01              SUB     DATA,TEMP
C:002313   +          STH     FLSH_START,DATA
C:002313 8b09      STD     Y+FLSH_START,DATA
C:002314 cfd2              RJMP    FLMAP10
         ;
          FLMAP_ENTER:
C:002315   +          LDIZ    FL_CONTENT
C:002315 e0e0      LDI     ZL,LOW(FL_CONTENT)
C:002316 e0f8      LDI     ZH,HIGH(FL_CONTENT)
C:002317   +          LDH     DATA,FLSH_START
C:002317 8909      LDD     DATA,Y+FLSH_START
C:002318 e110              LDI     TEMP,16
C:002319 9f01              MUL     DATA,TEMP
C:00231a 0de0              ADD     ZL,R0
C:00231b 1df1              ADC     ZH,R1
C:00231c   +          STH     FLSH_ADR1,ZL
C:00231c 83ec      STD     Y+FLSH_ADR1,ZL
C:00231d   +          STH     FLSH_ADR2,ZH
C:00231d 83fd      STD     Y+FLSH_ADR2,ZH
         
C:00231e 9110 0129         LDS     TEMP,FAT_BYTSSEC
C:002320 9310 0151         STS     FAT_NUMSECK,TEMP
         
C:002322   +          LDH     ZL,FLFP_BUFADR0
C:002322 81ef      LDD     ZL,Y+FLFP_BUFADR0
C:002323   +          LDH     ZH,FLFP_BUFADR1
C:002323 85f8      LDD     ZH,Y+FLFP_BUFADR1
C:002324 8d82              LDD     WL,Z+26
C:002325 8d93              LDD     WH,Z+27
C:002326 89a4              LDD     XL,Z+20
C:002327 89b5              LDD     XH,Z+21
C:002328   +          STSW    FAT_TFILCLS+0
C:002328 9380 0152 STS     FAT_TFILCLS+0,WL
C:00232a 9390 0153 STS     FAT_TFILCLS+0+1,WH
C:00232c   +          STSX    FAT_TFILCLS+2
C:00232c 93a0 0154 STS     FAT_TFILCLS+2,XL
C:00232e 93b0 0155 STS     FAT_TFILCLS+2+1,XH
C:002330 8d84              LDD     WL,Z+28
C:002331 8d95              LDD     WH,Z+29
C:002332 8da6              LDD     XL,Z+30
C:002333 8db7              LDD     XH,Z+31
C:002334 ef6f              LDI     TMP2,LOW(511)
C:002335 e071              LDI     TMP3,HIGH(511)
C:002336 d934              RCALL   HLDEPBC
C:002337 d911              RCALL   BCDE200         ;получили кол-во секторов
         ;-------
C:002338 e220      FL_FS0: LDI     COUNT,32
C:002339 9780              SBIW    WL,32
C:00233a f130              BRCS    FL_FS9
C:00233b f129              BREQ    FL_FS9
C:00233c   +          STH     FLSH_TEMP0,WL
C:00233c 878d      STD     Y+FLSH_TEMP0,WL
C:00233d   +          STH     FLSH_TEMP1,WH
C:00233d 879e      STD     Y+FLSH_TEMP1,WH
C:00233e d029              RCALL   FL_CPTR
         
C:00233f e220              LDI     COUNT,32
         
C:002340   +  FL_FS2: STH     FLSH_COUNT,COUNT
C:002340 832e      STD     Y+FLSH_COUNT,COUNT
C:002341 9100 0151         LDS     DATA,FAT_NUMSECK
C:002343 950a              DEC     DATA
C:002344 f4a1              BRNE    FL_FS3
         
C:002345   +          LDSW    FAT_TFILCLS+0
C:002345 9180 0152 LDS     WL,FAT_TFILCLS+0
C:002347 9190 0153 LDS     WH,FAT_TFILCLS+0+1
C:002349   +          LDSX    FAT_TFILCLS+2
C:002349 91a0 0154 LDS     XL,FAT_TFILCLS+2
C:00234b 91b0 0155 LDS     XH,FAT_TFILCLS+2+1
C:00234d 940e 1bc1         CALL    RDFATZP
C:00234f   +          STSW    FAT_TFILCLS+0
C:00234f 9380 0152 STS     FAT_TFILCLS+0,WL
C:002351 9390 0153 STS     FAT_TFILCLS+0+1,WH
C:002353   +          STSX    FAT_TFILCLS+2
C:002353 93a0 0154 STS     FAT_TFILCLS+2,XL
C:002355 93b0 0155 STS     FAT_TFILCLS+2+1,XH
C:002357 9100 0129         LDS     DATA,FAT_BYTSSEC
C:002359 9300 0151 FL_FS3: STS     FAT_NUMSECK,DATA
         
C:00235b   +          LDH     COUNT,FLSH_COUNT
C:00235b 812e      LDD     COUNT,Y+FLSH_COUNT
C:00235c 952a              DEC     COUNT
C:00235d f711              BRNE    FL_FS2
         
C:00235e   +          LDH     WL,FLSH_TEMP0
C:00235e 858d      LDD     WL,Y+FLSH_TEMP0
C:00235f   +          LDH     WH,FLSH_TEMP1
C:00235f 859e      LDD     WH,Y+FLSH_TEMP1
C:002360 cfd7              RJMP    FL_FS0
         
C:002361 9680      FL_FS9: ADIW    WL,32
C:002362 2f28              MOV     COUNT,WL
C:002363 d004              RCALL   FL_CPTR
         ;
          FLMAP_EXIT:
C:002364   +          STH     FLSH_START,FF
C:002364 8ad9      STD     Y+FLSH_START,FF
C:002365   +          STH     FLSH_SIZE,NULL
C:002365 8afa      STD     Y+FLSH_SIZE,NULL
C:002366 d21c              RCALL   FL_SHOWCONTENT
C:002367 ccc0              RJMP    FLMENU1
         ;
         ;======================================
         ;
C:002368 932f      FL_CPTR:PUSH    COUNT
C:002369 e011              LDI     TEMP,$01
C:00236a   +          LDH     DATA,FLSH_START
C:00236a 8909      LDD     DATA,Y+FLSH_START
C:00236b 9506              LSR     DATA
C:00236c 9506              LSR     DATA
C:00236d 2300              TST     DATA
C:00236e f019              BREQ    FL_CPT1
C:00236f 0f11      FL_CPT2:LSL     TEMP
C:002370 950a              DEC     DATA
C:002371 f7e9              BRNE    FL_CPT2
C:002372   +  FL_CPT1:LDH     DATA,FLSH_ERASE
C:002372 890b      LDD     DATA,Y+FLSH_ERASE
C:002373 2301              AND     DATA,TEMP
C:002374 f4d1              BRNE    FL_CPT5
C:002375   +          LDH     DATA,FLSH_ERASE
C:002375 890b      LDD     DATA,Y+FLSH_ERASE
C:002376 2b01              OR      DATA,TEMP
C:002377   +          STH     FLSH_ERASE,DATA
C:002377 8b0b      STD     Y+FLSH_ERASE,DATA
C:002378   +          LDIX    FL_CONTENT
C:002378 e0a0      LDI     XL,LOW(FL_CONTENT)
C:002379 e0b8      LDI     XH,HIGH(FL_CONTENT)
C:00237a   +          LDH     DATA,FLSH_START
C:00237a 8909      LDD     DATA,Y+FLSH_START
C:00237b 710c              ANDI    DATA,0B00011100
C:00237c e110              LDI     TEMP,16
C:00237d 9f01              MUL     DATA,TEMP
C:00237e 0da0              ADD     XL,R0
C:00237f 1db1              ADC     XH,R1
C:002380 e024              LDI     COUNT,4
C:002381 92fd      FL_CPT4:ST      X+,NULL
C:002382 92fd              ST      X+,NULL
C:002383 92fd              ST      X+,NULL
C:002384 92fd              ST      X+,NULL
C:002385 92fd              ST      X+,NULL
C:002386   +          LDIZ    FL_EMPTY*2
C:002386 e4e2      LDI     ZL,LOW(FL_EMPTY*2)
C:002387 e3fb      LDI     ZH,HIGH(FL_EMPTY*2)
C:002388 e01b              LDI     TEMP,11
C:002389 9105      FL_CPT3:LPM     DATA,Z+
C:00238a 930d              ST      X+,DATA
C:00238b 951a              DEC     TEMP
C:00238c f7e1              BRNE    FL_CPT3
C:00238d 952a              DEC     COUNT
C:00238e f791              BRNE    FL_CPT4
C:00238f 912f      FL_CPT5:POP     COUNT
         
C:002390 9100 0129         LDS     DATA,FAT_BYTSSEC
C:002392 9110 0151         LDS     TEMP,FAT_NUMSECK
C:002394 1701              CP      DATA,TEMP
C:002395 f009              BREQ    FL_CPT6
C:002396 6420              ORI     COUNT,$40
C:002397   +  FL_CPT6:LDH     XL,FLSH_ADR1
C:002397 81ac      LDD     XL,Y+FLSH_ADR1
C:002398   +          LDH     XH,FLSH_ADR2
C:002398 81bd      LDD     XH,Y+FLSH_ADR2
C:002399 932d              ST      X+,COUNT
C:00239a 9100 0152         LDS     DATA,FAT_TFILCLS+0
C:00239c 930d              ST      X+,DATA
C:00239d 9100 0153         LDS     DATA,FAT_TFILCLS+1
C:00239f 930d              ST      X+,DATA
C:0023a0 9100 0154         LDS     DATA,FAT_TFILCLS+2
C:0023a2 930d              ST      X+,DATA
C:0023a3 9100 0155         LDS     DATA,FAT_TFILCLS+3
C:0023a5 930d              ST      X+,DATA
C:0023a6   +          LDH     ZL,FLFP_BUFADR0
C:0023a6 81ef      LDD     ZL,Y+FLFP_BUFADR0
C:0023a7   +          LDH     ZH,FLFP_BUFADR1
C:0023a7 85f8      LDD     ZH,Y+FLFP_BUFADR1
C:0023a8 e02b              LDI     COUNT,11
C:0023a9 9101      FL_CPT7:LD      DATA,Z+
C:0023aa 930d              ST      X+,DATA
C:0023ab 952a              DEC     COUNT
C:0023ac f7e1              BRNE    FL_CPT7
C:0023ad   +          STH     FLSH_ADR1,XL
C:0023ad 83ac      STD     Y+FLSH_ADR1,XL
C:0023ae   +          STH     FLSH_ADR2,XH
C:0023ae 83bd      STD     Y+FLSH_ADR2,XH
C:0023af   +          LDH     DATA,FLMNU_FLAGS
C:0023af 890c      LDD     DATA,Y+FLMNU_FLAGS
C:0023b0 6100              ORI     DATA,0B00010000
C:0023b1   +          STH     FLMNU_FLAGS,DATA
C:0023b1 8b0c      STD     Y+FLMNU_FLAGS,DATA
C:0023b2   +          LDH     DATA,FLSH_START
C:0023b2 8909      LDD     DATA,Y+FLSH_START
C:0023b3 9503              INC     DATA
C:0023b4   +          STH     FLSH_START,DATA
C:0023b4 8b09      STD     Y+FLSH_START,DATA
C:0023b5 9508              RET
         ;
         ;======================================
         ;
          FLMENU_PUTCURSOR:
C:0023b6   +          LDH     DATA,FLSH_ERASE
C:0023b6 890b      LDD     DATA,Y+FLSH_ERASE
C:0023b7 3f0f              CPI     DATA,$FF
C:0023b8 f421              BRNE    FPM_PC5
C:0023b9   +          LDIZ    MSG_FL_ERASECHIP*2
C:0023b9 e0e6      LDI     ZL,LOW(MSG_FL_ERASECHIP*2)
C:0023ba e3fb      LDI     ZH,HIGH(MSG_FL_ERASECHIP*2)
C:0023bb 940e 171a         CALL    SCR_PRINTSTRZ
          FPM_PC5:
C:0023bd 2722              CLR     COUNT
C:0023be e011              LDI     TEMP,0B00000001
C:0023bf   +  FPM_PC4:STH     FLSH_COUNT,COUNT
C:0023bf 832e      STD     Y+FLSH_COUNT,COUNT
C:0023c0   +          STH     FLSH_TEMP0,TEMP
C:0023c0 871d      STD     Y+FLSH_TEMP0,TEMP
C:0023c1 2fb2              MOV     XH,COUNT
C:0023c2   +          ADDI    XH,2
C:0023c2 5fbe      SUBI    XH,(-(2)&$FF)
C:0023c3 e0a1              LDI     XL,1
C:0023c4 940e 1708         CALL    SCR_SET_CURSOR
C:0023c6   +          LDH     DATA,FLSH_TEMP0
C:0023c6 850d      LDD     DATA,Y+FLSH_TEMP0
C:0023c7   +          LDH     XL,FLMNU_FLAGS
C:0023c7 89ac      LDD     XL,Y+FLMNU_FLAGS
C:0023c8 e91f              LDI     TEMP,$9F
C:0023c9 23a0              AND     XL,DATA
C:0023ca f409              BRNE    FPM_PC1
C:0023cb e917              LDI     TEMP,$97
C:0023cc   +  FPM_PC1:LDH     XL,FLMNU_CURSOR
C:0023cc 89ad      LDD     XL,Y+FLMNU_CURSOR
C:0023cd 230a              AND     DATA,XL
C:0023ce f029              BREQ    FPM_PC2
C:0023cf 0faa              LSL     XL
C:0023d0 f010              BRCS    FPM_PC3
C:0023d1 ef10              LDI     TEMP,$F0
C:0023d2 c001              RJMP    FPM_PC2
C:0023d3 711f      FPM_PC3:ANDI    TEMP,$1F
C:0023d4 e02f      FPM_PC2:LDI     COUNT,15
C:0023d5 940e 1751         CALL    SCR_FILL_ATTR
C:0023d7   +          LDH     COUNT,FLSH_COUNT
C:0023d7 812e      LDD     COUNT,Y+FLSH_COUNT
C:0023d8 9523              INC     COUNT
C:0023d9   +          LDH     TEMP,FLSH_TEMP0
C:0023d9 851d      LDD     TEMP,Y+FLSH_TEMP0
C:0023da 0f11              LSL     TEMP
C:0023db ff15              SBRS    TEMP,5
C:0023dc cfe2              RJMP    FPM_PC4
C:0023dd 9508              RET
         ;
         ;======================================
         ;
          FP_RD_DIR:
C:0023de   +          LDIZ    FL_BUFFER
C:0023de e0e0      LDI     ZL,LOW(FL_BUFFER)
C:0023df e0fa      LDI     ZH,HIGH(FL_BUFFER)
C:0023e0   +          STH     FLFP_BUFADR0,ZL
C:0023e0 83ef      STD     Y+FLFP_BUFADR0,ZL
C:0023e1   +          STH     FLFP_BUFADR1,ZH
C:0023e1 87f8      STD     Y+FLFP_BUFADR1,ZH
C:0023e2   +          STH     FLFP_TOTAL,NULL
C:0023e2 86f9      STD     Y+FLFP_TOTAL,NULL
C:0023e3   +          STH     FLFP_TOP,NULL
C:0023e3 86fa      STD     Y+FLFP_TOP,NULL
C:0023e4   +          STH     FLFP_SELECT,NULL
C:0023e4 86fb      STD     Y+FLFP_SELECT,NULL
         
C:0023e5 940e 1af1         CALL    CALCKCLSDIR
C:0023e7   +          LDIW    0
C:0023e7 e080      LDI     WL,LOW(0)
C:0023e8 e090      LDI     WH,HIGH(0)
C:0023e9 940e 1b76         CALL    RDDIRSC
         ;поиск файла в директории
         ;       LDIW    0               ;номер описателя файла
C:0023eb c007              RJMP    FP_RDD2
         
C:0023ec 9601      FP_RDD1:ADIW    WL,1            ;номерописателя++
C:0023ed 96b0              ADIW    ZL,$20          ;следующий описатель
C:0023ee 30f8              CPI     ZH,HIGH(BUF4FAT+512);
                                         ;вылезли за сектор?
C:0023ef f419              BRNE    FP_RDD2         ;нет ещё
C:0023f0 940e 1b76         CALL    RDDIRSC         ;считываем следующий
C:0023f2 f481              BRNE    FP_RDDE         ;кончились сектора в директории
         
C:0023f3 8110      FP_RDD2:LD      TEMP,Z          ;первый символ
C:0023f4 3e15              CPI     TEMP,$E5        ;удалён?
C:0023f5 f3b1              BREQ    FP_RDD1
C:0023f6 2311              TST     TEMP            ;пустой описатель? (конец списка)
C:0023f7 f059              BREQ    FP_RDDE
C:0023f8 321e              CPI     TEMP,$2E ;"."
C:0023f9 f419              BRNE    FP_RDD3
C:0023fa 8111              LDD     TEMP,Z+1
C:0023fb 321e              CPI     TEMP,$2E ;"."
C:0023fc f779              BRNE    FP_RDD1
         
C:0023fd 8503      FP_RDD3:LDD     DATA,Z+$0B      ;атрибуты
C:0023fe 7d0e              ANDI    DATA,0B11011110
C:0023ff f021              BREQ    FP_RDD4         ;файл
C:002400 3100              CPI     DATA,$10        ;директория
C:002401 f751              BRNE    FP_RDD1
C:002402 c01f              RJMP    FP_RDD7
         
C:002403 c031      FP_RDDE:RJMP    FP_RDDX
         
C:002404 8500      FP_RDD4:LDD     DATA,Z+8
C:002405 3502              CPI     DATA,$52 ;"R"
C:002406 f049              BREQ    FP_RDD5
C:002407 3402              CPI     DATA,$42 ;"B"
C:002408 f719              BRNE    FP_RDD1
C:002409 8501              LDD     DATA,Z+9
C:00240a 3409              CPI     DATA,$49 ;"I"
C:00240b f701              BRNE    FP_RDD1
C:00240c 8502              LDD     DATA,Z+10
C:00240d 340e              CPI     DATA,$4E ;"N"
C:00240e f039              BREQ    FP_RDD6
C:00240f cfdc      FP_RDD1A:RJMP   FP_RDD1
C:002410 8501      FP_RDD5:LDD     DATA,Z+9
C:002411 340f              CPI     DATA,$4F ;"O"
C:002412 f6c9              BRNE    FP_RDD1
C:002413 8502              LDD     DATA,Z+10
C:002414 340d              CPI     DATA,$4D ;"M"
C:002415 f6b1              BRNE    FP_RDD1
         
C:002416 8d07      FP_RDD6:LDD     DATA,Z+31       ;длина
C:002417 2300              TST     DATA
C:002418 f699              BRNE    FP_RDD1
C:002419 8d06              LDD     DATA,Z+30
C:00241a 8c15              LDD     R1,Z+29
C:00241b 8c04              LDD     R0,Z+28
C:00241c 180e              SUB     R0,ONE
C:00241d 081f              SBC     R1,NULL
C:00241e 090f              SBC     DATA,NULL
C:00241f f260              BRCS    FP_RDD1
C:002420 3008              CPI     DATA,$08
C:002421 f650              BRCC    FP_RDD1
         
C:002422   +  FP_RDD7:LDH     XL,FLFP_BUFADR0
C:002422 81af      LDD     XL,Y+FLFP_BUFADR0
C:002423   +          LDH     XH,FLFP_BUFADR1
C:002423 85b8      LDD     XH,Y+FLFP_BUFADR1
C:002424 e220              LDI     COUNT,32
C:002425   +          PUSHZ
C:002425 93ef      PUSH    ZL
C:002426 93ff      PUSH    ZH
C:002427 9101      FP_RDD8:LD      DATA,Z+
C:002428 930d              ST      X+,DATA
C:002429 952a              DEC     COUNT
C:00242a f7e1              BRNE    FP_RDD8
C:00242b   +          POPZ
C:00242b 91ff      POP     ZH
C:00242c 91ef      POP     ZL
C:00242d   +          STH     FLFP_BUFADR0,XL
C:00242d 83af      STD     Y+FLFP_BUFADR0,XL
C:00242e   +          STH     FLFP_BUFADR1,XH
C:00242e 87b8      STD     Y+FLFP_BUFADR1,XH
C:00242f   +          LDH     COUNT,FLFP_TOTAL
C:00242f 8529      LDD     COUNT,Y+FLFP_TOTAL
C:002430 9523              INC     COUNT
C:002431   +          STH     FLFP_TOTAL,COUNT
C:002431 8729      STD     Y+FLFP_TOTAL,COUNT
C:002432 3320              CPI     COUNT,48
C:002433 f450              BRCC    FP_SORT
C:002434 cfb7              RJMP    FP_RDD1
         
C:002435   +  FP_RDDX:LDH     COUNT,FLFP_TOTAL
C:002435 8529      LDD     COUNT,Y+FLFP_TOTAL
C:002436 3021              CPI     COUNT,1
C:002437 f081              BREQ    FP_NOSORT
C:002438 2322              TST     COUNT
C:002439 f421              BRNE    FP_SORT
C:00243a   +          LDH     DATA,FLMNU_FLAGS
C:00243a 890c      LDD     DATA,Y+FLMNU_FLAGS
C:00243b 7007              ANDI    DATA,0B00000111
C:00243c   +          STH     FLMNU_FLAGS,DATA
C:00243c 8b0c      STD     Y+FLMNU_FLAGS,DATA
C:00243d c00a              RJMP    FP_NOFILES
          FP_SORT:
          FP_RDDY:
C:00243e   +          LDIZ    FL_BUFFER
C:00243e e0e0      LDI     ZL,LOW(FL_BUFFER)
C:00243f e0fa      LDI     ZH,HIGH(FL_BUFFER)
C:002440 2766              CLR     TMP2
C:002441   +          LDH     TMP3,FLFP_TOTAL
C:002441 8579      LDD     TMP3,Y+FLFP_TOTAL
C:002442 957a              DEC     TMP3
C:002443 8100              LD      DATA,Z
C:002444 320e              CPI     DATA,$2E
C:002445 f409              BRNE    FP_RDDZ
C:002446 9563              INC     TMP2
C:002447 d0cd      FP_RDDZ:RCALL   FSORT
          FP_NOFILES:
          FP_NOSORT:
         ;
C:002448   +          LDIZ    FL_BUFFER
C:002448 e0e0      LDI     ZL,LOW(FL_BUFFER)
C:002449 e0fa      LDI     ZH,HIGH(FL_BUFFER)
C:00244a   +          LDH     COUNT,FLFP_TOTAL
C:00244a 8529      LDD     COUNT,Y+FLFP_TOTAL
C:00244b 8503      FP_LO2: LDD     DATA,Z+11
C:00244c 7d0e              ANDI    DATA,0B11011110
C:00244d 8703              STD     Z+11,DATA
C:00244e f441              BRNE    FP_LO1
C:00244f e01b              LDI     TEMP,11
C:002450 8100      FP_LO3: LD      DATA,Z
C:002451 d088              RCALL   TOLOWER
C:002452 9301              ST      Z+,DATA
C:002453 951a              DEC     TEMP
C:002454 f7d9              BRNE    FP_LO3
C:002455 9675              ADIW    ZL,21
C:002456 c001              RJMP    FP_LO4
C:002457 96b0      FP_LO1: ADIW    ZL,32
C:002458 952a      FP_LO4: DEC     COUNT
C:002459 f789              BRNE    FP_LO2
C:00245a 9508              RET
         ;
         ;======================================
         ;
C:00245b 2722      FP_OUT: CLR     COUNT
C:00245c 932f      FPOUT00:PUSH    COUNT
C:00245d 2fb2              MOV     XH,COUNT
C:00245e   +          ADDI    XH,FLFP_YPOS
C:00245e 5fbe      SUBI    XH,(-(FLFP_YPOS)&$FF)
C:00245f e1a2              LDI     XL,FLFP_XPOS
C:002460 940e 1708         CALL    SCR_SET_CURSOR
         
C:002462   +          LDH     DATA,FLFP_CURSOR
C:002462 850c      LDD     DATA,Y+FLFP_CURSOR
C:002463 e91f              LDI     TEMP,$9F
C:002464 1702              CP      DATA,COUNT
C:002465 f409              BRNE    FPOUT04
C:002466 ef10              LDI     TEMP,$F0
C:002467 940e 1705 FPOUT04:CALL    SCR_SET_ATTR
         
C:002469   +          LDH     DATA,FLFP_TOP
C:002469 850a      LDD     DATA,Y+FLFP_TOP
C:00246a 0f02              ADD     DATA,COUNT
C:00246b   +          LDH     TEMP,FLFP_TOTAL
C:00246b 8519      LDD     TEMP,Y+FLFP_TOTAL
C:00246c 1701              CP      DATA,TEMP
C:00246d f068              BRCS    FPOUT01
C:00246e 2b21              OR      COUNT,TEMP
C:00246f f431              BRNE    FPOUT02
         
C:002470   +          LDIZ    MLMSG_FP_NOFILES*2
C:002470 e9ee      LDI     ZL,LOW(MLMSG_FP_NOFILES*2)
C:002471 e0fc      LDI     ZH,HIGH(MLMSG_FP_NOFILES*2)
C:002472 940e 1715         CALL    SCR_PRINTMLSTR
C:002474 e126              LDI     COUNT,FLFP_WIDTH-12 ;22
C:002475 c001              RJMP    FPOUT03
C:002476 e222      FPOUT02:LDI     COUNT,FLFP_WIDTH ;34
C:002477 e200      FPOUT03:LDI     DATA,$20
C:002478 940e 174c         CALL    SCR_FILL_CHAR
C:00247a c059              RJMP    FPOUT90
         
C:00247b   +  FPOUT01:LDIZ    FL_BUFFER
C:00247b e0e0      LDI     ZL,LOW(FL_BUFFER)
C:00247c e0fa      LDI     ZH,HIGH(FL_BUFFER)
C:00247d e210              LDI     TEMP,32
C:00247e 9f01              MUL     DATA,TEMP
C:00247f 0de0              ADD     ZL,R0
C:002480 1df1              ADC     ZH,R1
C:002481 93ef              PUSH    ZL
C:002482 e028              LDI     COUNT,8
C:002483 940e 1730         CALL    SCR_PRNRAMSTRN
C:002485 e200              LDI     DATA,$20
C:002486 940e 1742         CALL    SCR_PUTCHAR
C:002488 e023              LDI     COUNT,3
C:002489 940e 1730         CALL    SCR_PRNRAMSTRN
C:00248b eb03              LDI     DATA,$B3 ;"│"
C:00248c 940e 1742         CALL    SCR_PUTCHAR
C:00248e 91ef              POP     ZL
                 ;here Z=0
C:00248f   +          PUSHZ
C:00248f 93ef      PUSH    ZL
C:002490 93ff      PUSH    ZH
C:002491 8503              LDD     DATA,Z+11
C:002492 2300              TST     DATA
C:002493 f029              BREQ    FPOUT11
C:002494   +          LDIZ    MSG_FP_DIR*2
C:002494 efea      LDI     ZL,LOW(MSG_FP_DIR*2)
C:002495 e3fb      LDI     ZH,HIGH(MSG_FP_DIR*2)
C:002496 940e 171a         CALL    SCR_PRINTSTRZ
C:002498 c007              RJMP    FPOUT12
C:002499 8d84      FPOUT11:LDD     WL,Z+28
C:00249a 8d95              LDD     WH,Z+29
C:00249b 8da6              LDD     XL,Z+30
C:00249c d051              RCALL   SCR_DEC1M
C:00249d eb03              LDI     DATA,$B3 ;"│"
C:00249e 940e 1742         CALL    SCR_PUTCHAR
C:0024a0   +  FPOUT12:POPZ
C:0024a0 91ff      POP     ZH
C:0024a1 91ef      POP     ZL
         
C:0024a2 8d00              LDD     DATA,Z+24
C:0024a3 710f              ANDI    DATA,$1F
C:0024a4 940e 1503         CALL    DECBYTE
C:0024a6 e20e              LDI     DATA,$2E ;"."
C:0024a7 940e 1742         CALL    SCR_PUTCHAR
C:0024a9 8d00              LDD     DATA,Z+24
C:0024aa 8d11              LDD     TEMP,Z+25
C:0024ab 9517              ROR     TEMP
C:0024ac 9507              ROR     DATA
C:0024ad 9502              SWAP    DATA
C:0024ae 700f              ANDI    DATA,$0F
C:0024af 940e 1503         CALL    DECBYTE
C:0024b1 e20e              LDI     DATA,$2E ;"."
C:0024b2 940e 1742         CALL    SCR_PUTCHAR
C:0024b4 8d01              LDD     DATA,Z+25
C:0024b5 9506              LSR     DATA
C:0024b6   +          ADDI    DATA,80 ;+1980
C:0024b6 5b00      SUBI    DATA,(-(80)&$FF)
C:0024b7 3604      FPOUT14:CPI     DATA,100
C:0024b8 f010              BRCS    FPOUT13
C:0024b9 5604              SUBI    DATA,100
C:0024ba cffc              RJMP    FPOUT14
C:0024bb 940e 1503 FPOUT13:CALL    DECBYTE
C:0024bd eb03              LDI     DATA,$B3 ;"│"
C:0024be 940e 1742         CALL    SCR_PUTCHAR
         
C:0024c0 8907              LDD     DATA,Z+23
C:0024c1 9506              LSR     DATA
C:0024c2 9506              LSR     DATA
C:0024c3 9506              LSR     DATA
C:0024c4 940e 1503         CALL    DECBYTE
C:0024c6 e30a              LDI     DATA,$3A ;":"
C:0024c7 940e 1742         CALL    SCR_PUTCHAR
C:0024c9 8916              LDD     TEMP,Z+22
C:0024ca 8907              LDD     DATA,Z+23
C:0024cb 1f11              ROL     TEMP
C:0024cc 1f00              ROL     DATA
C:0024cd 1f11              ROL     TEMP
C:0024ce 1f00              ROL     DATA
C:0024cf 1f11              ROL     TEMP
C:0024d0 1f00              ROL     DATA
C:0024d1 730f              ANDI    DATA,$3F
C:0024d2 940e 1503         CALL    DECBYTE
         
C:0024d4 912f      FPOUT90:POP     COUNT
C:0024d5 9523              INC     COUNT
C:0024d6 302b              CPI     COUNT,FLFP_HEIGHT
C:0024d7 f408              BRCC    FPOUT91
C:0024d8 cf83              RJMP    FPOUT00
          FPOUT91:
C:0024d9 9508              RET
         ;
         ;======================================
         ;For CodePage866 only!!!
         ;in:    DATA
         ;out:   DATA
C:0024da 3401      TOLOWER:CPI     DATA,$41
C:0024db f088              BRCS    TOLOW9   ;$00..."@"
C:0024dc 350b              CPI     DATA,$5B
C:0024dd f070              BRCS    TOLOW8   ;"A"..."Z"
C:0024de 3800              CPI     DATA,$80
C:0024df f068              BRCS    TOLOW9   ;"["...""
C:0024e0 3900              CPI     DATA,$90
C:0024e1 f050              BRCS    TOLOW8   ;"А"..."П"
C:0024e2 3a00              CPI     DATA,$A0
C:0024e3 f030              BRCS    TOLOW7   ;"Р"..."Я"
C:0024e4 3f00              CPI     DATA,$F0
C:0024e5 f038              BRCS    TOLOW9   ;"а"..."я"
C:0024e6 3f08              CPI     DATA,$F8
C:0024e7 f428              BRCC    TOLOW9   ;$F8...$FF
C:0024e8 6001              ORI     DATA,$01 ;"Ё"..."ў"
C:0024e9 9508              RET
C:0024ea   +  TOLOW7: ADDI    DATA,$50
C:0024ea 5b00      SUBI    DATA,(-($50)&$FF)
C:0024eb 9508              RET
C:0024ec   +  TOLOW8: ADDI    DATA,$20
C:0024ec 5e00      SUBI    DATA,(-($20)&$FF)
C:0024ed 9508      TOLOW9: RET
         ;
         ;======================================
         ;out number (up to 999999) in dec (right justify)
         ;in:    XL,WH,WL == number
          SCR_DEC1M:
C:0024ee   +          LDIZ    DEC1MTAB*2
C:0024ee e2e0      LDI     ZL,LOW(DEC1MTAB*2)
C:0024ef e4fa      LDI     ZH,HIGH(DEC1MTAB*2)
C:0024f0 e025              LDI     COUNT,5
C:0024f1 2c2e              MOV     R2,ONE
C:0024f2 2700              CLR     DATA
C:0024f3 9005      DEC1M5: LPM     R0,Z+
C:0024f4 9015              LPM     R1,Z+
C:0024f5 1980      DEC1M2: SUB     WL,R0
C:0024f6 0991              SBC     WH,R1
C:0024f7 09a2              SBC     XL,R2
C:0024f8 f010              BRCS    DEC1M1
C:0024f9 9503              INC     DATA
C:0024fa cffa              RJMP    DEC1M2
C:0024fb 0d80      DEC1M1: ADD     WL,R0
C:0024fc 1d91              ADC     WH,R1
C:0024fd 1da2              ADC     XL,R2
C:0024fe 2300              TST     DATA
C:0024ff f429              BRNE    DEC1M3
C:002500 e200              LDI     DATA,$20
C:002501 940e 1742         CALL    SCR_PUTCHAR
C:002503 2700              CLR     DATA
C:002504 c004              RJMP    DEC1M4
C:002505 6300      DEC1M3: ORI     DATA,$30
C:002506 940e 1742         CALL    SCR_PUTCHAR
C:002508 e300              LDI     DATA,$30
C:002509 2422      DEC1M4: CLR     R2
C:00250a 952a              DEC     COUNT
C:00250b f739              BRNE    DEC1M5
C:00250c 2f08              MOV     DATA,WL
C:00250d 6300              ORI     DATA,$30
C:00250e 940c 1742         JMP     SCR_PUTCHAR
          DEC1MTAB:.DW    $86A0,10000,1000,100,10
C:002510 86a0
         ;
         ;======================================
         ;in:    Z == buffer ptr
         ;       TMP2 == lo index
         ;       TMP3 == hi index
C:002515 1767      FSORT:  CP      TMP2,TMP3
C:002516 f00c              BRLT    FSRT_1
C:002517 9508              RET
C:002518 2f96      FSRT_1: MOV     WH,TMP2
C:002519 0f97              ADD     WH,TMP3
C:00251a 9596              LSR     WH
C:00251b 2f86              MOV     WL,TMP2
C:00251c d027              RCALL   FXCHNG
C:00251d 2e26              MOV     R2,TMP2
C:00251e 9423              INC     R2
C:00251f 2e37              MOV     R3,TMP3
C:002520 1432      FSRT_2: CP      R3,R2
C:002521 f0b4              BRLT    FSRT_7
C:002522 1572      FSRT_3: CP      TMP3,R2
C:002523 f034              BRLT    FSRT_4
C:002524 2f86              MOV     WL,TMP2
C:002525 2d92              MOV     WH,R2
C:002526 d033              RCALL   FCOMP
C:002527 f010              BRCS    FSRT_4
C:002528 9423              INC     R2
C:002529 cff8              RJMP    FSRT_3
C:00252a 1636      FSRT_4: CP      R3,TMP2
C:00252b f034              BRLT    FSRT_5
C:00252c 2f86              MOV     WL,TMP2
C:00252d 2d93              MOV     WH,R3
C:00252e d02b              RCALL   FCOMP
C:00252f f410              BRCC    FSRT_5
C:002530 943a              DEC     R3
C:002531 cff8              RJMP    FSRT_4
C:002532 1423      FSRT_5: CP      R2,R3
C:002533 f41c              BRGE    FSRT_6
C:002534 2d82              MOV     WL,R2
C:002535 2d93              MOV     WH,R3
C:002536 d00d              RCALL   FXCHNG
C:002537 cfe8      FSRT_6: RJMP    FSRT_2
C:002538 2f86      FSRT_7: MOV     WL,TMP2
C:002539 2d93              MOV     WH,R3
C:00253a d009              RCALL   FXCHNG
C:00253b 923f              PUSH    R3
C:00253c 937f              PUSH    TMP3
C:00253d 2d73              MOV     TMP3,R3
C:00253e 957a              DEC     TMP3
C:00253f dfd5              RCALL   FSORT
C:002540 917f              POP     TMP3
C:002541 916f              POP     TMP2
C:002542 9563              INC     TMP2
C:002543 cfd1              RJMP    FSORT
         ;
         ;======================================
         ;in:    Z
         ;       WL, WH - indexes
         ;chng:  COUNT,DATA,TEMP (,X,R0,R1)
          FXCHNG:
C:002544 1789              CP      WL,WH
C:002545 f409              BRNE    FXCHN_1
C:002546 9508              RET
          FXCHN_1:
C:002547   +          PUSHZ
C:002547 93ef      PUSH    ZL
C:002548 93ff      PUSH    ZH
C:002549 01df              MOVW    XL,ZL
C:00254a e220              LDI     COUNT,32
C:00254b 9f82              MUL     WL,COUNT
C:00254c 0da0              ADD     XL,R0
C:00254d 1db1              ADC     XH,R1
C:00254e 9f92              MUL     WH,COUNT
C:00254f 0de0              ADD     ZL,R0
C:002550 1df1              ADC     ZH,R1
C:002551 910c      FXCHN_2:LD      DATA,X
C:002552 8110              LD      TEMP,Z
C:002553 931d              ST      X+,TEMP
C:002554 9301              ST      Z+,DATA
C:002555 952a              DEC     COUNT
C:002556 f7d1              BRNE    FXCHN_2
C:002557   +          POPZ
C:002557 91ff      POP     ZH
C:002558 91ef      POP     ZL
C:002559 9508              RET
         ;
         ;======================================
         ;in:    Z
         ;       WL, WH - indexes
         ;out:   sreg.C - SET - [WL]<[WH], CLR - [WL]>=[WH]
         ;chng:  COUNT,DATA,TEMP (,X,R0,R1)
C:00255a   +  FCOMP:  PUSHZ
C:00255a 93ef      PUSH    ZL
C:00255b 93ff      PUSH    ZH
C:00255c 01df              MOVW    XL,ZL
C:00255d e200              LDI     DATA,32
C:00255e 9f90              MUL     WH,DATA
C:00255f 0da0              ADD     XL,R0
C:002560 1db1              ADC     XH,R1
C:002561 9f80              MUL     WL,DATA
C:002562 0de0              ADD     ZL,R0
C:002563 1df1              ADC     ZH,R1
C:002564 8513              LDD     TEMP,Z+11
C:002565 7d1e              ANDI    TEMP,0B11011110
C:002566   +          ADDI    XL,11
C:002566 5fa5      SUBI    XL,(-(11)&$FF)
C:002567 910c              LD      DATA,X
C:002568 7d0e              ANDI    DATA,0B11011110
C:002569 1701              CP      DATA,TEMP
C:00256a f441              BRNE    FCMP9
C:00256b 50ab              SUBI    XL,11
C:00256c e02b              LDI     COUNT,11
C:00256d 910d      FCMP1:  LD      DATA,X+
C:00256e 9111              LD      TEMP,Z+
C:00256f 1710              CP      TEMP,DATA
C:002570 f411              BRNE    FCMP9
C:002571 952a              DEC     COUNT
C:002572 f7d1              BRNE    FCMP1
C:002573   +  FCMP9:  POPZ
C:002573 91ff      POP     ZH
C:002574 91ef      POP     ZL
C:002575 9508              RET
         ;
         ;======================================
         ;
          FL_CRC_CMP:
C:002576 9105              LPM     DATA,Z+
C:002577 1500              CP      DATA,R0
C:002578 f449              BRNE    FL_CRCCMP1
C:002579 9105              LPM     DATA,Z+
C:00257a 1501              CP      DATA,R1
C:00257b f431              BRNE    FL_CRCCMP1
C:00257c 9105              LPM     DATA,Z+
C:00257d 1502              CP      DATA,R2
C:00257e f419              BRNE    FL_CRCCMP1
C:00257f 9105              LPM     DATA,Z+
C:002580 1503              CP      DATA,R3
C:002581 f401              BRNE    FL_CRCCMP1
          FL_CRCCMP1:
C:002582 9508              RET
         ;
         ;======================================
         ;
          FL_SHOWCONTENT:
C:002583   +          LDIZ    FL_CONTENT
C:002583 e0e0      LDI     ZL,LOW(FL_CONTENT)
C:002584 e0f8      LDI     ZH,HIGH(FL_CONTENT)
C:002585 2722              CLR     COUNT
         
C:002586   +  FL_SHW1:STH     FLSH_TEMP2,COUNT
C:002586 872f      STD     Y+FLSH_TEMP2,COUNT
C:002587 d022              RCALL   FL_SHW_SETCURSOR
C:002588 8100              LD      DATA,Z
C:002589 e01e              LDI     TEMP,$0E
C:00258a fd07              SBRC    DATA,7
C:00258b e017              LDI     TEMP,$07
C:00258c   +          LDH     COUNT,FLSH_TEMP2
C:00258c 852f      LDD     COUNT,Y+FLSH_TEMP2
C:00258d   +          LDH     DATA,FLSH_START
C:00258d 8909      LDD     DATA,Y+FLSH_START
C:00258e 1720              CP      COUNT,DATA
C:00258f f028              BRCS    FL_SHW5
C:002590   +          LDH     XH,FLSH_SIZE
C:002590 89ba      LDD     XH,Y+FLSH_SIZE
C:002591 0f0b              ADD     DATA,XH
C:002592 1720              CP      COUNT,DATA
C:002593 f408              BRCC    FL_SHW5
C:002594 ef10              LDI     TEMP,$F0
C:002595   +  FL_SHW5:LDH     XH,FLSH_TEMP2
C:002595 85bf      LDD     XH,Y+FLSH_TEMP2
C:002596 e100              LDI     DATA,$10
C:002597 fdb2              SBRC    XH,2
C:002598 2710              EOR     TEMP,DATA
C:002599 940e 1705         CALL    SCR_SET_ATTR
         
C:00259b 9635              ADIW    ZL,5
C:00259c e028              LDI     COUNT,8
C:00259d 940e 1730         CALL    SCR_PRNRAMSTRN
C:00259f e200              LDI     DATA,$20
C:0025a0 940e 1742         CALL    SCR_PUTCHAR
C:0025a2 e023              LDI     COUNT,3
C:0025a3 940e 1730         CALL    SCR_PRNRAMSTRN
         
C:0025a5   +          LDH     COUNT,FLSH_TEMP2
C:0025a5 852f      LDD     COUNT,Y+FLSH_TEMP2
C:0025a6 9523              INC     COUNT
C:0025a7 3220              CPI     COUNT,32
C:0025a8 f2e8              BRCS    FL_SHW1
C:0025a9 9508              RET
         ;
         ;======================================
         ;
          FL_SHW_SETCURSOR:
C:0025aa 2fa2              MOV     XL,COUNT
C:0025ab 70a3              ANDI    XL,$03
C:0025ac e01d              LDI     TEMP,13
C:0025ad 9fa1              MUL     XL,TEMP
C:0025ae 2da0              MOV     XL,R0
C:0025af 95a3              INC     XL
C:0025b0 2fb2              MOV     XH,COUNT
C:0025b1 71bc              ANDI    XH,$1C
C:0025b2 95b6              LSR     XH
C:0025b3 95b6              LSR     XH
C:0025b4   +          ADDI    XH,15
C:0025b4 5fb1      SUBI    XH,(-(15)&$FF)
C:0025b5 940c 1708         JMP     SCR_SET_CURSOR
         ;
         ;======================================
         ;
          ;
          .INCLUDE "_t_video.asm"
          .EQU    TVID_TST_CNT    =0
         ;
         ;--------------------------------------
         ;
          TESTVIDEO:
C:0025b7   +          GETMEM  1
C:0025b7 9721      SBIW    YL,1
         
C:0025b8 e0a0              LDI     XL,0
C:0025b9 e0b0              LDI     XH,0
C:0025ba 940e 1708         CALL    SCR_SET_CURSOR
C:0025bc e000              LDI     DATA,$00
C:0025bd e010              LDI     TEMP,$00
C:0025be   +          LDIW    53*25
C:0025be e28d      LDI     WL,LOW(53*25)
C:0025bf e095      LDI     WH,HIGH(53*25)
C:0025c0 940e 175b         CALL    SCR_FILLLONG_CHAR_ATTR
C:0025c2 e0af              LDI     XL,15
C:0025c3 e0b4              LDI     XH,4
C:0025c4 940e 1708         CALL    SCR_SET_CURSOR
C:0025c6   +          LDIZ    (MSG_TITLE2*2)+3
C:0025c6 eee9      LDI     ZL,LOW((MSG_TITLE2*2)+3)
C:0025c7 e0f0      LDI     ZH,HIGH((MSG_TITLE2*2)+3)
C:0025c8 940e 171a         CALL    SCR_PRINTSTRZ
         
C:0025ca 2d0a      T_VID22:MOV     DATA,MODE1
C:0025cb 7800              ANDI    DATA,0B10000000
C:0025cc 9503      T_VID21:INC     DATA
C:0025cd   +          STH     TVID_TST_CNT,DATA
C:0025cd 8308      STD     Y+TVID_TST_CNT,DATA
C:0025ce ea1f              LDI     TEMP,SCR_MODE
C:0025cf 940e 176f         CALL    FPGA_REG
C:0025d1 940e 0fef         CALL    WAITKEY
C:0025d3 3706              CPI     DATA,KEY_ESC
C:0025d4 f031              BREQ    T_VID99
C:0025d5   +          LDH     DATA,TVID_TST_CNT
C:0025d5 8108      LDD     DATA,Y+TVID_TST_CNT
C:0025d6 2f10              MOV     TEMP,DATA
C:0025d7 701f              ANDI    TEMP,$0F
C:0025d8 3016              CPI     TEMP,6
C:0025d9 f390              BRCS    T_VID21
C:0025da cfef              RJMP    T_VID22
         
C:0025db 2d0a      T_VID99:MOV     DATA,MODE1
C:0025dc 7800              ANDI    DATA,0B10000000
C:0025dd ea1f              LDI     TEMP,SCR_MODE
C:0025de 940e 176f         CALL    FPGA_REG
         
C:0025e0   +          FREEMEM 1
C:0025e0 9621      ADIW    YL,1
C:0025e1 9508              RET
         ;
         ;--------------------------------------
         ;
          ;
          .INCLUDE "_t_dram.asm"
         ;3         4         5
         ;01234567890123456789012
         ;┌──── Тест DRAM ────┐  18
         ;│ Проведено циклов  │  19
         ;│ без ошибок   1234 │  20
         ;│ с ошибками      0 │  21
         ;└───────────────────┘  22
         ;
         ;
          .EQU    MTST_PASS_LO    =0
          .EQU    MTST_PASS_HI    =1
          .EQU    MTST_FAIL_LO    =2
          .EQU    MTST_FAIL_HI    =3
          .EQU    MTST_CALLMODE   =4
         ;
         ;--------------------------------------
         ;
          MTST_SHOW_REPORT:
C:0025e2   +          GETMEM  5
C:0025e2 9725      SBIW    YL,5
C:0025e3   +          STH     MTST_CALLMODE,DATA
C:0025e3 830c      STD     Y+MTST_CALLMODE,DATA
C:0025e4 934f              PUSH    FLAGS1
C:0025e5 7f4c              ANDI    FLAGS1,0B11111100
         
C:0025e6 e511              LDI     TEMP,MTST_PASS_CNT0
C:0025e7 940e 176f         CALL    FPGA_REG
C:0025e9   +          STH     MTST_PASS_LO,DATA
C:0025e9 8308      STD     Y+MTST_PASS_LO,DATA
C:0025ea ea10              LDI     TEMP,MTST_PASS_CNT1
C:0025eb 940e 176f         CALL    FPGA_REG
C:0025ed   +          STH     MTST_PASS_HI,DATA
C:0025ed 8309      STD     Y+MTST_PASS_HI,DATA
C:0025ee e512              LDI     TEMP,MTST_FAIL_CNT0
C:0025ef 940e 176f         CALL    FPGA_REG
C:0025f1   +          STH     MTST_FAIL_LO,DATA
C:0025f1 830a      STD     Y+MTST_FAIL_LO,DATA
C:0025f2 ea10              LDI     TEMP,MTST_FAIL_CNT1
C:0025f3 940e 176f         CALL    FPGA_REG
C:0025f5   +          STH     MTST_FAIL_HI,DATA
C:0025f5 830b      STD     Y+MTST_FAIL_HI,DATA
         
C:0025f6   +          LDH     TEMP,MTST_FAIL_LO
C:0025f6 811a      LDD     TEMP,Y+MTST_FAIL_LO
C:0025f7 2b01              OR      DATA,TEMP
C:0025f8 f451              BRNE    MTST_RPT1
         
C:0025f9   +          LDH     TEMP,MTST_CALLMODE
C:0025f9 811c      LDD     TEMP,Y+MTST_CALLMODE
C:0025fa 2311              TST     TEMP
C:0025fb f021              BREQ    MTST_RPT3
C:0025fc e717              LDI     TEMP,$77
C:0025fd 940e 1705         CALL    SCR_SET_ATTR
C:0025ff c00b              RJMP    MTST_RPT4
          MTST_RPT3:
C:002600   +          LDIZ    WIND_T_DRAM_1*2
C:002600 e5e0      LDI     ZL,LOW(WIND_T_DRAM_1*2)
C:002601 e4fc      LDI     ZH,HIGH(WIND_T_DRAM_1*2)
C:002602 c002              RJMP    MTST_RPT2
          MTST_RPT1:
C:002603   +          LDIZ    WIND_T_DRAM_2*2
C:002603 e5e6      LDI     ZL,LOW(WIND_T_DRAM_2*2)
C:002604 e4fc      LDI     ZH,HIGH(WIND_T_DRAM_2*2)
          MTST_RPT2:
C:002605 940e 157b         CALL    WINDOW
         
C:002607   +          LDIZ    MLMSG_MTST*2
C:002607 e9e6      LDI     ZL,LOW(MLMSG_MTST*2)
C:002608 e0fb      LDI     ZH,HIGH(MLMSG_MTST*2)
C:002609 940e 1715         CALL    SCR_PRINTMLSTR
          MTST_RPT4:
C:00260b e2ab              LDI     XL,43
C:00260c e1b4              LDI     XH,20
C:00260d 940e 1708         CALL    SCR_SET_CURSOR
C:00260f   +          LDH     XL,MTST_PASS_LO
C:00260f 81a8      LDD     XL,Y+MTST_PASS_LO
C:002610   +          LDH     XH,MTST_PASS_HI
C:002610 81b9      LDD     XH,Y+MTST_PASS_HI
C:002611 d00a              RCALL   MTST_DECWORD
         
C:002612 e2ab              LDI     XL,43
C:002613 e1b5              LDI     XH,21
C:002614 940e 1708         CALL    SCR_SET_CURSOR
C:002616   +          LDH     XL,MTST_FAIL_LO
C:002616 81aa      LDD     XL,Y+MTST_FAIL_LO
C:002617   +          LDH     XH,MTST_FAIL_HI
C:002617 81bb      LDD     XH,Y+MTST_FAIL_HI
C:002618 d003              RCALL   MTST_DECWORD
         
C:002619 914f              POP     FLAGS1
C:00261a   +          FREEMEM 5
C:00261a 9625      ADIW    YL,5
C:00261b 9508              RET
         ;
          MTST_DECWORD:
C:00261c   +          PUSHX
C:00261c 93af      PUSH    XL
C:00261d 93bf      PUSH    XH
C:00261e 9611              ADIW    XL,1
C:00261f e200              LDI     DATA,$20 ;" "
C:002620 f409              BRNE    MTST_DECWRD1
C:002621 e30e              LDI     DATA,$3E ;">"
          MTST_DECWRD1:
C:002622 940e 1742         CALL    SCR_PUTCHAR
C:002624   +          POPX
C:002624 91bf      POP     XH
C:002625 91af      POP     XL
C:002626 940c 1522         JMP     DECWORD
         ;
         ;--------------------------------------
         ;
          WIND_T_DRAM_1:
                  .DB     30,18,21,5,$77,$00
C:002628 1E1215057700
          WIND_T_DRAM_2:
                  .DB     30,18,21,5,$AE,$00
C:00262B 1E121505AE00
         ;
         ;--------------------------------------
         ;
          ;
          .INCLUDE "_misc.asm"
         ;
         ;--------------------------------------
         ;деление целочисл. без знака  32 бит на 16 бит
         ;in:    ZX - делимое
         ;       W  - делитель
         ;out:   ZX - результат
         ;       TEMPDATA - остаток
         ;chng:  COUNT
          DIV3216U:
C:00262e e221              LDI     COUNT,33
C:00262f 2700              CLR     DATA
C:002630 1b11              SUB     TEMP,TEMP
          D3216U_1:
C:002631 1faa              ROL     XL
C:002632 1fbb              ROL     XH
C:002633 1fee              ROL     ZL
C:002634 1fff              ROL     ZH
C:002635 952a              DEC     COUNT
C:002636 f059              BREQ    D3216U_3
C:002637 1f00              ROL     DATA
C:002638 1f11              ROL     TEMP
C:002639 1b08              SUB     DATA,WL
C:00263a 0b19              SBC     TEMP,WH
C:00263b f420              BRCC    D3216U_2
C:00263c 0f08              ADD     DATA,WL
C:00263d 1f19              ADC     TEMP,WH
C:00263e 9488              CLC
C:00263f cff1              RJMP    D3216U_1
          D3216U_2:
C:002640 9408              SEC
C:002641 cfef              RJMP    D3216U_1
          D3216U_3:
C:002642 9508              RET
         ;
         ;--------------------------------------
         ;out:   DATA == п.случайное число
C:002643   +  RANDOM: PUSHW
C:002643 938f      PUSH    WL
C:002644 939f      PUSH    WH
C:002645 931f              PUSH    TEMP
C:002646 9180 0102         LDS     WL,RND+2
C:002648 9190 0103         LDS     WH,RND+3
C:00264a 9380 0103         STS     RND+3,WL
C:00264c 1f88              ROL     WL
C:00264d 1f99              ROL     WH
C:00264e 2f09              MOV     DATA,WH
C:00264f 1f88              ROL     WL
C:002650 1f99              ROL     WH
C:002651 1f88              ROL     WL
C:002652 1f99              ROL     WH
C:002653 1f88              ROL     WL
C:002654 1f99              ROL     WH
C:002655 2709              EOR     DATA,WH
C:002656 9180 0101         LDS     WL,RND+1
C:002658 9380 0102         STS     RND+2,WL
C:00265a 9180 0100         LDS     WL,RND+0
C:00265c 9380 0101         STS     RND+1,WL
C:00265e 9300 0100         STS     RND+0,DATA
C:002660 911f              POP     TEMP
C:002661   +          POPW
C:002661 919f      POP     WH
C:002662 918f      POP     WL
C:002663 9508              RET
         ;
         ;--------------------------------------
         ;
C:002664   +  CLRPINS:LDIZ    $0020
C:002664 e2e0      LDI     ZL,LOW($0020)
C:002665 e0f0      LDI     ZH,HIGH($0020)
C:002666 92f1      CLRPIN1:ST      Z+,NULL
C:002667 33ec              CPI     ZL,$3C
C:002668 f7e9              BRNE    CLRPIN1
C:002669 e6e1              LDI     ZL,$61
C:00266a 92f1      CLRPIN2:ST      Z+,NULL
C:00266b 36e6              CPI     ZL,$66
C:00266c f7e9              BRNE    CLRPIN2
C:00266d 9508              RET
         ;
         ;--------------------------------------
         ;in:    W == address
         ;out:   DATA == data
          EEPROM_READ:
C:00266e 99e1              SBIC    EECR,EEWE
C:00266f cffe              RJMP    EEPROM_READ
C:002670 bb9f              OUT     EEARH,WH
C:002671 bb8e              OUT     EEARL,WL
C:002672 9ae0              SBI     EECR,EERE
C:002673 b30d              IN      DATA,EEDR
C:002674 9508              RET
         ;
         ;--------------------------------------
         ;in:    W == address
         ;       DATA == data
          EEPROM_WRITE:
C:002675 2f10              MOV     TEMP,DATA
C:002676 dff7              RCALL   EEPROM_READ
C:002677 1710              CP      TEMP,DATA
C:002678 f029              BREQ    WREE9
C:002679 bb9f              OUT     EEARH,WH
C:00267a bb8e              OUT     EEARL,WL
C:00267b bb1d              OUT     EEDR,TEMP
C:00267c 9ae2              SBI     EECR,EEMWE
C:00267d 9ae1              SBI     EECR,EEWE
C:00267e 9508      WREE9:  RET
         ;
         ;--------------------------------------
         ;
          CRC32_INIT:
C:00267f 82d8              STD     Y+0,FF
C:002680 82d9              STD     Y+1,FF
C:002681 82da              STD     Y+2,FF
C:002682 82db              STD     Y+3,FF
C:002683 9508              RET
         ;
          CRC32_UPDATE:
C:002684   +          PUSHZ
C:002684 93ef      PUSH    ZL
C:002685 93ff      PUSH    ZH
C:002686 8118              LDD     TEMP,Y+0
C:002687 2701              EOR     DATA,TEMP
C:002688 2711              CLR     TEMP
C:002689 0f00              LSL     DATA
C:00268a 1f11              ROL     TEMP
C:00268b 0f00              LSL     DATA
C:00268c 1f11              ROL     TEMP
C:00268d   +          LDIZ    TAB32*2 ;в младших 64K
C:00268d e6ec      LDI     ZL,LOW(TAB32*2)
C:00268e e4fd      LDI     ZH,HIGH(TAB32*2)
C:00268f 0fe0              ADD     ZL,DATA
C:002690 1ff1              ADC     ZH,TEMP
C:002691 9105              LPM     DATA,Z+
C:002692 8119              LDD     TEMP,Y+1
C:002693 2701              EOR     DATA,TEMP
C:002694 8308              STD     Y+0,DATA
C:002695 9105              LPM     DATA,Z+
C:002696 811a              LDD     TEMP,Y+2
C:002697 2701              EOR     DATA,TEMP
C:002698 8309              STD     Y+1,DATA
C:002699 9105              LPM     DATA,Z+
C:00269a 811b              LDD     TEMP,Y+3
C:00269b 2701              EOR     DATA,TEMP
C:00269c 830a              STD     Y+2,DATA
C:00269d 9104              LPM     DATA,Z
C:00269e 830b              STD     Y+3,DATA
C:00269f   +          POPZ
C:00269f 91ff      POP     ZH
C:0026a0 91ef      POP     ZL
C:0026a1 9508              RET
         ;
          RAM_CRC32:
C:0026a2 dfdc              RCALL   CRC32_INIT
C:0026a3 d00d              RCALL   RAM_CRC32_UPDATE
         ;
          CRC32_RELEASE:
C:0026a4 8008              LDD     R0,Y+0
C:0026a5 9400              COM     R0
C:0026a6 8208              STD     Y+0,R0
C:0026a7 8019              LDD     R1,Y+1
C:0026a8 9410              COM     R1
C:0026a9 8219              STD     Y+1,R1
C:0026aa 802a              LDD     R2,Y+2
C:0026ab 9420              COM     R2
C:0026ac 822a              STD     Y+2,R2
C:0026ad 803b              LDD     R3,Y+3
C:0026ae 9430              COM     R3
C:0026af 823b              STD     Y+3,R3
C:0026b0 9508              RET
         ;
          RAM_CRC32_UPDATE:
C:0026b1 9101              LD      DATA,Z+
C:0026b2 dfd1              RCALL   CRC32_UPDATE
C:0026b3 9711              SBIW    XL,1
C:0026b4 f7e1              BRNE    RAM_CRC32_UPDATE
C:0026b5 9508              RET
         ;
          TAB32:  .DW     $0000,$0000,$3096,$7707,$612C,$EE0E,$51BA,$9909
C:0026b6 0000
                  .DW     $C419,$076D,$F48F,$706A,$A535,$E963,$95A3,$9E64
C:0026be c419
                  .DW     $8832,$0EDB,$B8A4,$79DC,$E91E,$E0D5,$D988,$97D2
C:0026c6 8832
                  .DW     $4C2B,$09B6,$7CBD,$7EB1,$2D07,$E7B8,$1D91,$90BF
C:0026ce 4c2b
                  .DW     $1064,$1DB7,$20F2,$6AB0,$7148,$F3B9,$41DE,$84BE
C:0026d6 1064
                  .DW     $D47D,$1ADA,$E4EB,$6DDD,$B551,$F4D4,$85C7,$83D3
C:0026de d47d
                  .DW     $9856,$136C,$A8C0,$646B,$F97A,$FD62,$C9EC,$8A65
C:0026e6 9856
                  .DW     $5C4F,$1401,$6CD9,$6306,$3D63,$FA0F,$0DF5,$8D08
C:0026ee 5c4f
                  .DW     $20C8,$3B6E,$105E,$4C69,$41E4,$D560,$7172,$A267
C:0026f6 20c8
                  .DW     $E4D1,$3C03,$D447,$4B04,$85FD,$D20D,$B56B,$A50A
C:0026fe e4d1
                  .DW     $A8FA,$35B5,$986C,$42B2,$C9D6,$DBBB,$F940,$ACBC
C:002706 a8fa
                  .DW     $6CE3,$32D8,$5C75,$45DF,$0DCF,$DCD6,$3D59,$ABD1
C:00270e 6ce3
                  .DW     $30AC,$26D9,$003A,$51DE,$5180,$C8D7,$6116,$BFD0
C:002716 30ac
                  .DW     $F4B5,$21B4,$C423,$56B3,$9599,$CFBA,$A50F,$B8BD
C:00271e f4b5
                  .DW     $B89E,$2802,$8808,$5F05,$D9B2,$C60C,$E924,$B10B
C:002726 b89e
                  .DW     $7C87,$2F6F,$4C11,$5868,$1DAB,$C161,$2D3D,$B666
C:00272e 7c87
                  .DW     $4190,$76DC,$7106,$01DB,$20BC,$98D2,$102A,$EFD5
C:002736 4190
                  .DW     $8589,$71B1,$B51F,$06B6,$E4A5,$9FBF,$D433,$E8B8
C:00273e 8589
                  .DW     $C9A2,$7807,$F934,$0F00,$A88E,$9609,$9818,$E10E
C:002746 c9a2
                  .DW     $0DBB,$7F6A,$3D2D,$086D,$6C97,$9164,$5C01,$E663
C:00274e 0dbb
                  .DW     $51F4,$6B6B,$6162,$1C6C,$30D8,$8565,$004E,$F262
C:002756 51f4
                  .DW     $95ED,$6C06,$A57B,$1B01,$F4C1,$8208,$C457,$F50F
C:00275e 95ed
                  .DW     $D9C6,$65B0,$E950,$12B7,$B8EA,$8BBE,$887C,$FCB9
C:002766 d9c6
                  .DW     $1DDF,$62DD,$2D49,$15DA,$7CF3,$8CD3,$4C65,$FBD4
C:00276e 1ddf
                  .DW     $6158,$4DB2,$51CE,$3AB5,$0074,$A3BC,$30E2,$D4BB
C:002776 6158
                  .DW     $A541,$4ADF,$95D7,$3DD8,$C46D,$A4D1,$F4FB,$D3D6
C:00277e a541
                  .DW     $E96A,$4369,$D9FC,$346E,$8846,$AD67,$B8D0,$DA60
C:002786 e96a
                  .DW     $2D73,$4404,$1DE5,$3303,$4C5F,$AA0A,$7CC9,$DD0D
C:00278e 2d73
                  .DW     $713C,$5005,$41AA,$2702,$1010,$BE0B,$2086,$C90C
C:002796 713c
                  .DW     $B525,$5768,$85B3,$206F,$D409,$B966,$E49F,$CE61
C:00279e b525
                  .DW     $F90E,$5EDE,$C998,$29D9,$9822,$B0D0,$A8B4,$C7D7
C:0027a6 f90e
                  .DW     $3D17,$59B3,$0D81,$2EB4,$5C3B,$B7BD,$6CAD,$C0BA
C:0027ae 3d17
                  .DW     $8320,$EDB8,$B3B6,$9ABF,$E20C,$03B6,$D29A,$74B1
C:0027b6 8320
                  .DW     $4739,$EAD5,$77AF,$9DD2,$2615,$04DB,$1683,$73DC
C:0027be 4739
                  .DW     $0B12,$E363,$3B84,$9464,$6A3E,$0D6D,$5AA8,$7A6A
C:0027c6 0b12
                  .DW     $CF0B,$E40E,$FF9D,$9309,$AE27,$0A00,$9EB1,$7D07
C:0027ce cf0b
                  .DW     $9344,$F00F,$A3D2,$8708,$F268,$1E01,$C2FE,$6906
C:0027d6 9344
                  .DW     $575D,$F762,$67CB,$8065,$3671,$196C,$06E7,$6E6B
C:0027de 575d
                  .DW     $1B76,$FED4,$2BE0,$89D3,$7A5A,$10DA,$4ACC,$67DD
C:0027e6 1b76
                  .DW     $DF6F,$F9B9,$EFF9,$8EBE,$BE43,$17B7,$8ED5,$60B0
C:0027ee df6f
                  .DW     $A3E8,$D6D6,$937E,$A1D1,$C2C4,$38D8,$F252,$4FDF
C:0027f6 a3e8
                  .DW     $67F1,$D1BB,$5767,$A6BC,$06DD,$3FB5,$364B,$48B2
C:0027fe 67f1
                  .DW     $2BDA,$D80D,$1B4C,$AF0A,$4AF6,$3603,$7A60,$4104
C:002806 2bda
                  .DW     $EFC3,$DF60,$DF55,$A867,$8EEF,$316E,$BE79,$4669
C:00280e efc3
                  .DW     $B38C,$CB61,$831A,$BC66,$D2A0,$256F,$E236,$5268
C:002816 b38c
                  .DW     $7795,$CC0C,$4703,$BB0B,$16B9,$2202,$262F,$5505
C:00281e 7795
                  .DW     $3BBE,$C5BA,$0B28,$B2BD,$5A92,$2BB4,$6A04,$5CB3
C:002826 3bbe
                  .DW     $FFA7,$C2D7,$CF31,$B5D0,$9E8B,$2CD9,$AE1D,$5BDE
C:00282e ffa7
                  .DW     $C2B0,$9B64,$F226,$EC63,$A39C,$756A,$930A,$026D
C:002836 c2b0
                  .DW     $06A9,$9C09,$363F,$EB0E,$6785,$7207,$5713,$0500
C:00283e 06a9
                  .DW     $4A82,$95BF,$7A14,$E2B8,$2BAE,$7BB1,$1B38,$0CB6
C:002846 4a82
                  .DW     $8E9B,$92D2,$BE0D,$E5D5,$EFB7,$7CDC,$DF21,$0BDB
C:00284e 8e9b
                  .DW     $D2D4,$86D3,$E242,$F1D4,$B3F8,$68DD,$836E,$1FDA
C:002856 d2d4
                  .DW     $16CD,$81BE,$265B,$F6B9,$77E1,$6FB0,$4777,$18B7
C:00285e 16cd
                  .DW     $5AE6,$8808,$6A70,$FF0F,$3BCA,$6606,$0B5C,$1101
C:002866 5ae6
                  .DW     $9EFF,$8F65,$AE69,$F862,$FFD3,$616B,$CF45,$166C
C:00286e 9eff
                  .DW     $E278,$A00A,$D2EE,$D70D,$8354,$4E04,$B3C2,$3903
C:002876 e278
                  .DW     $2661,$A767,$16F7,$D060,$474D,$4969,$77DB,$3E6E
C:00287e 2661
                  .DW     $6A4A,$AED1,$5ADC,$D9D6,$0B66,$40DF,$3BF0,$37D8
C:002886 6a4a
                  .DW     $AE53,$A9BC,$9EC5,$DEBB,$CF7F,$47B2,$FFE9,$30B5
C:00288e ae53
                  .DW     $F21C,$BDBD,$C28A,$CABA,$9330,$53B3,$A3A6,$24B4
C:002896 f21c
                  .DW     $3605,$BAD0,$0693,$CDD7,$5729,$54DE,$67BF,$23D9
C:00289e 3605
                  .DW     $7A2E,$B366,$4AB8,$C461,$1B02,$5D68,$2B94,$2A6F
C:0028a6 7a2e
                  .DW     $BE37,$B40B,$8EA1,$C30C,$DF1B,$5A05,$EF8D,$2D02
C:0028ae be37
         ;
         ;--------------------------------------
         ;
          ;
          .INCLUDE "_t_rs232.asm"
         ; 3                                             9
         ;┌───────────────────────────────────────────────┐
         ;│      ┌──────────┬─────────────────────┐       │
         ;│      │ pc/win32 │  TESTCOM            │       │
         ;│      ├──────────┘                     │       │
         ;│      │ Bit rate 115200   No parity    │       │
         ;│      │ Data bits 8       Flow control │       │
         ;│      │ Stop bits 2        √ RTS/CTS   │       │
         ;│      │                   DSR - Ignored│       │
         ;│      │           Start BERT           │       │
         ;│      └───────────────┬────────────────┘       │
         ;│                      │COM port                │
         ;│                      │                        │
         ;│                RS-232│                        │
         ;│┌────────┬────────────┴───────────────────────┐│
         ;││ ZX-Evo │   Last sec        65535 sec        ││16
         ;│├────────┘     10472            10472         ││17
         ;││ RxBuff ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ RTS ││18
         ;││ TxBuff ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ CTS ││19
         ;│└─────────────────────────────────────────────┘│20
         ;└───────────────────────────────────────────────┘
         ; 3                                             9
         ;
         ;--------------------------------------
         ;
          .EQU    TRS_TIMEOUT     =0
          .EQU    TRS_SECONDS     =2
          .EQU    TRS_COUNT_LAST  =4
          .EQU    TRS_COUNT_TOTAL =6
         ;                        10
         ;--------------------------------------
         ;
          MSG_TRS_1:
                  .DB     $16,20, 3,$C2
C:0028B6 161403C2
                  .DB     $16,11, 4,"pc/win32 "
C:0028B8 160B0470632F77696E333220
                  .DB     $16,23, 4,"TESTCOM"
C:0028BE 16170454455354434F4D
                  .DB     $16, 9, 5,$C3
C:0028C3 160905C3
                  .DB     $16,11, 6,"Bit rate 115200   No parity"
C:0028C5 160B064269742072617465203131353230302020204E6F20706172697479
                  .DB     $16,11, 7,"Data bits 8"
C:0028D4 160B074461746120626974732038
                  .DB     $16,29, 7,"Flow control "
C:0028DB 161D07466C6F7720636F6E74726F6C20
                  .DB     $16,11, 8,"Stop bits 2"
C:0028E3 160B0853746F7020626974732032
                  .DB     $16,30, 8,$FB," RTS/CTS"
C:0028EA 161E08FB205254532F435453
                  .DB     $16,29, 9,"DSR - Ignored"
C:0028F0 161D09445352202D2049676E6F726564
                  .DB     $16,21,10,"Start BERT "
C:0028F8 16150A5374617274204245525420
                  .DB     $16,25,11,$C2
C:0028FF 16190BC2
                  .DB     $16,25,12,$B3,"COM port"
C:002901 16190CB3434F4D20706F7274
                  .DB     $16,25,13,$B3
C:002907 16190DB3
                  .DB     $16,19,14,"RS-232",$B3
C:002909 16130E52532D323332B3
                  .DB     $16,12,15,$C2
C:00290E 160C0FC2
                  .DB     $16,25,15,$C1
C:002910 16190FC1
                  .DB     $16, 5,16,"ZX Evo",$16,16,16,"Last sec"
C:002912 1605105A582045766F1610104C61737420736563
                  .DB     $16,38,16,"sec"
C:00291C 162610736563
                  .DB     $16, 3,17,$C3
C:00291F 160311C3
                  .DB     $16, 5,18,"RxBuff",$16,45,18,"RTS",$16, 5,19,"TxBuff",$16,45,19,"CTS",0,0
C:002921 160512527842756666162D12525453160513547842756666162D134354530000
         ;
         ;--------------------------------------
         ;
          WIND_T_RS_1:
                  .DB     2,2,49,20,$DF,$01
C:002931 02023114DF01
          WIND_T_RS_2:
                  .DB     9,3,34,9,$DF,$00
C:002934 09032209DF00
          WIND_T_RS_3:
                  .DB     9,3,12,3,$DF,$00
C:002937 09030C03DF00
          WIND_T_RS_4:
                  .DB     3,15,47,6,$DF,$00
C:00293A 030F2F06DF00
          WIND_T_RS_5:
                  .DB     3,15,10,3,$DF,$00
C:00293D 030F0A03DF00
         ;
         ;--------------------------------------
         ;
          TESTRS232:
C:002940 7f4c              ANDI    FLAGS1,0B11111100
C:002941 6044              ORI     FLAGS1,0B00000100
C:002942   +          GETMEM  10
C:002942 972a      SBIW    YL,10
         
C:002943   +          LDIZ    WIND_T_RS_1*2
C:002943 e6e2      LDI     ZL,LOW(WIND_T_RS_1*2)
C:002944 e5f2      LDI     ZH,HIGH(WIND_T_RS_1*2)
C:002945 940e 157b         CALL    WINDOW
C:002947   +          LDIZ    WIND_T_RS_2*2
C:002947 e6e8      LDI     ZL,LOW(WIND_T_RS_2*2)
C:002948 e5f2      LDI     ZH,HIGH(WIND_T_RS_2*2)
C:002949 940e 157b         CALL    WINDOW
C:00294b   +          LDIZ    WIND_T_RS_3*2
C:00294b e6ee      LDI     ZL,LOW(WIND_T_RS_3*2)
C:00294c e5f2      LDI     ZH,HIGH(WIND_T_RS_3*2)
C:00294d 940e 157b         CALL    WINDOW
C:00294f   +          LDIZ    WIND_T_RS_4*2
C:00294f e7e4      LDI     ZL,LOW(WIND_T_RS_4*2)
C:002950 e5f2      LDI     ZH,HIGH(WIND_T_RS_4*2)
C:002951 940e 157b         CALL    WINDOW
C:002953   +          LDIZ    WIND_T_RS_5*2
C:002953 e7ea      LDI     ZL,LOW(WIND_T_RS_5*2)
C:002954 e5f2      LDI     ZH,HIGH(WIND_T_RS_5*2)
C:002955 940e 157b         CALL    WINDOW
C:002957   +          LDIZ    MSG_TRS_1*2
C:002957 e6ec      LDI     ZL,LOW(MSG_TRS_1*2)
C:002958 e5f1      LDI     ZH,HIGH(MSG_TRS_1*2)
C:002959 940e 171a         CALL    SCR_PRINTSTRZ
         
C:00295b   +  T_RS_0: STH     TRS_SECONDS+0,FF
C:00295b 82da      STD     Y+TRS_SECONDS+0,FF
C:00295c   +          STH     TRS_SECONDS+1,FF
C:00295c 82db      STD     Y+TRS_SECONDS+1,FF
C:00295d 6140              ORI     FLAGS1,0B00010000
C:00295e d09d              RCALL   T_RS_CLRBUFFS
C:00295f 01fe              MOVW    ZL,YL
C:002960 d067              RCALL   T_RS_STATUS
         
C:002961 940e 0ffc T_RS_1: CALL    INKEY
C:002963 f051              BREQ    T_RS_2
C:002964 3209              CPI     DATA,KEY_SPACE
C:002965 f3a9              BREQ    T_RS_0
C:002966 fd11              SBRC    TEMP,PS2K_BIT_EXTKEY
C:002967 c006              RJMP    T_RS_2
C:002968 3706              CPI     DATA,KEY_ESC
C:002969 f421              BRNE    T_RS_2
C:00296a d091              RCALL   T_RS_CLRBUFFS
C:00296b 7e4f              CBR     FLAGS1,0B00010000
         
C:00296c   +          FREEMEM 10
C:00296c 962a      ADIW    YL,10
C:00296d 9508              RET
         
C:00296e 01fe      T_RS_2: MOVW    ZL,YL
C:00296f 940e 0e29         CALL    CHECK_TIMEOUT_MS
C:002971 f408              BRCC    T_RS_3
C:002972 d055              RCALL   T_RS_STATUS
C:002973 d01c      T_RS_3: RCALL   T_RS_BUFFBAR
C:002974 940e 0de4 T_RS_5: CALL    UART_CHK_CTS
C:002976 9110 010b         LDS     TEMP,UART_TX_LN
C:002978 3810              CPI     TEMP,UART_TXBSIZE
C:002979 f738              BRCC    T_RS_1
C:00297a 940e 0d7d         CALL    UART_GETCHAR
C:00297c f321              BREQ    T_RS_1
C:00297d 940e 0d58         CALL    UART_PUTCHAR
C:00297f   +          LDH     XL,TRS_COUNT_TOTAL+0
C:00297f 81ae      LDD     XL,Y+TRS_COUNT_TOTAL+0
C:002980   +          LDH     XH,TRS_COUNT_TOTAL+1
C:002980 81bf      LDD     XH,Y+TRS_COUNT_TOTAL+1
C:002981   +          LDH     ZL,TRS_COUNT_TOTAL+2
C:002981 85e8      LDD     ZL,Y+TRS_COUNT_TOTAL+2
C:002982   +          LDH     ZH,TRS_COUNT_TOTAL+3
C:002982 85f9      LDD     ZH,Y+TRS_COUNT_TOTAL+3
C:002983 9611              ADIW    XL,1
C:002984 1def              ADC     ZL,NULL
C:002985 1dff              ADC     ZH,NULL
C:002986   +          STH     TRS_COUNT_TOTAL+0,XL
C:002986 83ae      STD     Y+TRS_COUNT_TOTAL+0,XL
C:002987   +          STH     TRS_COUNT_TOTAL+1,XH
C:002987 83bf      STD     Y+TRS_COUNT_TOTAL+1,XH
C:002988   +          STH     TRS_COUNT_TOTAL+2,ZL
C:002988 87e8      STD     Y+TRS_COUNT_TOTAL+2,ZL
C:002989   +          STH     TRS_COUNT_TOTAL+3,ZH
C:002989 87f9      STD     Y+TRS_COUNT_TOTAL+3,ZH
C:00298a   +          LDH     XL,TRS_COUNT_LAST+0
C:00298a 81ac      LDD     XL,Y+TRS_COUNT_LAST+0
C:00298b   +          LDH     XH,TRS_COUNT_LAST+1
C:00298b 81bd      LDD     XH,Y+TRS_COUNT_LAST+1
C:00298c 9611              ADIW    XL,1
C:00298d   +          STH     TRS_COUNT_LAST+0,XL
C:00298d 83ac      STD     Y+TRS_COUNT_LAST+0,XL
C:00298e   +          STH     TRS_COUNT_LAST+1,XH
C:00298e 83bd      STD     Y+TRS_COUNT_LAST+1,XH
C:00298f cfe4              RJMP    T_RS_5
         ;
         ;--------------------------------------
         ;
          T_RS_BUFFBAR:
C:002990 e0ac              LDI     XL,12
C:002991 e1b2              LDI     XH,18
C:002992 940e 1708         CALL    SCR_SET_CURSOR
C:002994 9120 010e         LDS     COUNT,UART_RX_LN
          .ENDIF
          .IF (UART_RXBSIZE>64)
C:002996 9526              LSR     COUNT
          .ENDIF
          .IF (UART_RXBSIZE>32)
C:002997 9523              INC     COUNT
C:002998 9526              LSR     COUNT
          .ENDIF
C:002999 d01c              RCALL   T_RSBAR0
C:00299a ea1e              LDI     TEMP,$AE
C:00299b 9b95              SBIS    PORTD,5
C:00299c ec10              LDI     TEMP,$C0
C:00299d e023              LDI     COUNT,3
C:00299e 940e 1751         CALL    SCR_FILL_ATTR
C:0029a0 ed1f              LDI     TEMP,$DF
C:0029a1 940e 1705         CALL    SCR_SET_ATTR
         
C:0029a3 e0ac              LDI     XL,12
C:0029a4 e1b3              LDI     XH,19
C:0029a5 940e 1708         CALL    SCR_SET_CURSOR
C:0029a7 9120 010b         LDS     COUNT,UART_TX_LN
          .ENDIF
          .IF (UART_TXBSIZE>64)
C:0029a9 9526              LSR     COUNT
          .ENDIF
          .IF (UART_TXBSIZE>32)
C:0029aa 9523              INC     COUNT
C:0029ab 9526              LSR     COUNT
          .ENDIF
C:0029ac d009              RCALL   T_RSBAR0
C:0029ad ea1e              LDI     TEMP,$AE
C:0029ae 9bb6              SBIS    PINB,6
C:0029af ec10              LDI     TEMP,$C0
C:0029b0 e023              LDI     COUNT,3
C:0029b1 940e 1751         CALL    SCR_FILL_ATTR
C:0029b3 ed1f              LDI     TEMP,$DF
C:0029b4 940c 1705         JMP     SCR_SET_ATTR
         ;
         ;--------------------------------------
         ;
          T_RSBAR0:
C:0029b6 e200              LDI     DATA,32
C:0029b7 1b02              SUB     DATA,COUNT
C:0029b8 2322              TST     COUNT
C:0029b9 f029              BREQ    T_RSBAR1
C:0029ba 930f              PUSH    DATA
C:0029bb ed0b              LDI     DATA,$DB ;"█"
C:0029bc 940e 174c         CALL    SCR_FILL_CHAR
C:0029be 910f              POP     DATA
          T_RSBAR1:
C:0029bf 2300              TST     DATA
C:0029c0 f021              BREQ    T_RSBAR2
C:0029c1 2f20              MOV     COUNT,DATA
C:0029c2 eb00              LDI     DATA,$B0 ;"░"
C:0029c3 940e 174c         CALL    SCR_FILL_CHAR
          T_RSBAR2:
C:0029c5 e200              LDI     DATA,$20 ;" "
C:0029c6 940c 1742         JMP     SCR_PUTCHAR
         ;
         ;--------------------------------------
         ;
          T_RS_STATUS:
C:0029c8   +          LDIW    1000
C:0029c8 ee88      LDI     WL,LOW(1000)
C:0029c9 e093      LDI     WH,HIGH(1000)
C:0029ca 940e 0e19         CALL    SET_TIMEOUT_MS
         
C:0029cc e2a0              LDI     XL,32
C:0029cd e1b0              LDI     XH,16
C:0029ce 940e 1708         CALL    SCR_SET_CURSOR
C:0029d0   +          LDH     XL,TRS_SECONDS+0
C:0029d0 81aa      LDD     XL,Y+TRS_SECONDS+0
C:0029d1   +          LDH     XH,TRS_SECONDS+1
C:0029d1 81bb      LDD     XH,Y+TRS_SECONDS+1
C:0029d2 9611              ADIW    XL,1
C:0029d3 f431              BRNE    T_RSSTAT1
C:0029d4   +          STH     TRS_COUNT_LAST+0,NULL
C:0029d4 82fc      STD     Y+TRS_COUNT_LAST+0,NULL
C:0029d5   +          STH     TRS_COUNT_LAST+1,NULL
C:0029d5 82fd      STD     Y+TRS_COUNT_LAST+1,NULL
C:0029d6   +          STH     TRS_COUNT_TOTAL+0,NULL
C:0029d6 82fe      STD     Y+TRS_COUNT_TOTAL+0,NULL
C:0029d7   +          STH     TRS_COUNT_TOTAL+1,NULL
C:0029d7 82ff      STD     Y+TRS_COUNT_TOTAL+1,NULL
C:0029d8   +          STH     TRS_COUNT_TOTAL+2,NULL
C:0029d8 86f8      STD     Y+TRS_COUNT_TOTAL+2,NULL
C:0029d9   +          STH     TRS_COUNT_TOTAL+3,NULL
C:0029d9 86f9      STD     Y+TRS_COUNT_TOTAL+3,NULL
          T_RSSTAT1:
C:0029da   +          STH     TRS_SECONDS+0,XL
C:0029da 83aa      STD     Y+TRS_SECONDS+0,XL
C:0029db   +          STH     TRS_SECONDS+1,XH
C:0029db 83bb      STD     Y+TRS_SECONDS+1,XH
C:0029dc 940e 1522         CALL    DECWORD
         
C:0029de e1a2              LDI     XL,18
C:0029df e1b1              LDI     XH,17
C:0029e0 940e 1708         CALL    SCR_SET_CURSOR
C:0029e2   +          LDH     XL,TRS_COUNT_LAST+0
C:0029e2 81ac      LDD     XL,Y+TRS_COUNT_LAST+0
C:0029e3   +          LDH     XH,TRS_COUNT_LAST+1
C:0029e3 81bd      LDD     XH,Y+TRS_COUNT_LAST+1
C:0029e4 940e 1522         CALL    DECWORD
C:0029e6   +          STH     TRS_COUNT_LAST+0,NULL
C:0029e6 82fc      STD     Y+TRS_COUNT_LAST+0,NULL
C:0029e7   +          STH     TRS_COUNT_LAST+1,NULL
C:0029e7 82fd      STD     Y+TRS_COUNT_LAST+1,NULL
         
C:0029e8 e2a3              LDI     XL,35
C:0029e9 e1b1              LDI     XH,17
C:0029ea 940e 1708         CALL    SCR_SET_CURSOR
C:0029ec   +          LDH     WL,TRS_SECONDS+0
C:0029ec 818a      LDD     WL,Y+TRS_SECONDS+0
C:0029ed   +          LDH     WH,TRS_SECONDS+1
C:0029ed 819b      LDD     WH,Y+TRS_SECONDS+1
C:0029ee 2388              TST     WL
C:0029ef f421              BRNE    T_RSSTAT2
C:0029f0 2399              TST     WH
C:0029f1 f411              BRNE    T_RSSTAT2
C:0029f2 01dc              MOVW    XL,WL
C:0029f3 c006              RJMP    T_RSSTAT3
          T_RSSTAT2:
C:0029f4   +          LDH     XL,TRS_COUNT_TOTAL+0
C:0029f4 81ae      LDD     XL,Y+TRS_COUNT_TOTAL+0
C:0029f5   +          LDH     XH,TRS_COUNT_TOTAL+1
C:0029f5 81bf      LDD     XH,Y+TRS_COUNT_TOTAL+1
C:0029f6   +          LDH     ZL,TRS_COUNT_TOTAL+2
C:0029f6 85e8      LDD     ZL,Y+TRS_COUNT_TOTAL+2
C:0029f7   +          LDH     ZH,TRS_COUNT_TOTAL+3
C:0029f7 85f9      LDD     ZH,Y+TRS_COUNT_TOTAL+3
C:0029f8 940e 262e         CALL    DIV3216U
          T_RSSTAT3:
C:0029fa 940c 1522         JMP     DECWORD
         ;
         ;--------------------------------------
         ;
          T_RS_CLRBUFFS:
          .IFNDEF DEBUG_FPGA_OUT
C:0029fc 94f8              CLI
C:0029fd 9110 0109         LDS     TEMP,UART_TX_HD
C:0029ff 9310 010a         STS     UART_TX_TL,TEMP
C:002a01 92f0 010b         STS     UART_TX_LN,NULL
C:002a03 9110 010c         LDS     TEMP,UART_RX_HD
C:002a05 9310 010d         STS     UART_RX_TL,TEMP
C:002a07 92f0 010e         STS     UART_RX_LN,NULL
C:002a09   +          RTS_CLR
C:002a09 9895      CBI     PORTD,5
C:002a0a 9478              SEI
          .ENDIF
C:002a0b 9508              RET
         ;
         ;--------------------------------------
         ;
          ;
          .ENDIF
         ;
         ;--------------------------------------
         ;
C:002a0c 94f8      START:  CLI
C:002a0d 2400              CLR     R0
C:002a0e   +          LDIZ    $0001
C:002a0e e0e1      LDI     ZL,LOW($0001)
C:002a0f e0f0      LDI     ZH,HIGH($0001)
C:002a10 9201      CLRALL1:ST      Z+,R0
C:002a11 31ee              CPI     ZL,$1E
C:002a12 f7e9              BRNE    CLRALL1
C:002a13 e2e0              LDI     ZL,$20
C:002a14 92f1      CLRALL2:ST      Z+,NULL
C:002a15 31f1              CPI     ZH,$11
C:002a16 f7e9              BRNE    CLRALL2
C:002a17 94e3              INC     ONE
C:002a18 94da              DEC     FF
         ;
C:002a19 ef1f              LDI     TEMP,LOW(HSTACK)
C:002a1a bf1d              OUT     SPL,TEMP
C:002a1b e110              LDI     TEMP,HIGH(HSTACK)
C:002a1c bf1e              OUT     SPH,TEMP
C:002a1d   +          LDIX    RND
C:002a1d e0a0      LDI     XL,LOW(RND)
C:002a1e e0b1      LDI     XH,HIGH(RND)
C:002a1f 931d              ST      X+,TEMP
C:002a20 92dd              ST      X+,FF
C:002a21 92ed              ST      X+,ONE
C:002a22 92dd              ST      X+,FF
         ;
C:002a23   +          LDIW    EE_MODE1
C:002a23 e082      LDI     WL,LOW(EE_MODE1)
C:002a24 e09f      LDI     WH,HIGH(EE_MODE1)
C:002a25 940e 266e         CALL    EEPROM_READ
C:002a27 2ea0              MOV     MODE1,DATA
C:002a28 e083              LDI     WL,LOW(EE_LANG)
C:002a29 940e 266e         CALL    EEPROM_READ
C:002a2b 3002              CPI     DATA,MAX_LANG
C:002a2c f008              BRCS    RDE1
C:002a2d 2700              CLR     DATA
C:002a2e 0f00      RDE1:   LSL     DATA
C:002a2f 2eb0              MOV     LANG,DATA
         ;
C:002a30 940e 0e48         CALL    PINTEST
         ; - - - - - - - - - - - - - - -
C:002a32 ef1f              LDI     TEMP,      0B11111111
C:002a33   +          OUTPORT PORTG,TEMP
C:002a33 9310 0065 STS     PORTG+$20*(PORTG<$40),TEMP
C:002a35 e010              LDI     TEMP,      0B00000000
C:002a36   +          OUTPORT DDRG,TEMP
C:002a36 9310 0064 STS     DDRG+$20*(DDRG<$40),TEMP
         
C:002a38 e018              LDI     TEMP,      0B00001000
C:002a39   +          OUTPORT PORTF,TEMP
C:002a39 9310 0062 STS     PORTF+$20*(PORTF<$40),TEMP
C:002a3b   +          OUTPORT DDRF,TEMP
C:002a3b 9310 0061 STS     DDRF+$20*(DDRF<$40),TEMP
         
C:002a3d ef13              LDI     TEMP,      0B11110011
C:002a3e b913              OUT     PORTE,TEMP
C:002a3f e010              LDI     TEMP,      0B00000000
C:002a40 b912              OUT     DDRE,TEMP
         
C:002a41 ef1f              LDI     TEMP,      0B11111111
C:002a42 bb12              OUT     PORTD,TEMP
C:002a43 e010              LDI     TEMP,      0B00000000
C:002a44 bb11              OUT     DDRD,TEMP
         
C:002a45 ed1f              LDI     TEMP,      0B11011111
C:002a46 bb15              OUT     PORTC,TEMP
C:002a47 e010              LDI     TEMP,      0B00000000
C:002a48 bb14              OUT     DDRC,TEMP
         
C:002a49 ef19              LDI     TEMP,      0B11111001
C:002a4a bb18              OUT     PORTB,TEMP
C:002a4b e817              LDI     TEMP,      0B10000111
C:002a4c bb17              OUT     DDRB,TEMP
         
C:002a4d ef1f              LDI     TEMP,      0B11111111
C:002a4e bb1b              OUT     PORTA,TEMP
C:002a4f e010              LDI     TEMP,      0B00000000
C:002a50 bb1a              OUT     DDRA,TEMP
         ; - - - - - - - - - - - - - - -
C:002a51   +          LDIZ    MLMSG_STATUSOF_CRLF*2
C:002a51 e1e2      LDI     ZL,LOW(MLMSG_STATUSOF_CRLF*2)
C:002a52 e0f2      LDI     ZH,HIGH(MLMSG_STATUSOF_CRLF*2)
C:002a53 940e 2ae2         CALL    POWER_STATUS
C:002a55 9b00              SBIS    PINF,0 ;VCC5
C:002a56 c003              RJMP    UP10
C:002a57 9b9d              SBIS    PINC,5 ;POWERGOOD
C:002a58 c00c              RJMP    UP11
C:002a59 c014              RJMP    UP19
C:002a5a   +  UP10:   LDIZ    MLMSG_POWER_ON*2
C:002a5a e4ea      LDI     ZL,LOW(MLMSG_POWER_ON*2)
C:002a5b e0f2      LDI     ZH,HIGH(MLMSG_POWER_ON*2)
C:002a5c 940e 14f8         CALL    PRINTMLSTR
         ;ждём включения ATX, а потом ещё чуть-чуть.
C:002a5e 9900      UP12:   SBIC    PINF,0 ;VCC5
C:002a5f c005              RJMP    UP11
C:002a60   +          LDIZ    MLMSG_STATUSOF_CR*2
C:002a60 e1e6      LDI     ZL,LOW(MLMSG_STATUSOF_CR*2)
C:002a61 e0f2      LDI     ZH,HIGH(MLMSG_STATUSOF_CR*2)
C:002a62 940e 2ae2         CALL    POWER_STATUS
C:002a64 cff9              RJMP    UP12
C:002a65 ea2a      UP11:   LDI     COUNT,170 ;170 раз по 31 символу на скорости 115200 = ~500ms
C:002a66 932f      UP13:   PUSH    COUNT
C:002a67   +          LDIZ    MLMSG_STATUSOF_CR*2
C:002a67 e1e6      LDI     ZL,LOW(MLMSG_STATUSOF_CR*2)
C:002a68 e0f2      LDI     ZH,HIGH(MLMSG_STATUSOF_CR*2)
C:002a69 940e 2ae2         CALL    POWER_STATUS
C:002a6b 912f              POP     COUNT
C:002a6c 952a              DEC     COUNT
C:002a6d f7c1              BRNE    UP13
          UP19:
         ; - - - - - - - - - - - - - - -
C:002a6e   +          LDIZ    MLMSG_CFGFPGA*2
C:002a6e e7ee      LDI     ZL,LOW(MLMSG_CFGFPGA*2)
C:002a6f e0f2      LDI     ZH,HIGH(MLMSG_CFGFPGA*2)
C:002a70 940e 14f8         CALL    PRINTMLSTR
         ;SPI init
C:002a72 e011              LDI     TEMP,(1<<SPI2X)
C:002a73 b91e              OUT     SPSR,TEMP
C:002a74 e710              LDI     TEMP,(1<<SPE)|(1<<DORD)|(1<<MSTR)|(0<<CPOL)|(0<<CPHA)
C:002a75 b91d              OUT     SPCR,TEMP
         ;загрузка FPGA
C:002a76   +          INPORT  TEMP,DDRF
C:002a76 9110 0061 LDS     TEMP,DDRF+$20*(DDRF<$40)
C:002a78 6011              SBR     TEMP,(1<<nCONFIG)
C:002a79   +          OUTPORT DDRF,TEMP
C:002a79 9310 0061 STS     DDRF+$20*(DDRF<$40),TEMP
         
C:002a7b   +          DELAY_US 40
          .IF (40<70)
C:002a7b e983      LDI     WL,LOW(40*36864/10000)
C:002a7c 958a      DLY_US1:DEC     WL      

C:002a7d f7f1      BRNE    DLY_US1 

          .ELSE
         
C:002a7e   +          INPORT  TEMP,DDRF
C:002a7e 9110 0061 LDS     TEMP,DDRF+$20*(DDRF<$40)
C:002a80 7f1e              CBR     TEMP,(1<<nCONFIG)
C:002a81   +          OUTPORT DDRF,TEMP
C:002a81 9310 0061 STS     DDRF+$20*(DDRF<$40),TEMP
         
C:002a83 9b01      LDFPGA1:SBIS    PINF,nSTATUS
C:002a84 cffe              RJMP    LDFPGA1
         
C:002a85   +          LDIZ    PACKED_FPGA*2
C:002a85 e0e0      LDI     ZL,LOW(PACKED_FPGA*2)
C:002a86 e0f0      LDI     ZH,HIGH(PACKED_FPGA*2)
C:002a87 beeb              OUT     RAMPZ,ONE
C:002a88 940e 1cdd         CALL    DMLZ_INIT
C:002a8a 940e 1ceb LDFPGA3:CALL    DMLZ_GETBYTE
C:002a8c f021              BREQ    LDFPGA_DONE
C:002a8d b90f              OUT     SPDR,DATA
C:002a8e 9b77      LDFPGA2:SBIS    SPSR,SPIF
C:002a8f cffe              RJMP    LDFPGA2
C:002a90 cff9              RJMP    LDFPGA3
          LDFPGA_DONE:
C:002a91 9b02              SBIS    PINF,CONF_DONE
C:002a92 cffe              RJMP    LDFPGA_DONE
         
         ;SPI reinit
C:002a93 e510              LDI     TEMP,(1<<SPE)|(0<<DORD)|(1<<MSTR)|(0<<CPOL)|(0<<CPHA)
C:002a94 b91d              OUT     SPCR,TEMP
         ; - - - - - - - - - - - - - - -
C:002a95   +          LDIY    DSTACK
C:002a95 e0c0      LDI     YL,LOW(DSTACK)
C:002a96 e0d3      LDI     YH,HIGH(DSTACK)
C:002a97   +          LDIZ    MLMSG_DONE1*2
C:002a97 ece4      LDI     ZL,LOW(MLMSG_DONE1*2)
C:002a98 e0f2      LDI     ZH,HIGH(MLMSG_DONE1*2)
C:002a99 940e 14f8         CALL    PRINTMLSTR
         ;
C:002a9b e020              LDI     COUNT,0
C:002a9c 940e 2643         CALL    RANDOM ;note: используются особенности
C:002a9e ea1a              LDI     TEMP,SCR_ATTR
C:002a9f 940e 176f         CALL    FPGA_REG
C:002aa1 940e 2643 SPITST1:CALL    RANDOM ;note: используются особенности
C:002aa3 940e 1774         CALL    FPGA_SAME_REG
C:002aa5 9500              COM     DATA
C:002aa6 9110 0101         LDS     TEMP,RND+1 ;предыдущее результат RANDOM
C:002aa8 1701              CP      DATA,TEMP
C:002aa9 f009              BREQ    SPITST2
C:002aaa c04b              RJMP    SPI_ERROR
C:002aab 952a      SPITST2:DEC     COUNT
C:002aac f7a1              BRNE    SPITST1
C:002aad e70f              LDI     DATA,$7F
C:002aae 940e 1774         CALL    FPGA_SAME_REG
C:002ab0   +          LDIZ    MSG_OK*2
C:002ab0 e1e4      LDI     ZL,LOW(MSG_OK*2)
C:002ab1 e0f3      LDI     ZH,HIGH(MSG_OK*2)
C:002ab2 940e 14fd         CALL    PRINTSTRZ
         ;
C:002ab4   +          DELAY_US 200
          .IF (200<70)
C:002ab4 e288      LDI     WL,LOW(200*27648/10000)
C:002ab5 e092      LDI     WH,HIGH(200*27648/10000)
C:002ab6 9701      DLY_US2:SBIW    WL,1    

C:002ab7 f7f1      BRNE    DLY_US2 

          .ENDIF
C:002ab8 940e 0cf6         CALL    UART_INIT
C:002aba 940e 0f2c         CALL    PS2K_INIT
C:002abc 940e 0df2         CALL    TIMERS_INIT
C:002abe b71a              IN      TEMP,EICRB
C:002abf 6210              ORI     TEMP,(1<<ISC61)|(0<<ISC60)
C:002ac0 bf1a              OUT     EICRB,TEMP
C:002ac1 b719              IN      TEMP,EIMSK
C:002ac2 6410              ORI     TEMP,(1<<INT6)
C:002ac3 bf19              OUT     EIMSK,TEMP
C:002ac4 9478              SEI
         
C:002ac5 2d0a              MOV     DATA,MODE1
C:002ac6 7800              ANDI    DATA,0B10000000
C:002ac7 ea1f              LDI     TEMP,SCR_MODE
C:002ac8 940e 176f         CALL    FPGA_REG
C:002aca e000              LDI     DATA,0B00000000
C:002acb e514              LDI     TEMP,INT_CONTROL
C:002acc 940e 176f         CALL    FPGA_REG
         
C:002ace 940e 1061         CALL    PS2K_DETECT_KBD
         
C:002ad0 e001              LDI     DATA,$01
C:002ad1 e510              LDI     TEMP,MTST_CONTROL
C:002ad2 940e 176f         CALL    FPGA_REG
         
C:002ad4   +          LDIZ    MSG_READY*2
C:002ad4 ebee      LDI     ZL,LOW(MSG_READY*2)
C:002ad5 e5f5      LDI     ZH,HIGH(MSG_READY*2)
C:002ad6 940e 14fd         CALL    PRINTSTRZ
C:002ad8 940e 16f9         CALL    SCR_KBDSETLED
         ;
          NOEXIT:
C:002ada   +          LDIZ    MENU_MAIN*2
C:002ada e6e2      LDI     ZL,LOW(MENU_MAIN*2)
C:002adb e0f4      LDI     ZH,HIGH(MENU_MAIN*2)
C:002adc 940e 15d1         CALL    MENU
C:002ade cffb              RJMP    NOEXIT
         ;
          MSG_READY:
                  .DB     "---",$0D,$0A,0
C:002ADF 2D2D2D0D0A00
         ;
         ;--------------------------------------
         ;
          POWER_STATUS:
C:002ae2 940e 14f8         CALL    PRINTMLSTR
C:002ae4   +          LDIZ    MSG_POWER_PG*2
C:002ae4 e3e6      LDI     ZL,LOW(MSG_POWER_PG*2)
C:002ae5 e0f2      LDI     ZH,HIGH(MSG_POWER_PG*2)
C:002ae6 940e 14fd         CALL    PRINTSTRZ
C:002ae8 e300              LDI     DATA,$30 ;"0"
C:002ae9 999d              SBIC    PINC,5 ;POWERGOOD
C:002aea e301              LDI     DATA,$31 ;"1"
C:002aeb 940e 1513         CALL    HEXHALF
C:002aed   +          LDIZ    MSG_POWER_VCC5*2
C:002aed e4e2      LDI     ZL,LOW(MSG_POWER_VCC5*2)
C:002aee e0f2      LDI     ZH,HIGH(MSG_POWER_VCC5*2)
C:002aef 940e 14fd         CALL    PRINTSTRZ
C:002af1 e300              LDI     DATA,$30 ;"0"
C:002af2 9900              SBIC    PINF,0 ;VCC5
C:002af3 e301              LDI     DATA,$31 ;"1"
C:002af4 940c 1513         JMP     HEXHALF
         ;
         ;--------------------------------------
         ;
          SPI_ERROR:
C:002af6   +          LDIZ    MLMSG_SOMEERRORS*2
C:002af6 e1e8      LDI     ZL,LOW(MLMSG_SOMEERRORS*2)
C:002af7 e0f3      LDI     ZH,HIGH(MLMSG_SOMEERRORS*2)
C:002af8 940e 14f8         CALL    PRINTMLSTR
C:002afa   +  SPITST5:LDIW    50000
C:002afa e580      LDI     WL,LOW(50000)
C:002afb ec93      LDI     WH,HIGH(50000)
C:002afc   +          LDIX    0
C:002afc e0a0      LDI     XL,LOW(0)
C:002afd e0b0      LDI     XH,HIGH(0)
C:002afe 940e 2643 SPITST3:CALL    RANDOM ;note: используются особенности
C:002b00 940e 1774         CALL    FPGA_SAME_REG
C:002b02 9500              COM     DATA
C:002b03 9110 0101         LDS     TEMP,RND+1 ;предыдущее результат RANDOM
C:002b05 1701              CP      DATA,TEMP
C:002b06 f009              BREQ    SPITST4
C:002b07 9611              ADIW    XL,1
C:002b08 9701      SPITST4:SBIW    WL,1
C:002b09 f7a1              BRNE    SPITST3
                 ;PUSHX
C:002b0a   +          LDIZ    MLMSG_SPI_TEST*2
C:002b0a e4e0      LDI     ZL,LOW(MLMSG_SPI_TEST*2)
C:002b0b e0f3      LDI     ZH,HIGH(MLMSG_SPI_TEST*2)
C:002b0c 940e 14f8         CALL    PRINTMLSTR
                 ;POPX
C:002b0e 940e 1522         CALL    DECWORD
C:002b10 cfe9              RJMP    SPITST5
         ;
         ;--------------------------------------
         ;
         ;NOTHING:RET
         ;
         ;--------------------------------------
         ;


Segment usage:
   Code      :     32294 words (64588 bytes)
   Data      :       366 bytes
   EEPROM    :         4 bytes

Assembly completed with no errors.
